{
    "sourceFile": "src/renderer/src/components/Editor/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 83,
            "patches": [
                {
                    "date": 1665496693570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1665496704134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,8 @@\n interface MilkdownEditor {\n   onHeadersChange: Function\n }\n export const MilkdownEditor: React.FC<MilkdownEditor> = ({ onHeadersChange }) => {\n-  const [headers, setHeaders] = useState([{}])\n   useEffect(() => {\n     console.log('headers-change')\n     onHeadersChange(headers)\n   }, [headers.length])\n"
                },
                {
                    "date": 1665496710646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,8 @@\n interface MilkdownEditor {\n   onHeadersChange: Function\n }\n export const MilkdownEditor: React.FC<MilkdownEditor> = ({ onHeadersChange }) => {\n-  useEffect(() => {\n-    console.log('headers-change')\n-    onHeadersChange(headers)\n-  }, [headers.length])\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root),\n"
                },
                {
                    "date": 1665497543528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n-import { defaultMarkdown } from '../../constant'\n+\n import { listenerCtx, listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n"
                },
                {
                    "date": 1665497548834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,13 @@\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root),\n-          ctx.set(defaultValueCtx, defaultMarkdown),\n+          ctx.set(defaultValueCtx, `# H1\n+          ## H2\n+          ### H3\n+          #### H4\n+          ###### H5`),\n           // // 代码的默认形式？\n           // ctx.set(defaultValueCtx,{\n           //     type:'html',\n           //     dom:document.querySelector('#pre') as HTMLElement\n"
                },
                {
                    "date": 1665500699045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,21 +13,30 @@\n // 亮色主题\n import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n import { nordDark } from '@milkdown/theme-nord'\n+// 官方引用的图标库，如菜单栏需要使用到\n+import '@material-design-icons/font'\n+// 数学公式渲染\n+import 'katex/dist/katex.min.css'\n+// 代码高亮\n+import 'prism-themes/themes/prism-material-oceanic.min.css'\n interface MilkdownEditor {\n   onHeadersChange: Function\n }\n export const MilkdownEditor: React.FC<MilkdownEditor> = ({ onHeadersChange }) => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root),\n-          ctx.set(defaultValueCtx, `# H1\n+          ctx.set(\n+            defaultValueCtx,\n+            `# H1\n           ## H2\n           ### H3\n           #### H4\n-          ###### H5`),\n+          ###### H5`\n+          ),\n           // // 代码的默认形式？\n           // ctx.set(defaultValueCtx,{\n           //     type:'html',\n           //     dom:document.querySelector('#pre') as HTMLElement\n"
                },
                {
                    "date": 1665500707677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n interface MilkdownEditor {\n   onHeadersChange: Function\n }\n-export const MilkdownEditor: React.FC<MilkdownEditor> = ({ onHeadersChange }) => {\n+export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root),\n"
                },
                {
                    "date": 1665500716444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n interface MilkdownEditor {\n-  onHeadersChange: Function\n }\n export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n"
                },
                {
                    "date": 1665503483477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,23 +19,20 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-interface MilkdownEditor {\n-}\n+interface MilkdownEditor {}\n+const DEFAULT_MARKDOWN = `# H1\n+## H2\n+### H3\n+#### H4\n+###### H5`\n export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root),\n-          ctx.set(\n-            defaultValueCtx,\n-            `# H1\n-          ## H2\n-          ### H3\n-          #### H4\n-          ###### H5`\n-          ),\n+          ctx.set(defaultValueCtx, DEFAULT_MARKDOWN),\n           // // 代码的默认形式？\n           // ctx.set(defaultValueCtx,{\n           //     type:'html',\n           //     dom:document.querySelector('#pre') as HTMLElement\n"
                },
                {
                    "date": 1665555339805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,11 +45,16 @@\n       .use(listener)\n       .use(prism)\n       .use(menu)\n   )\n-\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n+  useEffect(() => {\n+    const handleRightClick = () => {}\n+    const editor = document.querySelector('.editor')\n+    editor?.addEventListener('contextmenu', handleRightClick)\n+    return editor?.removeEventListener('contextmenu', handleRightClick)\n+  })\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665555348436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,11 @@\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n   useEffect(() => {\n-    const handleRightClick = () => {}\n+    const handleRightClick = () => {\n+      console.log('right-click')\n+    }\n     const editor = document.querySelector('.editor')\n     editor?.addEventListener('contextmenu', handleRightClick)\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n"
                },
                {
                    "date": 1665589054134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n ## H2\n ### H3\n #### H4\n ###### H5`\n+window.api.onUpdateEditor\n export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n"
                },
                {
                    "date": 1665590638679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,11 @@\n ## H2\n ### H3\n #### H4\n ###### H5`\n-window.api.onUpdateEditor\n+window.api.onUpdateEditor((e: any,value: any)=>{\n+  console.log(value)\n+})\n export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n"
                },
                {
                    "date": 1665591176549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,10 @@\n ## H2\n ### H3\n #### H4\n ###### H5`\n-window.api.onUpdateEditor((e: any,value: any)=>{\n+window.api.onUpdateEditor((e,value)=>{\n+  console.log(e)\n   console.log(value)\n })\n export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const { editor, getInstance } = useEditor((root) =>\n"
                },
                {
                    "date": 1665632240457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useEffect, useState } from 'react'\n-import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n+import { defaultValueCtx, Editor, editorViewCtx, rootCtx, serializerCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n@@ -29,20 +29,17 @@\n window.api.onUpdateEditor((e,value)=>{\n   console.log(e)\n   console.log(value)\n })\n+\n+\n export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root),\n           ctx.set(defaultValueCtx, DEFAULT_MARKDOWN),\n-          // // 代码的默认形式？\n-          // ctx.set(defaultValueCtx,{\n-          //     type:'html',\n-          //     dom:document.querySelector('#pre') as HTMLElement\n-          //   })\n-          ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {})\n+\n       })\n       .use(nord)\n       .use(commonmark)\n       .use(history)\n@@ -53,8 +50,12 @@\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n+  instance?.config(ctx =>{\n+    ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {})\n+\n+  })\n   useEffect(() => {\n     const handleRightClick = () => {\n       console.log('right-click')\n     }\n"
                },
                {
                    "date": 1665632248101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,11 @@\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n   instance?.config(ctx =>{\n-    ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {})\n+    ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {\n+      console.log(markdown)\n+    })\n \n   })\n   useEffect(() => {\n     const handleRightClick = () => {\n"
                },
                {
                    "date": 1665632267993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root),\n-          ctx.set(defaultValueCtx, DEFAULT_MARKDOWN),\n+          ctx.set(defaultValueCtx, DEFAULT_MARKDOWN)\n \n       })\n       .use(nord)\n       .use(commonmark)\n"
                },
                {
                    "date": 1665632312182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,11 @@\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root),\n           ctx.set(defaultValueCtx, DEFAULT_MARKDOWN)\n-\n+          ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {\n+            console.log(markdown)\n+          })\n       })\n       .use(nord)\n       .use(commonmark)\n       .use(history)\n"
                },
                {
                    "date": 1665632376682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,13 +35,13 @@\n export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n-        ctx.set(rootCtx, root),\n+          ctx.set(rootCtx, root),\n           ctx.set(defaultValueCtx, DEFAULT_MARKDOWN)\n-          ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {\n-            console.log(markdown)\n-          })\n+          // ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {\n+          //   console.log(markdown)\n+          // })\n       })\n       .use(nord)\n       .use(commonmark)\n       .use(history)\n@@ -52,9 +52,9 @@\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n-  instance?.config(ctx =>{\n+   instance?.config(ctx =>{\n     ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {\n       console.log(markdown)\n     })\n \n"
                },
                {
                    "date": 1665632588624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n-\n+import {useConfig} from './hooks/useConfig' \n import { listenerCtx, listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n@@ -37,11 +37,9 @@\n     Editor.make()\n       .config((ctx) => {\n           ctx.set(rootCtx, root),\n           ctx.set(defaultValueCtx, DEFAULT_MARKDOWN)\n-          // ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {\n-          //   console.log(markdown)\n-          // })\n+          useConfig(ctx)\n       })\n       .use(nord)\n       .use(commonmark)\n       .use(history)\n@@ -52,14 +50,8 @@\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n-   instance?.config(ctx =>{\n-    ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {\n-      console.log(markdown)\n-    })\n-\n-  })\n   useEffect(() => {\n     const handleRightClick = () => {\n       console.log('right-click')\n     }\n"
                },
                {
                    "date": 1665632837995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n-import React, { useEffect, useState } from 'react'\n-import { defaultValueCtx, Editor, editorViewCtx, rootCtx, serializerCtx } from '@milkdown/core'\n+import React, { useEffect } from 'react'\n+import { Editor, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n import {useConfig} from './hooks/useConfig' \n-import { listenerCtx, listener } from '@milkdown/plugin-listener'\n+import { listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n // 亮色主题\n@@ -20,13 +20,9 @@\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n interface MilkdownEditor {}\n-const DEFAULT_MARKDOWN = `# H1\n-## H2\n-### H3\n-#### H4\n-###### H5`\n+\n window.api.onUpdateEditor((e,value)=>{\n   console.log(e)\n   console.log(value)\n })\n@@ -36,9 +32,8 @@\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n           ctx.set(rootCtx, root),\n-          ctx.set(defaultValueCtx, DEFAULT_MARKDOWN)\n           useConfig(ctx)\n       })\n       .use(nord)\n       .use(commonmark)\n@@ -50,13 +45,14 @@\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n+  // 右键菜单\n   useEffect(() => {\n     const handleRightClick = () => {\n       console.log('right-click')\n     }\n-    const editor = document.querySelector('.editor')\n+    const editor = document.querySelector('.milkdown')\n     editor?.addEventListener('contextmenu', handleRightClick)\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n   return <ReactEditor editor={editor} />\n"
                },
                {
                    "date": 1665633714401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useEffect } from 'react'\n-import { Editor, rootCtx } from '@milkdown/core'\n+import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n@@ -19,22 +19,25 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-interface MilkdownEditor {}\n+interface MilkdownEditor {\n+  markdown:string\n+}\n \n window.api.onUpdateEditor((e,value)=>{\n   console.log(e)\n   console.log(value)\n })\n \n \n-export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n+export const MilkdownEditor: React.FC<MilkdownEditor> = ({markdown}) => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n           ctx.set(rootCtx, root),\n-          useConfig(ctx)\n+          ctx.set(defaultValueCtx, markdown)\n+          // useConfig(ctx)\n       })\n       .use(nord)\n       .use(commonmark)\n       .use(history)\n"
                },
                {
                    "date": 1665633847510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n           ctx.set(rootCtx, root),\n-          ctx.set(defaultValueCtx, markdown)\n+          ctx.set(defaultValueCtx, '')\n           // useConfig(ctx)\n       })\n       .use(nord)\n       .use(commonmark)\n"
                },
                {
                    "date": 1665633864984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n           ctx.set(rootCtx, root),\n-          ctx.set(defaultValueCtx, '')\n+          ctx.set(defaultValueCtx, markdown)\n           // useConfig(ctx)\n       })\n       .use(nord)\n       .use(commonmark)\n"
                },
                {
                    "date": 1665634017801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n })\n \n \n export const MilkdownEditor: React.FC<MilkdownEditor> = ({markdown}) => {\n+  console.log(markdown)\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n           ctx.set(rootCtx, root),\n"
                },
                {
                    "date": 1665635050058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n-import React, { useEffect } from 'react'\n-import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n+import React, { useEffect, useRef, useState } from 'react'\n+import { Ctx, defaultValueCtx, Editor, editorViewCtx, parserCtx, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n-import { ReactEditor, useEditor } from '@milkdown/react'\n+import { EditorRef, ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n import {useConfig} from './hooks/useConfig' \n@@ -19,45 +19,50 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-interface MilkdownEditor {\n-  markdown:string\n-}\n+import { Slice } from \"prosemirror-model\";\n \n-window.api.onUpdateEditor((e,value)=>{\n-  console.log(e)\n-  console.log(value)\n-})\n+const MilkdownEditor: React.FC = () => {\n+  const editorRef = useRef<EditorRef | null>(null);\n+  const [isContentLoaded, setContentLoaded] = useState<boolean>(false);\n \n+const {editor}= useEditor(\n+      (root) => {\n+        return new Editor()\n+            .config((ctx) => {\n+                ctx.set(rootCtx, root);\n+                ctx.set(defaultValueCtx, \"Default value\");\n+            })\n+            .use(commonmark)\n+            .use(listener)\n+            .use(history);\n+      },\n+      [],\n+  );\n \n-export const MilkdownEditor: React.FC<MilkdownEditor> = ({markdown}) => {\n-  console.log(markdown)\n-  const { editor, getInstance } = useEditor((root) =>\n-    Editor.make()\n-      .config((ctx) => {\n-          ctx.set(rootCtx, root),\n-          ctx.set(defaultValueCtx, markdown)\n-          // useConfig(ctx)\n-      })\n-      .use(nord)\n-      .use(commonmark)\n-      .use(history)\n-      .use(listener)\n-      .use(prism)\n-      .use(menu)\n-  )\n-  const instance = getInstance()\n-  instance?.action((ctx) => {\n-    ctx.get(themeManagerCtx).switch(ctx, nordDark)\n-  })\n-  // 右键菜单\n-  useEffect(() => {\n-    const handleRightClick = () => {\n-      console.log('right-click')\n+useEffect(() => {\n+   if (editorRef.current) {\n+      const editor = editorRef.current.get();\n+      if (editor) {\n+        editor.action((ctx: Ctx) => {\n+          const view = ctx.get(editorViewCtx);\n+          const parser = ctx.get(parserCtx);\n+          const doc = parser('Content changed !!!');\n+          if (!doc) return;\n+          const state = view.state;\n+          view.dispatch(\n+            state.tr.replace(\n+              0,\n+              state.doc.content.size,\n+              new Slice(doc.content, 0, 0)\n+            )\n+          );\n+        });\n+      }\n     }\n-    const editor = document.querySelector('.milkdown')\n-    editor?.addEventListener('contextmenu', handleRightClick)\n-    return editor?.removeEventListener('contextmenu', handleRightClick)\n-  })\n-  return <ReactEditor editor={editor} />\n-}\n+},[isContentLoaded])\n+\n+  return <ReactEditor ref={editorRef} editor={editor} />;\n+};\n+\n+export default MilkdownEditor;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1665635085574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n import { Slice } from \"prosemirror-model\";\n \n-const MilkdownEditor: React.FC = () => {\n+export const MilkdownEditor: React.FC = () => {\n   const editorRef = useRef<EditorRef | null>(null);\n   const [isContentLoaded, setContentLoaded] = useState<boolean>(false);\n \n const {editor}= useEditor(\n@@ -63,6 +63,4 @@\n },[isContentLoaded])\n \n   return <ReactEditor ref={editorRef} editor={editor} />;\n };\n-\n-export default MilkdownEditor;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1665635099541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n import { Slice } from \"prosemirror-model\";\n \n-export const MilkdownEditor: React.FC = () => {\n+export const MilkEditor: React.FC = () => {\n   const editorRef = useRef<EditorRef | null>(null);\n   const [isContentLoaded, setContentLoaded] = useState<boolean>(false);\n \n const {editor}= useEditor(\n"
                },
                {
                    "date": 1665635129595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n import { Slice } from \"prosemirror-model\";\n \n-export const MilkEditor: React.FC = () => {\n+export const MilkdownEditor: React.FC = () => {\n   const editorRef = useRef<EditorRef | null>(null);\n   const [isContentLoaded, setContentLoaded] = useState<boolean>(false);\n \n const {editor}= useEditor(\n"
                },
                {
                    "date": 1665635273367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,29 +38,29 @@\n             .use(history);\n       },\n       [],\n   );\n-\n-useEffect(() => {\n-   if (editorRef.current) {\n-      const editor = editorRef.current.get();\n-      if (editor) {\n-        editor.action((ctx: Ctx) => {\n-          const view = ctx.get(editorViewCtx);\n-          const parser = ctx.get(parserCtx);\n-          const doc = parser('Content changed !!!');\n-          if (!doc) return;\n-          const state = view.state;\n-          view.dispatch(\n-            state.tr.replace(\n-              0,\n-              state.doc.content.size,\n-              new Slice(doc.content, 0, 0)\n-            )\n-          );\n-        });\n-      }\n+setTimeout(()=>{\n+  if (editorRef.current) {\n+    const editor = editorRef.current.get();\n+    if (editor) {\n+      editor.action((ctx: Ctx) => {\n+        const view = ctx.get(editorViewCtx);\n+        const parser = ctx.get(parserCtx);\n+        const doc = parser('Content changed !!!');\n+        if (!doc) return;\n+        const state = view.state;\n+        view.dispatch(\n+          state.tr.replace(\n+            0,\n+            state.doc.content.size,\n+            new Slice(doc.content, 0, 0)\n+          )\n+        );\n+      });\n     }\n-},[isContentLoaded])\n+  }\n+  console.log('chamge')\n+},3000)\n \n   return <ReactEditor ref={editorRef} editor={editor} />;\n };\n"
                },
                {
                    "date": 1665635288242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     if (editor) {\n       editor.action((ctx: Ctx) => {\n         const view = ctx.get(editorViewCtx);\n         const parser = ctx.get(parserCtx);\n-        const doc = parser('Content changed !!!');\n+        const doc = parser('## Content changed !!!');\n         if (!doc) return;\n         const state = view.state;\n         view.dispatch(\n           state.tr.replace(\n"
                },
                {
                    "date": 1665636113634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,47 +20,67 @@\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n import { Slice } from \"prosemirror-model\";\n+import React, { useEffect } from 'react'\n+import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n+import { nord } from '@milkdown/theme-nord'\n+import { ReactEditor, useEditor } from '@milkdown/react'\n+// 通用markdown预设\n+import { commonmark } from '@milkdown/preset-commonmark'\n+import { history } from '@milkdown/plugin-history'\n+import {useConfig} from './hooks/useConfig' \n+import { listener } from '@milkdown/plugin-listener'\n+import { prism } from '@milkdown/plugin-prism'\n+import { menu } from '@milkdown/plugin-menu'\n+import { themeManagerCtx } from '@milkdown/core'\n+// 亮色主题\n+import { nordLight } from '@milkdown/theme-nord'\n+// 暗色主题\n+import { nordDark } from '@milkdown/theme-nord'\n+// 官方引用的图标库，如菜单栏需要使用到\n+import '@material-design-icons/font'\n+// 数学公式渲染\n+import 'katex/dist/katex.min.css'\n+// 代码高亮\n+import 'prism-themes/themes/prism-material-oceanic.min.css'\n+interface MilkdownEditor {\n+  markdown:string\n+}\n \n-export const MilkdownEditor: React.FC = () => {\n-  const editorRef = useRef<EditorRef | null>(null);\n-  const [isContentLoaded, setContentLoaded] = useState<boolean>(false);\n+window.api.onUpdateEditor((e,value)=>{\n+  console.log(e)\n+  console.log(value)\n+})\n \n-const {editor}= useEditor(\n-      (root) => {\n-        return new Editor()\n-            .config((ctx) => {\n-                ctx.set(rootCtx, root);\n-                ctx.set(defaultValueCtx, \"Default value\");\n-            })\n-            .use(commonmark)\n-            .use(listener)\n-            .use(history);\n-      },\n-      [],\n-  );\n-setTimeout(()=>{\n-  if (editorRef.current) {\n-    const editor = editorRef.current.get();\n-    if (editor) {\n-      editor.action((ctx: Ctx) => {\n-        const view = ctx.get(editorViewCtx);\n-        const parser = ctx.get(parserCtx);\n-        const doc = parser('## Content changed !!!');\n-        if (!doc) return;\n-        const state = view.state;\n-        view.dispatch(\n-          state.tr.replace(\n-            0,\n-            state.doc.content.size,\n-            new Slice(doc.content, 0, 0)\n-          )\n-        );\n-      });\n+\n+export const MilkdownEditor: React.FC<MilkdownEditor> = ({markdown}) => {\n+  console.log(markdown)\n+  const { editor, getInstance } = useEditor((root) =>\n+    Editor.make()\n+      .config((ctx) => {\n+          ctx.set(rootCtx, root),\n+          ctx.set(defaultValueCtx, markdown)\n+          // useConfig(ctx)\n+      })\n+      .use(nord)\n+      .use(commonmark)\n+      .use(history)\n+      .use(listener)\n+      .use(prism)\n+      .use(menu)\n+  )\n+  const instance = getInstance()\n+  instance?.action((ctx) => {\n+    ctx.get(themeManagerCtx).switch(ctx, nordDark)\n+  })\n+  // 右键菜单\n+  useEffect(() => {\n+    const handleRightClick = () => {\n+      console.log('right-click')\n     }\n-  }\n-  console.log('chamge')\n-},3000)\n-\n-  return <ReactEditor ref={editorRef} editor={editor} />;\n-};\n+    const editor = document.querySelector('.milkdown')\n+    editor?.addEventListener('contextmenu', handleRightClick)\n+    return editor?.removeEventListener('contextmenu', handleRightClick)\n+  })\n+  return <ReactEditor editor={editor} />\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1665636331998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { EditorRef, ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n-import {useConfig} from './hooks/useConfig' \n+import { useConfig } from './hooks/useConfig'\n import { listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n@@ -19,17 +19,17 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-import { Slice } from \"prosemirror-model\";\n+import { Slice } from 'prosemirror-model'\n import React, { useEffect } from 'react'\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n-import {useConfig} from './hooks/useConfig' \n+import { useConfig } from './hooks/useConfig'\n import { listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n@@ -43,25 +43,23 @@\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n interface MilkdownEditor {\n-  markdown:string\n+  markdown: string\n }\n \n-window.api.onUpdateEditor((e,value)=>{\n+window.api.onUpdateEditor((e, value) => {\n   console.log(e)\n   console.log(value)\n })\n \n-\n-export const MilkdownEditor: React.FC<MilkdownEditor> = ({markdown}) => {\n-  console.log(markdown)\n+export const MilkdownEditor: React.FC<MilkdownEditor> = ({ markdown }) => {\n+  const [content, setContent] = useState('')\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n-          ctx.set(rootCtx, root),\n-          ctx.set(defaultValueCtx, markdown)\n-          // useConfig(ctx)\n+        ctx.set(rootCtx, root), ctx.set(defaultValueCtx, markdown)\n+        // useConfig(ctx)\n       })\n       .use(nord)\n       .use(commonmark)\n       .use(history)\n@@ -81,6 +79,16 @@\n     const editor = document.querySelector('.milkdown')\n     editor?.addEventListener('contextmenu', handleRightClick)\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n+  useEffect(() => {\n+    instance?.action((ctx) => {\n\\ No newline at end of file\n+      const view = ctx.get(editorViewCtx)\n+      const parser = ctx.get(parserCtx)\n+      const doc = parser(content)\n+      if (!doc) return\n+      const state = view.state\n+      view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n+    })\n+  }, [content])\n   return <ReactEditor editor={editor} />\n-}\n+}\n"
                },
                {
                    "date": 1665636348482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,18 +42,15 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-interface MilkdownEditor {\n-  markdown: string\n-}\n \n window.api.onUpdateEditor((e, value) => {\n   console.log(e)\n   console.log(value)\n })\n \n-export const MilkdownEditor: React.FC<MilkdownEditor> = ({ markdown }) => {\n+export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const [content, setContent] = useState('')\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n@@ -90,5 +87,5 @@\n       view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n     })\n   }, [content])\n   return <ReactEditor editor={editor} />\n-}\n\\ No newline at end of file\n+}\n"
                },
                {
                    "date": 1665636359652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,10 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n+interface MilkdownEditor {\n+}\n \n window.api.onUpdateEditor((e, value) => {\n   console.log(e)\n   console.log(value)\n"
                },
                {
                    "date": 1665636373245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,10 +42,9 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-interface MilkdownEditor {\n-}\n+interface MilkdownEditor {}\n \n window.api.onUpdateEditor((e, value) => {\n   console.log(e)\n   console.log(value)\n@@ -55,9 +54,9 @@\n   const [content, setContent] = useState('')\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n-        ctx.set(rootCtx, root), ctx.set(defaultValueCtx, markdown)\n+        ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         // useConfig(ctx)\n       })\n       .use(nord)\n       .use(commonmark)\n"
                },
                {
                    "date": 1665636394537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,6 +87,9 @@\n       const state = view.state\n       view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n     })\n   }, [content])\n+  setTimeout(()=>{\n+setContent('# hello')\n+  },2000)\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665636439299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,30 +19,9 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-import { Slice } from 'prosemirror-model'\n-import React, { useEffect } from 'react'\n-import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n-import { nord } from '@milkdown/theme-nord'\n-import { ReactEditor, useEditor } from '@milkdown/react'\n-// 通用markdown预设\n-import { commonmark } from '@milkdown/preset-commonmark'\n-import { history } from '@milkdown/plugin-history'\n-import { useConfig } from './hooks/useConfig'\n-import { listener } from '@milkdown/plugin-listener'\n-import { prism } from '@milkdown/plugin-prism'\n-import { menu } from '@milkdown/plugin-menu'\n-import { themeManagerCtx } from '@milkdown/core'\n-// 亮色主题\n-import { nordLight } from '@milkdown/theme-nord'\n-// 暗色主题\n-import { nordDark } from '@milkdown/theme-nord'\n-// 官方引用的图标库，如菜单栏需要使用到\n-import '@material-design-icons/font'\n-// 数学公式渲染\n-import 'katex/dist/katex.min.css'\n-// 代码高亮\n+\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n interface MilkdownEditor {}\n \n window.api.onUpdateEditor((e, value) => {\n"
                },
                {
                    "date": 1665636470460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,9 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-\n-import 'prism-themes/themes/prism-material-oceanic.min.css'\n+import { Slice } from \"prosemirror-model\";\n interface MilkdownEditor {}\n \n window.api.onUpdateEditor((e, value) => {\n   console.log(e)\n"
                },
                {
                    "date": 1665636482196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-import { Slice } from \"prosemirror-model\";\n+import { Slice } from 'prosemirror-model'\n interface MilkdownEditor {}\n \n window.api.onUpdateEditor((e, value) => {\n   console.log(e)\n@@ -65,9 +65,9 @@\n       const state = view.state\n       view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n     })\n   }, [content])\n-  setTimeout(()=>{\n-setContent('# hello')\n-  },2000)\n+  setTimeout(() => {\n+    setContent('# hello')\n+  }, 2000)\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665636497537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n-        // useConfig(ctx)\n+        useConfig(ctx)\n       })\n       .use(nord)\n       .use(commonmark)\n       .use(history)\n"
                },
                {
                    "date": 1665636514070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,6 @@\n       const state = view.state\n       view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n     })\n   }, [content])\n-  setTimeout(() => {\n-    setContent('# hello')\n-  }, 2000)\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665637200874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,13 +22,10 @@\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n import { Slice } from 'prosemirror-model'\n interface MilkdownEditor {}\n \n-window.api.onUpdateEditor((e, value) => {\n-  console.log(e)\n-  console.log(value)\n-})\n \n+\n export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const [content, setContent] = useState('')\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n@@ -55,8 +52,14 @@\n     const editor = document.querySelector('.milkdown')\n     editor?.addEventListener('contextmenu', handleRightClick)\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n+  useEffect(()=>{\n+    console.log('listene')\n+    window.api.onUpdateEditor((e, value) => {\n+\n+    })\n+  },[])\n   useEffect(() => {\n     instance?.action((ctx) => {\n       const view = ctx.get(editorViewCtx)\n       const parser = ctx.get(parserCtx)\n"
                },
                {
                    "date": 1665637206306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n   })\n   useEffect(()=>{\n     console.log('listene')\n     window.api.onUpdateEditor((e, value) => {\n-\n+      console.log(value)\n     })\n   },[])\n   useEffect(() => {\n     instance?.action((ctx) => {\n"
                },
                {
                    "date": 1665637436049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,10 @@\n     console.log('listene')\n     window.api.onUpdateEditor((e, value) => {\n       console.log(value)\n     })\n-  },[])\n+    return window.api.onUpdateEditor = null\n+  })\n   useEffect(() => {\n     instance?.action((ctx) => {\n       const view = ctx.get(editorViewCtx)\n       const parser = ctx.get(parserCtx)\n"
                },
                {
                    "date": 1665637473424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,10 @@\n     console.log('listene')\n     window.api.onUpdateEditor((e, value) => {\n       console.log(value)\n     })\n-    return window.api.onUpdateEditor = null\n   })\n+  console.log(window.ap)\n   useEffect(() => {\n     instance?.action((ctx) => {\n       const view = ctx.get(editorViewCtx)\n       const parser = ctx.get(parserCtx)\n"
                },
                {
                    "date": 1665637527729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,14 +53,13 @@\n     editor?.addEventListener('contextmenu', handleRightClick)\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n   useEffect(()=>{\n-    console.log('listene')\n     window.api.onUpdateEditor((e, value) => {\n-      console.log(value)\n+      setContent(value)\n     })\n-  })\n-  console.log(window.ap)\n+  },[])\n+  console.log(window.api)\n   useEffect(() => {\n     instance?.action((ctx) => {\n       const view = ctx.get(editorViewCtx)\n       const parser = ctx.get(parserCtx)\n"
                },
                {
                    "date": 1665642819390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n       setContent(value)\n     })\n   },[])\n   console.log(window.api)\n+  // 更新内容\n   useEffect(() => {\n     instance?.action((ctx) => {\n       const view = ctx.get(editorViewCtx)\n       const parser = ctx.get(parserCtx)\n"
                },
                {
                    "date": 1665648058968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,11 @@\n import { listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n+import { clipboard } from '@milkdown/plugin-clipboard';\n // 亮色主题\n-import { nordLight } from '@milkdown/theme-nord'\n+// import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n import { nordDark } from '@milkdown/theme-nord'\n // 官方引用的图标库，如菜单栏需要使用到\n import '@material-design-icons/font'\n@@ -38,8 +39,9 @@\n       .use(history)\n       .use(listener)\n       .use(prism)\n       .use(menu)\n+      .use(clipboard)\n   )\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n"
                },
                {
                    "date": 1665648086987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,14 +47,14 @@\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n   // 右键菜单\n   useEffect(() => {\n-    const handleRightClick = () => {\n-      console.log('right-click')\n-    }\n-    const editor = document.querySelector('.milkdown')\n-    editor?.addEventListener('contextmenu', handleRightClick)\n-    return editor?.removeEventListener('contextmenu', handleRightClick)\n+    // const handleRightClick = () => {\n+    //   console.log('right-click')\n+    // }\n+    // const editor = document.querySelector('.milkdown')\n+    // editor?.addEventListener('contextmenu', handleRightClick)\n+    // return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n   useEffect(()=>{\n     window.api.onUpdateEditor((e, value) => {\n       setContent(value)\n"
                },
                {
                    "date": 1665648100922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,17 +45,17 @@\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n-  // 右键菜单\n-  useEffect(() => {\n-    // const handleRightClick = () => {\n-    //   console.log('right-click')\n-    // }\n-    // const editor = document.querySelector('.milkdown')\n-    // editor?.addEventListener('contextmenu', handleRightClick)\n-    // return editor?.removeEventListener('contextmenu', handleRightClick)\n-  })\n+  // // 右键菜单\n+  // useEffect(() => {\n+  //   const handleRightClick = () => {\n+  //     console.log('right-click')\n+  //   }\n+  //   const editor = document.querySelector('.milkdown')\n+  //   editor?.addEventListener('contextmenu', handleRightClick)\n+  //   return editor?.removeEventListener('contextmenu', handleRightClick)\n+  // })\n   useEffect(()=>{\n     window.api.onUpdateEditor((e, value) => {\n       setContent(value)\n     })\n"
                },
                {
                    "date": 1665648146776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,23 +54,23 @@\n   //   const editor = document.querySelector('.milkdown')\n   //   editor?.addEventListener('contextmenu', handleRightClick)\n   //   return editor?.removeEventListener('contextmenu', handleRightClick)\n   // })\n-  useEffect(()=>{\n-    window.api.onUpdateEditor((e, value) => {\n-      setContent(value)\n-    })\n-  },[])\n-  console.log(window.api)\n-  // 更新内容\n-  useEffect(() => {\n-    instance?.action((ctx) => {\n-      const view = ctx.get(editorViewCtx)\n-      const parser = ctx.get(parserCtx)\n-      const doc = parser(content)\n-      if (!doc) return\n-      const state = view.state\n-      view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n-    })\n-  }, [content])\n+  // useEffect(()=>{\n+  //   window.api.onUpdateEditor((e, value) => {\n+  //     setContent(value)\n+  //   })\n+  // },[])\n+  // console.log(window.api)\n+  // // 更新内容\n+  // useEffect(() => {\n+  //   instance?.action((ctx) => {\n+  //     const view = ctx.get(editorViewCtx)\n+  //     const parser = ctx.get(parserCtx)\n+  //     const doc = parser(content)\n+  //     if (!doc) return\n+  //     const state = view.state\n+  //     view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n+  //   })\n+  // }, [content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665648208690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,32 +45,32 @@\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n-  // // 右键菜单\n-  // useEffect(() => {\n-  //   const handleRightClick = () => {\n-  //     console.log('right-click')\n-  //   }\n-  //   const editor = document.querySelector('.milkdown')\n-  //   editor?.addEventListener('contextmenu', handleRightClick)\n-  //   return editor?.removeEventListener('contextmenu', handleRightClick)\n-  // })\n-  // useEffect(()=>{\n-  //   window.api.onUpdateEditor((e, value) => {\n-  //     setContent(value)\n-  //   })\n-  // },[])\n-  // console.log(window.api)\n-  // // 更新内容\n-  // useEffect(() => {\n-  //   instance?.action((ctx) => {\n-  //     const view = ctx.get(editorViewCtx)\n-  //     const parser = ctx.get(parserCtx)\n-  //     const doc = parser(content)\n-  //     if (!doc) return\n-  //     const state = view.state\n-  //     view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n-  //   })\n-  // }, [content])\n+  // 右键菜单\n+  useEffect(() => {\n+    const handleRightClick = () => {\n+      console.log('right-click')\n+    }\n+    const editor = document.querySelector('.milkdown')\n+    editor?.addEventListener('contextmenu', handleRightClick)\n+    return editor?.removeEventListener('contextmenu', handleRightClick)\n+  })\n+  useEffect(()=>{\n+    window.api.onUpdateEditor((e, value) => {\n+      setContent(value)\n+    })\n+  },[])\n+  console.log(window.api)\n+  // 更新内容\n+  useEffect(() => {\n+    instance?.action((ctx) => {\n+      const view = ctx.get(editorViewCtx)\n+      const parser = ctx.get(parserCtx)\n+      const doc = parser(content)\n+      if (!doc) return\n+      const state = view.state\n+      view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n+    })\n+  }, [content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665648487976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,16 +61,16 @@\n     })\n   },[])\n   console.log(window.api)\n   // 更新内容\n-  useEffect(() => {\n-    instance?.action((ctx) => {\n-      const view = ctx.get(editorViewCtx)\n-      const parser = ctx.get(parserCtx)\n-      const doc = parser(content)\n-      if (!doc) return\n-      const state = view.state\n-      view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n-    })\n-  }, [content])\n+  // useEffect(() => {\n+  //   instance?.action((ctx) => {\n+  //     const view = ctx.get(editorViewCtx)\n+  //     const parser = ctx.get(parserCtx)\n+  //     const doc = parser(content)\n+  //     if (!doc) return\n+  //     const state = view.state\n+  //     view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n+  //   })\n+  // }, [content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665648596384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,16 +61,16 @@\n     })\n   },[])\n   console.log(window.api)\n   // 更新内容\n-  // useEffect(() => {\n-  //   instance?.action((ctx) => {\n-  //     const view = ctx.get(editorViewCtx)\n-  //     const parser = ctx.get(parserCtx)\n-  //     const doc = parser(content)\n-  //     if (!doc) return\n-  //     const state = view.state\n-  //     view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n-  //   })\n-  // }, [content])\n+  useEffect(() => {\n+    instance?.action((ctx) => {\n+      const view = ctx.get(editorViewCtx)\n+      const parser = ctx.get(parserCtx)\n+      const doc = parser(content)\n+      if (!doc) return\n+      const state = view.state\n+      view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n+    })\n+  }, [content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665648641679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,8 @@\n     window.api.onUpdateEditor((e, value) => {\n       setContent(value)\n     })\n   },[])\n-  console.log(window.api)\n   // 更新内容\n   useEffect(() => {\n     instance?.action((ctx) => {\n       const view = ctx.get(editorViewCtx)\n"
                },
                {
                    "date": 1665671183875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n import { prism } from '@milkdown/plugin-prism'\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n import { clipboard } from '@milkdown/plugin-clipboard';\n+import { replaceAll } from '@milkdown/utils';\n // 亮色主题\n // import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n import { nordDark } from '@milkdown/theme-nord'\n@@ -59,8 +60,9 @@\n     window.api.onUpdateEditor((e, value) => {\n       setContent(value)\n     })\n   },[])\n+instance?.action(replaceAll('# 12'))\n   // 更新内容\n   useEffect(() => {\n     instance?.action((ctx) => {\n       const view = ctx.get(editorViewCtx)\n"
                },
                {
                    "date": 1665671215647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,18 +60,10 @@\n     window.api.onUpdateEditor((e, value) => {\n       setContent(value)\n     })\n   },[])\n-instance?.action(replaceAll('# 12'))\n   // 更新内容\n   useEffect(() => {\n-    instance?.action((ctx) => {\n-      const view = ctx.get(editorViewCtx)\n-      const parser = ctx.get(parserCtx)\n-      const doc = parser(content)\n-      if (!doc) return\n-      const state = view.state\n-      view.dispatch(state.tr.replace(0, state.doc.content.size, new Slice(doc.content, 0, 0)))\n-    })\n+    instance?.action(replaceAll(content))\n   }, [content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665672886189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n import { listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n-import { clipboard } from '@milkdown/plugin-clipboard';\n-import { replaceAll } from '@milkdown/utils';\n+import { clipboard } from '@milkdown/plugin-clipboard'\n+import { replaceAll } from '@milkdown/utils'\n // 亮色主题\n // import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n import { nordDark } from '@milkdown/theme-nord'\n@@ -21,13 +21,10 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-import { Slice } from 'prosemirror-model'\n interface MilkdownEditor {}\n \n-\n-\n export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n   const [content, setContent] = useState('')\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n@@ -55,13 +52,13 @@\n     const editor = document.querySelector('.milkdown')\n     editor?.addEventListener('contextmenu', handleRightClick)\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n-  useEffect(()=>{\n-    window.api.onUpdateEditor((e, value) => {\n-      setContent(value)\n+  useEffect(() => {\n+    window.api.onUpdateEditor((e, { content }) => {\n+      setContent(content)\n     })\n-  },[])\n+  }, [])\n   // 更新内容\n   useEffect(() => {\n     instance?.action(replaceAll(content))\n   }, [content])\n"
                },
                {
                    "date": 1665762113741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,13 @@\n // 数学公式渲染\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n-interface MilkdownEditor {}\n+interface MilkdownEditor {\n+  content:string\n+}\n \n-export const MilkdownEditor: React.FC<MilkdownEditor> = () => {\n-  const [content, setContent] = useState('')\n+export const MilkdownEditor: React.FC<MilkdownEditor> = ({content}) => {\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n@@ -52,13 +53,8 @@\n     const editor = document.querySelector('.milkdown')\n     editor?.addEventListener('contextmenu', handleRightClick)\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n-  useEffect(() => {\n-    window.api.onUpdateEditor((e, { content }) => {\n-      setContent(content)\n-    })\n-  }, [])\n   // 更新内容\n   useEffect(() => {\n     instance?.action(replaceAll(content))\n   }, [content])\n"
                },
                {
                    "date": 1665762159059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useRef, useState } from 'react'\n import { Ctx, defaultValueCtx, Editor, editorViewCtx, parserCtx, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n-import { EditorRef, ReactEditor, useEditor } from '@milkdown/react'\n+import {  ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n import { useConfig } from './hooks/useConfig'\n"
                },
                {
                    "date": 1665762175947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-import React, { useEffect, useRef, useState } from 'react'\n-import { Ctx, defaultValueCtx, Editor, editorViewCtx, parserCtx, rootCtx } from '@milkdown/core'\n+import React, { useEffect,} from 'react'\n+import {  defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n import {  ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { commonmark } from '@milkdown/preset-commonmark'\n"
                },
                {
                    "date": 1665765847050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,8 @@\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n   // 更新内容\n   useEffect(() => {\n-    instance?.action(replaceAll(content))\n+    instance?.action(replaceAll(content)).\n   }, [content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665765854787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,8 @@\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n   // 更新内容\n   useEffect(() => {\n-    instance?.action(replaceAll(content)).\n+    instance?.action(replaceAll(content).)\n   }, [content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665909913544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n import { clipboard } from '@milkdown/plugin-clipboard'\n import { replaceAll } from '@milkdown/utils'\n+import { gfm } from '@milkdown/preset-gfm';\n+\n // 亮色主题\n // import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n import { nordDark } from '@milkdown/theme-nord'\n@@ -39,8 +41,9 @@\n       .use(listener)\n       .use(prism)\n       .use(menu)\n       .use(clipboard)\n+      .use(gfm)\n   )\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n@@ -55,8 +58,8 @@\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n   // 更新内容\n   useEffect(() => {\n-    instance?.action(replaceAll(content).)\n+    instance?.action(replaceAll(content))\n   }, [content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665909919272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n       .use(history)\n       .use(listener)\n       .use(prism)\n       .use(menu)\n-      .use(clipboard)\n+      // .use(clipboard)\n       .use(gfm)\n   )\n   const instance = getInstance()\n   instance?.action((ctx) => {\n"
                },
                {
                    "date": 1665909944316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n       .use(history)\n       .use(listener)\n       .use(prism)\n       .use(menu)\n-      // .use(clipboard)\n+      .use(clipboard)\n       .use(gfm)\n   )\n   const instance = getInstance()\n   instance?.action((ctx) => {\n"
                },
                {
                    "date": 1665909990689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n       })\n       .use(nord)\n-      .use(commonmark)\n+      // .use(commonmark)\n       .use(history)\n       .use(listener)\n       .use(prism)\n       .use(menu)\n"
                },
                {
                    "date": 1665910002258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,15 +35,15 @@\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n       })\n       .use(nord)\n-      // .use(commonmark)\n+      .use(commonmark)\n       .use(history)\n       .use(listener)\n       .use(prism)\n       .use(menu)\n       .use(clipboard)\n-      .use(gfm)\n+      // .use(gfm)\n   )\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n"
                },
                {
                    "date": 1665910054225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,15 +35,15 @@\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n       })\n       .use(nord)\n-      .use(commonmark)\n+      // .use(commonmark)\n       .use(history)\n       .use(listener)\n       .use(prism)\n       .use(menu)\n       .use(clipboard)\n-      // .use(gfm)\n+      .use(gfm)\n   )\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n"
                },
                {
                    "date": 1665910240867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,18 +2,18 @@\n import {  defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n import {  ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n-import { commonmark } from '@milkdown/preset-commonmark'\n+import { blockquote, commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n import { useConfig } from './hooks/useConfig'\n import { listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n import { clipboard } from '@milkdown/plugin-clipboard'\n import { replaceAll } from '@milkdown/utils'\n-import { gfm } from '@milkdown/preset-gfm';\n+import { gfm, SupportedKeys } from '@milkdown/preset-gfm';\n \n // 亮色主题\n // import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n@@ -28,8 +28,13 @@\n   content:string\n }\n \n export const MilkdownEditor: React.FC<MilkdownEditor> = ({content}) => {\n+  const nodes = gfm.configure(blockquote, {\n+    keymap: {\n+        [SupportedKeys.Blockquote]: 'Mod-Shift-b',\n+    },\n+});\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n@@ -41,10 +46,11 @@\n       .use(listener)\n       .use(prism)\n       .use(menu)\n       .use(clipboard)\n-      .use(gfm)\n+      .use(nodes)\n   )\n+\n   const instance = getInstance()\n   instance?.action((ctx) => {\n     ctx.get(themeManagerCtx).switch(ctx, nordDark)\n   })\n"
                },
                {
                    "date": 1665910255246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n \n export const MilkdownEditor: React.FC<MilkdownEditor> = ({content}) => {\n   const nodes = gfm.configure(blockquote, {\n     keymap: {\n-        [SupportedKeys.Blockquote]: 'Mod-Shift-b',\n+        [SupportedKeys.Blockquote]: 'Shift-b',\n     },\n });\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n"
                },
                {
                    "date": 1665910270548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n-import React, { useEffect,} from 'react'\n-import {  defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n+import React, { useEffect } from 'react'\n+import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n-import {  ReactEditor, useEditor } from '@milkdown/react'\n+import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n import { blockquote, commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n import { useConfig } from './hooks/useConfig'\n@@ -11,9 +11,9 @@\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n import { clipboard } from '@milkdown/plugin-clipboard'\n import { replaceAll } from '@milkdown/utils'\n-import { gfm, SupportedKeys } from '@milkdown/preset-gfm';\n+import { gfm, SupportedKeys } from '@milkdown/preset-gfm'\n \n // 亮色主题\n // import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n@@ -24,17 +24,17 @@\n import 'katex/dist/katex.min.css'\n // 代码高亮\n import 'prism-themes/themes/prism-material-oceanic.min.css'\n interface MilkdownEditor {\n-  content:string\n+  content: string\n }\n \n-export const MilkdownEditor: React.FC<MilkdownEditor> = ({content}) => {\n+export const MilkdownEditor: React.FC<MilkdownEditor> = ({ content }) => {\n   const nodes = gfm.configure(blockquote, {\n     keymap: {\n-        [SupportedKeys.Blockquote]: 'Shift-b',\n-    },\n-});\n+      [SupportedKeys.Blockquote]: 'Shift-b'\n+    }\n+  })\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n"
                },
                {
                    "date": 1665910734008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n-import { blockquote, commonmark } from '@milkdown/preset-commonmark'\n+import { blockquote } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n import { useConfig } from './hooks/useConfig'\n import { listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n@@ -40,9 +40,8 @@\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n       })\n       .use(nord)\n-      // .use(commonmark)\n       .use(history)\n       .use(listener)\n       .use(prism)\n       .use(menu)\n"
                },
                {
                    "date": 1665922310731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n import { clipboard } from '@milkdown/plugin-clipboard'\n import { replaceAll } from '@milkdown/utils'\n-import { gfm, SupportedKeys } from '@milkdown/preset-gfm'\n+import { gfm, SupportedKeys,codeFence } from '@milkdown/preset-gfm'\n \n // 亮色主题\n // import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n@@ -32,15 +32,18 @@\n   const nodes = gfm.configure(blockquote, {\n     keymap: {\n       [SupportedKeys.Blockquote]: 'Shift-b'\n     }\n+  }).configure(codeFence,{\n+    languageList:['scss','javascript','css','html','typescript'],\n   })\n   const { editor, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n       })\n+      \n       .use(nord)\n       .use(history)\n       .use(listener)\n       .use(prism)\n"
                },
                {
                    "date": 1665923370071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n import { clipboard } from '@milkdown/plugin-clipboard'\n import { replaceAll } from '@milkdown/utils'\n-import { gfm, SupportedKeys,codeFence } from '@milkdown/preset-gfm'\n+import { gfm, SupportedKeys,codeFence, taskListItem } from '@milkdown/preset-gfm'\n \n // 亮色主题\n // import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n@@ -30,14 +30,20 @@\n \n export const MilkdownEditor: React.FC<MilkdownEditor> = ({ content }) => {\n   const nodes = gfm.configure(blockquote, {\n     keymap: {\n-      [SupportedKeys.Blockquote]: 'Shift-b'\n+      [SupportedKeys.Blockquote]: 'Shift-b',\n+      // [SupportedKeys.H1]:'shift-c',\n     }\n-  }).configure(codeFence,{\n+  })\n+  .configure(taskListItem,{\n+\n+  })\n+  .configure()\n+  .configure(codeFence,{\n     languageList:['scss','javascript','css','html','typescript'],\n   })\n-  const { editor, getInstance } = useEditor((root) =>\n+  const { editor,loading,getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n@@ -51,12 +57,8 @@\n       .use(clipboard)\n       .use(nodes)\n   )\n \n-  const instance = getInstance()\n-  instance?.action((ctx) => {\n-    ctx.get(themeManagerCtx).switch(ctx, nordDark)\n-  })\n   // 右键菜单\n   useEffect(() => {\n     const handleRightClick = () => {\n       console.log('right-click')\n@@ -66,8 +68,15 @@\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n   // 更新内容\n   useEffect(() => {\n-    instance?.action(replaceAll(content))\n-  }, [content])\n+    if(!loading) {\n+      const instance = getInstance()\n+      instance?.action(replaceAll(content))\n+      instance?.action((ctx) => {\n+        ctx.get(themeManagerCtx).switch(ctx, nordDark)\n+      })\n+\n+    }\n+  },[loading,content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665925273750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { menu } from '@milkdown/plugin-menu'\n import { themeManagerCtx } from '@milkdown/core'\n import { clipboard } from '@milkdown/plugin-clipboard'\n import { replaceAll } from '@milkdown/utils'\n-import { gfm, SupportedKeys,codeFence, taskListItem } from '@milkdown/preset-gfm'\n+import { gfm, SupportedKeys, codeFence, taskListItem } from '@milkdown/preset-gfm'\n \n // 亮色主题\n // import { nordLight } from '@milkdown/theme-nord'\n // 暗色主题\n@@ -28,28 +28,27 @@\n   content: string\n }\n \n export const MilkdownEditor: React.FC<MilkdownEditor> = ({ content }) => {\n-  const nodes = gfm.configure(blockquote, {\n-    keymap: {\n-      [SupportedKeys.Blockquote]: 'Shift-b',\n-      // [SupportedKeys.H1]:'shift-c',\n-    }\n-  })\n-  .configure(taskListItem,{\n-\n-  })\n-  .configure()\n-  .configure(codeFence,{\n-    languageList:['scss','javascript','css','html','typescript'],\n-  })\n-  const { editor,loading,getInstance } = useEditor((root) =>\n+  const nodes = gfm\n+    .configure(blockquote, {\n+      keymap: {\n+        [SupportedKeys.Blockquote]: 'Shift-b'\n+        // [SupportedKeys.H1]:'shift-c',\n+      }\n+    })\n+    .configure(taskListItem, {})\n+    .configure()\n+    .configure(codeFence, {\n+      languageList: ['scss', 'javascript', 'css', 'html', 'typescript']\n+    })\n+  const { editor, loading, getInstance } = useEditor((root) =>\n     Editor.make()\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n       })\n-      \n+\n       .use(nord)\n       .use(history)\n       .use(listener)\n       .use(prism)\n@@ -68,15 +67,14 @@\n     return editor?.removeEventListener('contextmenu', handleRightClick)\n   })\n   // 更新内容\n   useEffect(() => {\n-    if(!loading) {\n+    if (!loading) {\n       const instance = getInstance()\n       instance?.action(replaceAll(content))\n       instance?.action((ctx) => {\n         ctx.get(themeManagerCtx).switch(ctx, nordDark)\n       })\n-\n     }\n-  },[loading,content])\n+  }, [loading, content])\n   return <ReactEditor editor={editor} />\n }\n"
                },
                {
                    "date": 1665928904519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,8 @@\n         // [SupportedKeys.H1]:'shift-c',\n       }\n     })\n     .configure(taskListItem, {})\n-    .configure()\n     .configure(codeFence, {\n       languageList: ['scss', 'javascript', 'css', 'html', 'typescript']\n     })\n   const { editor, loading, getInstance } = useEditor((root) =>\n"
                },
                {
                    "date": 1665929418716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n-import { blockquote } from '@milkdown/preset-commonmark'\n+import { blockquote, commonmark } from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n import { useConfig } from './hooks/useConfig'\n import { listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n@@ -28,9 +28,9 @@\n   content: string\n }\n \n export const MilkdownEditor: React.FC<MilkdownEditor> = ({ content }) => {\n-  const nodes = gfm\n+  const gitHubCommonMark = gfm\n     .configure(blockquote, {\n       keymap: {\n         [SupportedKeys.Blockquote]: 'Shift-b'\n         // [SupportedKeys.H1]:'shift-c',\n@@ -45,16 +45,16 @@\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n       })\n-\n+.use(commonmark)\n       .use(nord)\n       .use(history)\n       .use(listener)\n       .use(prism)\n       .use(menu)\n       .use(clipboard)\n-      .use(nodes)\n+      .use(gitHubCommonMark)\n   )\n \n   // 右键菜单\n   useEffect(() => {\n"
                },
                {
                    "date": 1665929449652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n       })\n-.use(commonmark)\n+      .use(commonmark)\n       .use(nord)\n       .use(history)\n       .use(listener)\n       .use(prism)\n"
                },
                {
                    "date": 1665929456336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,8 @@\n       .config((ctx) => {\n         ctx.set(rootCtx, root), ctx.set(defaultValueCtx, content)\n         useConfig(ctx)\n       })\n-      .use(commonmark)\n       .use(nord)\n       .use(history)\n       .use(listener)\n       .use(prism)\n"
                },
                {
                    "date": 1665929463904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { nord } from '@milkdown/theme-nord'\n import { ReactEditor, useEditor } from '@milkdown/react'\n // 通用markdown预设\n-import { blockquote, commonmark } from '@milkdown/preset-commonmark'\n+import { blockquote} from '@milkdown/preset-commonmark'\n import { history } from '@milkdown/plugin-history'\n import { useConfig } from './hooks/useConfig'\n import { listener } from '@milkdown/plugin-listener'\n import { prism } from '@milkdown/plugin-prism'\n@@ -32,9 +32,8 @@\n   const gitHubCommonMark = gfm\n     .configure(blockquote, {\n       keymap: {\n         [SupportedKeys.Blockquote]: 'Shift-b'\n-        // [SupportedKeys.H1]:'shift-c',\n       }\n     })\n     .configure(taskListItem, {})\n     .configure(codeFence, {\n"
                },
                {
                    "date": 1665929472055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n export const MilkdownEditor: React.FC<MilkdownEditor> = ({ content }) => {\n   const gitHubCommonMark = gfm\n     .configure(blockquote, {\n       keymap: {\n-        [SupportedKeys.Blockquote]: 'Shift-b'\n+        [SupportedKeys.Blockquote]: 'Mod-q'\n       }\n     })\n     .configure(taskListItem, {})\n     .configure(codeFence, {\n"
                },
                {
                    "date": 1665929483282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n export const MilkdownEditor: React.FC<MilkdownEditor> = ({ content }) => {\n   const gitHubCommonMark = gfm\n     .configure(blockquote, {\n       keymap: {\n-        [SupportedKeys.Blockquote]: 'Mod-q'\n+        [SupportedKeys.Blockquote]: 'Mod-Shift-q'\n       }\n     })\n     .configure(taskListItem, {})\n     .configure(codeFence, {\n"
                }
            ],
            "date": 1665496693570,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react'\nimport { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\nimport { nord } from '@milkdown/theme-nord'\nimport { ReactEditor, useEditor } from '@milkdown/react'\n// 通用markdown预设\nimport { commonmark } from '@milkdown/preset-commonmark'\nimport { history } from '@milkdown/plugin-history'\nimport { defaultMarkdown } from '../../constant'\nimport { listenerCtx, listener } from '@milkdown/plugin-listener'\nimport { prism } from '@milkdown/plugin-prism'\nimport { menu } from '@milkdown/plugin-menu'\nimport { themeManagerCtx } from '@milkdown/core'\n// 亮色主题\nimport { nordLight } from '@milkdown/theme-nord'\n// 暗色主题\nimport { nordDark } from '@milkdown/theme-nord'\ninterface MilkdownEditor {\n  onHeadersChange: Function\n}\nexport const MilkdownEditor: React.FC<MilkdownEditor> = ({ onHeadersChange }) => {\n  const [headers, setHeaders] = useState([{}])\n  useEffect(() => {\n    console.log('headers-change')\n    onHeadersChange(headers)\n  }, [headers.length])\n  const { editor, getInstance } = useEditor((root) =>\n    Editor.make()\n      .config((ctx) => {\n        ctx.set(rootCtx, root),\n          ctx.set(defaultValueCtx, defaultMarkdown),\n          // // 代码的默认形式？\n          // ctx.set(defaultValueCtx,{\n          //     type:'html',\n          //     dom:document.querySelector('#pre') as HTMLElement\n          //   })\n          ctx.get(listenerCtx).markdownUpdated((ctx, markdown, prevMarkdown) => {})\n      })\n      .use(nord)\n      .use(commonmark)\n      .use(history)\n      .use(listener)\n      .use(prism)\n      .use(menu)\n  )\n\n  const instance = getInstance()\n  instance?.action((ctx) => {\n    ctx.get(themeManagerCtx).switch(ctx, nordDark)\n  })\n  return <ReactEditor editor={editor} />\n}\n"
        }
    ]
}