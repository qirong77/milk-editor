{
    "sourceFile": "src/renderer/src/components/Editor/hooks/useConfig.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1667540446836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667540514858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { listenerCtx } from '@milkdown/plugin-listener'\n \n export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n"
                },
                {
                    "date": 1667805936878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { listenerCtx } from '@milkdown/plugin-listener'\n \n-export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n+export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function,path:string) => {\n   editor\n     .config((ctx) => {\n       ctx.set(rootCtx, root)\n     })\n@@ -20,10 +20,11 @@\n         .mounted(() => {\n           console.log('after the editor mounts')\n         })\n         .markdownUpdated((_ctx, markdown) => {\n-          console.log('markdownUpdatedxxxxxxxxxxxx')\n-          setMarkdown(markdown)\n+          console.log(path)\n+          console.log('markdownUpdated')\n+          // setMarkdown(markdown)\n         })\n         .updated(() => {\n           console.log('when editor state updates')\n         })\n"
                },
                {
                    "date": 1667806417439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { listenerCtx } from '@milkdown/plugin-listener'\n \n-export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function,path:string) => {\n+export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n   editor\n     .config((ctx) => {\n       ctx.set(rootCtx, root)\n     })\n@@ -20,11 +20,10 @@\n         .mounted(() => {\n           console.log('after the editor mounts')\n         })\n         .markdownUpdated((_ctx, markdown) => {\n-          console.log(path)\n           console.log('markdownUpdated')\n-          // setMarkdown(markdown)\n+          setMarkdown(markdown)\n         })\n         .updated(() => {\n           console.log('when editor state updates')\n         })\n"
                },
                {
                    "date": 1667806610747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,25 +14,20 @@\n     .config((ctx) => {\n       ctx\n         .get(listenerCtx)\n         .beforeMount(() => {\n-          console.log('before the editor mounts')\n         })\n         .mounted(() => {\n-          console.log('after the editor mounts')\n         })\n         .markdownUpdated((_ctx, markdown) => {\n           console.log('markdownUpdated')\n           setMarkdown(markdown)\n         })\n         .updated(() => {\n-          console.log('when editor state updates')\n         })\n         .blur(() => {})\n         .focus(() => {\n-          console.log(' when focus editor')\n         })\n         .destroy(() => {\n-          console.log('when editor is being destroyed')\n         })\n     })\n }\n"
                },
                {
                    "date": 1667806940008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,12 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { listenerCtx } from '@milkdown/plugin-listener'\n-\n+import { debounce } from 'debounce'\n export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n+  const debouncedSet = (markdown: string) => {\n+    console.log('set-------')\n+    return debounce(setMarkdown(markdown))\n+  }\n   editor\n     .config((ctx) => {\n       ctx.set(rootCtx, root)\n     })\n@@ -13,21 +17,16 @@\n     // 生命周期\n     .config((ctx) => {\n       ctx\n         .get(listenerCtx)\n-        .beforeMount(() => {\n-        })\n-        .mounted(() => {\n-        })\n+        .beforeMount(() => {})\n+        .mounted(() => {})\n         .markdownUpdated((_ctx, markdown) => {\n           console.log('markdownUpdated')\n-          setMarkdown(markdown)\n+          debouncedSet(markdown)\n         })\n-        .updated(() => {\n-        })\n+        .updated(() => {})\n         .blur(() => {})\n-        .focus(() => {\n-        })\n-        .destroy(() => {\n-        })\n+        .focus(() => {})\n+        .destroy(() => {})\n     })\n }\n"
                },
                {
                    "date": 1667806957152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { debounce } from 'debounce'\n export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n   const debouncedSet = (markdown: string) => {\n     console.log('set-------')\n-    return debounce(setMarkdown(markdown))\n+    return debounce(setMarkdown(markdown),1000)\n   }\n   editor\n     .config((ctx) => {\n       ctx.set(rootCtx, root)\n"
                },
                {
                    "date": 1667806990920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import { listenerCtx } from '@milkdown/plugin-listener'\n import { debounce } from 'debounce'\n export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n   const debouncedSet = (markdown: string) => {\n-    console.log('set-------')\n     return debounce(setMarkdown(markdown),1000)\n   }\n   editor\n     .config((ctx) => {\n"
                },
                {
                    "date": 1667807407870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,9 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { listenerCtx } from '@milkdown/plugin-listener'\n import { debounce } from 'debounce'\n export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n-  const debouncedSet = (markdown: string) => {\n-    return debounce(setMarkdown(markdown),1000)\n-  }\n+  const x = debounce(setMarkdown,1000,false)\n   editor\n     .config((ctx) => {\n       ctx.set(rootCtx, root)\n     })\n@@ -20,9 +18,9 @@\n         .beforeMount(() => {})\n         .mounted(() => {})\n         .markdownUpdated((_ctx, markdown) => {\n           console.log('markdownUpdated')\n-          debouncedSet(markdown)\n+          x(markdown)\n         })\n         .updated(() => {})\n         .blur(() => {})\n         .focus(() => {})\n"
                },
                {
                    "date": 1667807444521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { listenerCtx } from '@milkdown/plugin-listener'\n import { debounce } from 'debounce'\n export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n-  const x = debounce(setMarkdown,1000,false)\n+  const debounceSet = debounce(setMarkdown, 1000, false)\n   editor\n     .config((ctx) => {\n       ctx.set(rootCtx, root)\n     })\n@@ -18,9 +18,9 @@\n         .beforeMount(() => {})\n         .mounted(() => {})\n         .markdownUpdated((_ctx, markdown) => {\n           console.log('markdownUpdated')\n-          x(markdown)\n+          debounceSet(markdown)\n         })\n         .updated(() => {})\n         .blur(() => {})\n         .focus(() => {})\n"
                },
                {
                    "date": 1668070182447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { listenerCtx } from '@milkdown/plugin-listener'\n import { debounce } from 'debounce'\n export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n-  const debounceSet = debounce(setMarkdown, 1000, false)\n+  const debounceSet = debounce(setMarkdown, 500, true)\n   editor\n     .config((ctx) => {\n       ctx.set(rootCtx, root)\n     })\n"
                },
                {
                    "date": 1668333779982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { listenerCtx } from '@milkdown/plugin-listener'\n import { debounce } from 'debounce'\n export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n-  const debounceSet = debounce(setMarkdown, 500, true)\n+  const debounceSet = debounce(setMarkdown, 1500, true)\n   editor\n     .config((ctx) => {\n       ctx.set(rootCtx, root)\n     })\n"
                },
                {
                    "date": 1668333930022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\n import { listenerCtx } from '@milkdown/plugin-listener'\n import { debounce } from 'debounce'\n export const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n-  const debounceSet = debounce(setMarkdown, 1500, true)\n+  const debounceSet = debounce(setMarkdown, 1500, false)\n   editor\n     .config((ctx) => {\n       ctx.set(rootCtx, root)\n     })\n"
                }
            ],
            "date": 1667540446836,
            "name": "Commit-0",
            "content": "\nimport { defaultValueCtx, Editor, rootCtx } from '@milkdown/core'\nimport { listenerCtx } from '@milkdown/plugin-listener'\n\nexport const useConfig = (editor: Editor, root: HTMLElement, setMarkdown: Function) => {\n  editor\n    .config((ctx) => {\n      ctx.set(rootCtx, root)\n    })\n    // 默认值\n    .config((ctx) => {\n      ctx.set(defaultValueCtx, '')\n    })\n    // 生命周期\n    .config((ctx) => {\n      ctx\n        .get(listenerCtx)\n        .beforeMount(() => {\n          console.log('before the editor mounts')\n        })\n        .mounted(() => {\n          console.log('after the editor mounts')\n        })\n        .markdownUpdated((_ctx, markdown) => {\n          console.log('markdownUpdatedxxxxxxxxxxxx')\n          setMarkdown(markdown)\n        })\n        .updated(() => {\n          console.log('when editor state updates')\n        })\n        .blur(() => {})\n        .focus(() => {\n          console.log(' when focus editor')\n        })\n        .destroy(() => {\n          console.log('when editor is being destroyed')\n        })\n    })\n}\n"
        }
    ]
}