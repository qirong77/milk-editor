{
    "sourceFile": "src/renderer/src/components/sidebar/components/file-list/index.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 52,
            "patches": [
                {
                    "date": 1669998435548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1669998495988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n    </div> \n  </template> \n \n  <script setup lang=\"tsx\"> \n-window.p\n+window.\n  </script> \n \n  <style lang=\"scss\" scoped> \n \n"
                },
                {
                    "date": 1669998588069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n    </div> \n  </template> \n \n  <script setup lang=\"tsx\"> \n-window.\n+\n  </script> \n \n  <style lang=\"scss\" scoped> \n \n"
                },
                {
                    "date": 1669998620100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,11 @@\n \n  <script setup lang=\"tsx\"> \n \n  </script> \n+<script>\n \n+</script>\n  <style lang=\"scss\" scoped> \n \n  </style> \n  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1670003833261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,32 @@\n- <template> \n-   <div> \n+<template>\n+  <div></div>\n+</template>\n \n-   </div> \n- </template> \n+<script setup lang=\"tsx\">\n+/// <reference path='../../../../../../preload/index.d.ts'/>\n+import FileItem from './sidebar/components/file-list/file-item.vue'\n+import FileItemDir from './sidebar/components/file-list/file-item-dir.vue'\n+import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n+import { DirTree } from '../../../../../../common/types'\n \n- <script setup lang=\"tsx\"> \n\\ No newline at end of file\n-\n- </script> \n-<script>\n-\n+window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n+  console.log('📕', mapFileList(tree))\n+})\n+const mapFileList = (tree: DirTree) => {\n+  const { isDir, fileName, children, path, level } = tree\n+  const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n+  if (tree.isDir) {\n+    const childNodes = children.map((child) => mapFileList(child))\n+    return (\n+      <FileItemDir>\n+        {childNodes}\n+        {item}\n+      </FileItemDir>\n+    )\n+  } else {\n+    return item\n+  }\n+}\n </script>\n- <style lang=\"scss\" scoped> \n \n- </style> \n- \n+<style lang=\"scss\" scoped></style>\n"
                },
                {
                    "date": 1670003945851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n </template>\n \n <script setup lang=\"tsx\">\n /// <reference path='../../../../../../preload/index.d.ts'/>\n-import FileItem from './sidebar/components/file-list/file-item.vue'\n-import FileItemDir from './sidebar/components/file-list/file-item-dir.vue'\n+import FileItem from './file-item.vue';\n+import FileItemDir from './file-item-dir.vue';\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n \n window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n"
                },
                {
                    "date": 1670003966172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import FileItem from './file-item.vue';\n import FileItemDir from './file-item-dir.vue';\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n-\n+console.log('📕','')\n window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n   console.log('📕', mapFileList(tree))\n })\n const mapFileList = (tree: DirTree) => {\n"
                },
                {
                    "date": 1670004106244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n import FileItem from './file-item.vue';\n import FileItemDir from './file-item-dir.vue';\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n-console.log('📕','')\n window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n   console.log('📕', mapFileList(tree))\n })\n const mapFileList = (tree: DirTree) => {\n"
                },
                {
                    "date": 1670004114284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <template>\n   <div></div>\n </template>\n \n-<script setup lang=\"tsx\">\n+<script lang=\"tsx\">\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue';\n import FileItemDir from './file-item-dir.vue';\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n"
                },
                {
                    "date": 1670004138000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,6 +26,6 @@\n     return item\n   }\n }\n </script>\n-\n+<script setup lang=\"ts\"></script>\n <style lang=\"scss\" scoped></style>\n"
                },
                {
                    "date": 1670004734897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,6 +26,6 @@\n     return item\n   }\n }\n </script>\n-<script setup lang=\"ts\"></script>\n+\n <style lang=\"scss\" scoped></style>\n"
                },
                {
                    "date": 1670004755303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <template>\n   <div></div>\n </template>\n \n-<script lang=\"tsx\">\n+<script setup lang=\"tsx\">\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue';\n import FileItemDir from './file-item-dir.vue';\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n"
                },
                {
                    "date": 1670041133385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n-<template>\n-  <div></div>\n-</template>\n \n+\n <script setup lang=\"tsx\">\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue';\n import FileItemDir from './file-item-dir.vue';\n@@ -27,5 +25,4 @@\n   }\n }\n </script>\n \n-<style lang=\"scss\" scoped></style>\n"
                },
                {
                    "date": 1670041150232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,10 @@\n \n \n <script setup lang=\"tsx\">\n+// v-if、v-else-if、v-else无法直接使用，需使用逻辑与、逻辑或、三元表达式实现条件渲染。\n+// v-for无法直接使用，需使用map去实现循环遍历渲染。\n+// v-on无法直接使用，需使用原生绑定事件方式去实现，因此无法使用事件修饰符。\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue';\n import FileItemDir from './file-item-dir.vue';\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n"
                },
                {
                    "date": 1670041487794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,10 @@\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue';\n import FileItemDir from './file-item-dir.vue';\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n-import { DirTree } from '../../../../../../common/types'\n+import { DirTree } from '../../../../../../common/types';\n+\n window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n   console.log('📕', mapFileList(tree))\n })\n const mapFileList = (tree: DirTree) => {\n"
                },
                {
                    "date": 1670041714784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,25 @@\n \n \n <script setup lang=\"tsx\">\n+\n // v-if、v-else-if、v-else无法直接使用，需使用逻辑与、逻辑或、三元表达式实现条件渲染。\n // v-for无法直接使用，需使用map去实现循环遍历渲染。\n // v-on无法直接使用，需使用原生绑定事件方式去实现，因此无法使用事件修饰符。\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue';\n import FileItemDir from './file-item-dir.vue';\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n-import { DirTree } from '../../../../../../common/types';\n \n+interface DirTree {\n+  fileName: string\n+  level: number\n+  children: DirTree[]\n+  path: string\n+  isDir: boolean\n+  opened: false\n+}\n+\n window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n   console.log('📕', mapFileList(tree))\n })\n const mapFileList = (tree: DirTree) => {\n"
                },
                {
                    "date": 1670042305523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,13 @@\n-\n-\n-<script setup lang=\"tsx\">\n-\n+<script lang=\"tsx\">\n // v-if、v-else-if、v-else无法直接使用，需使用逻辑与、逻辑或、三元表达式实现条件渲染。\n // v-for无法直接使用，需使用map去实现循环遍历渲染。\n // v-on无法直接使用，需使用原生绑定事件方式去实现，因此无法使用事件修饰符。\n /// <reference path='../../../../../../preload/index.d.ts'/>\n-import FileItem from './file-item.vue';\n-import FileItemDir from './file-item-dir.vue';\n+import FileItem from './file-item.vue'\n+import FileItemDir from './file-item-dir.vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n+import { defineComponent } from 'vue'\n \n interface DirTree {\n   fileName: string\n   level: number\n@@ -36,6 +34,13 @@\n   } else {\n     return item\n   }\n }\n+export default defineComponent({\n+  props: {\n+    tree: Object\n+  },\n+  setup() {\n+    return mapFileList(Object)\n+  }\n+})\n </script>\n-\n"
                },
                {
                    "date": 1670042973329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,13 @@\n // v-on无法直接使用，需使用原生绑定事件方式去实现，因此无法使用事件修饰符。\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue'\n import FileItemDir from './file-item-dir.vue'\n+import { defineComponent } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n-import { defineComponent } from 'vue'\n-\n+window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n+  console.log('📕', mapFileList(tree))\n+})\n interface DirTree {\n   fileName: string\n   level: number\n   children: DirTree[]\n@@ -16,11 +18,9 @@\n   isDir: boolean\n   opened: false\n }\n \n-window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n-  console.log('📕', mapFileList(tree))\n-})\n+\n const mapFileList = (tree: DirTree) => {\n   const { isDir, fileName, children, path, level } = tree\n   const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n   if (tree.isDir) {\n@@ -39,8 +39,8 @@\n   props: {\n     tree: Object\n   },\n   setup() {\n-    return mapFileList(Object)\n+    return mapFileList(tree)\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670043145434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n // v-on无法直接使用，需使用原生绑定事件方式去实现，因此无法使用事件修饰符。\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue'\n import FileItemDir from './file-item-dir.vue'\n-import { defineComponent } from 'vue'\n+import { defineComponent,PropType } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n   console.log('📕', mapFileList(tree))\n })\n@@ -36,11 +36,11 @@\n   }\n }\n export default defineComponent({\n   props: {\n-    tree: Object\n+    tree: Object as PropType<DirTree>\n   },\n   setup() {\n-    return mapFileList(tree)\n+    return mapFileList(props.tree)\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670043171169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,8 @@\n   props: {\n     tree: Object as PropType<DirTree>\n   },\n   setup() {\n-    return mapFileList(props.tree)\n+    // return mapFileList()\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670052213013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,13 +4,11 @@\n // v-on无法直接使用，需使用原生绑定事件方式去实现，因此无法使用事件修饰符。\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue'\n import FileItemDir from './file-item-dir.vue'\n-import { defineComponent,PropType } from 'vue'\n+import { defineComponent, PropType, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n-window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n-  console.log('📕', mapFileList(tree))\n-})\n+\n interface DirTree {\n   fileName: string\n   level: number\n   children: DirTree[]\n@@ -18,9 +16,8 @@\n   isDir: boolean\n   opened: false\n }\n \n-\n const mapFileList = (tree: DirTree) => {\n   const { isDir, fileName, children, path, level } = tree\n   const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n   if (tree.isDir) {\n@@ -39,8 +36,13 @@\n   props: {\n     tree: Object as PropType<DirTree>\n   },\n   setup() {\n-    // return mapFileList()\n+    const dirTree = ref<DirTree>()\n+    window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n+      dirTree.value = tree\n+    })\n+    if (dirTree.value) return mapFileList(dirTree.value)\n+    else return <li />\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670052519805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n // v-for无法直接使用，需使用map去实现循环遍历渲染。\n // v-on无法直接使用，需使用原生绑定事件方式去实现，因此无法使用事件修饰符。\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue'\n-import FileItemDir from './file-item-dir.vue'\n import { defineComponent, PropType, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n \n interface DirTree {\n@@ -22,12 +21,14 @@\n   const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n   if (tree.isDir) {\n     const childNodes = children.map((child) => mapFileList(child))\n     return (\n-      <FileItemDir>\n-        {childNodes}\n+<ul>\n+\n+  {childNodes}\n         {item}\n-      </FileItemDir>\n+</ul>\n+ \n     )\n   } else {\n     return item\n   }\n"
                },
                {
                    "date": 1670052580376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,14 +21,12 @@\n   const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n   if (tree.isDir) {\n     const childNodes = children.map((child) => mapFileList(child))\n     return (\n-<ul>\n-\n-  {childNodes}\n+      <ul>\n+        {childNodes}\n         {item}\n-</ul>\n- \n+      </ul>\n     )\n   } else {\n     return item\n   }\n@@ -41,9 +39,8 @@\n     const dirTree = ref<DirTree>()\n     window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n       dirTree.value = tree\n     })\n-    if (dirTree.value) return mapFileList(dirTree.value)\n-    else return <li />\n+return <li />\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670052633258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,8 @@\n     const dirTree = ref<DirTree>()\n     window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n       dirTree.value = tree\n     })\n-return <li />\n+return ()=><li/>\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670052856121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,10 @@\n   isDir: boolean\n   opened: false\n }\n \n-const mapFileList = (tree: DirTree) => {\n+const mapFileList = (tree?: DirTree) => {\n+  if (!tree) return <li>空数据</li>\n   const { isDir, fileName, children, path, level } = tree\n   const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n   if (tree.isDir) {\n     const childNodes = children.map((child) => mapFileList(child))\n@@ -39,8 +40,8 @@\n     const dirTree = ref<DirTree>()\n     window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n       dirTree.value = tree\n     })\n-return ()=><li/>\n+    return () => mapFileList(dirTree.value)\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670052908112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,18 +5,12 @@\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue'\n import { defineComponent, PropType, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n+import { DirTree } from '../../../../../../common/types'\n \n-interface DirTree {\n-  fileName: string\n-  level: number\n-  children: DirTree[]\n-  path: string\n-  isDir: boolean\n-  opened: false\n-}\n \n+\n const mapFileList = (tree?: DirTree) => {\n   if (!tree) return <li>空数据</li>\n   const { isDir, fileName, children, path, level } = tree\n   const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n"
                },
                {
                    "date": 1670052921247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,8 @@\n import { defineComponent, PropType, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n \n-\n-\n const mapFileList = (tree?: DirTree) => {\n   if (!tree) return <li>空数据</li>\n   const { isDir, fileName, children, path, level } = tree\n   const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n"
                },
                {
                    "date": 1670056263003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,19 @@\n   const { isDir, fileName, children, path, level } = tree\n   const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n   if (tree.isDir) {\n     const childNodes = children.map((child) => mapFileList(child))\n+    const openDir = ref(false)\n+    const handleClick = () => (openDir.value = !openDir.value)\n     return (\n-      <ul>\n+      <ul\n+        style={{\n+          height: openDir ? 'auto' : '0px'\n+        }}\n+        onClick={handleClick}\n+      > {item}\n         {childNodes}\n-        {item}\n+       \n       </ul>\n     )\n   } else {\n     return item\n"
                },
                {
                    "date": 1670056329768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,12 @@\n         style={{\n           height: openDir ? 'auto' : '0px'\n         }}\n         onClick={handleClick}\n-      > {item}\n+      >\n+        {' '}\n+        {level !== 0 && item}\n         {childNodes}\n-       \n       </ul>\n     )\n   } else {\n     return item\n"
                },
                {
                    "date": 1670056398771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,8 @@\n           height: openDir ? 'auto' : '0px'\n         }}\n         onClick={handleClick}\n       >\n-        {' '}\n         {level !== 0 && item}\n         {childNodes}\n       </ul>\n     )\n"
                },
                {
                    "date": 1670056415676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,9 @@\n   setup() {\n     const dirTree = ref<DirTree>()\n     window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n       dirTree.value = tree\n+      console.log('📕',tree)\n     })\n     return () => mapFileList(dirTree.value)\n   }\n })\n"
                },
                {
                    "date": 1670056481770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         }}\n         onClick={handleClick}\n       >\n         {level !== 0 && item}\n-        {childNodes}\n+        {children.length && childNodes}\n       </ul>\n     )\n   } else {\n     return item\n"
                },
                {
                    "date": 1670058700553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,27 +10,28 @@\n \n const mapFileList = (tree?: DirTree) => {\n   if (!tree) return <li>空数据</li>\n   const { isDir, fileName, children, path, level } = tree\n-  const item = <FileItem name={fileName} isDir={isDir} path={path} level={level} />\n+  const openDir = ref(false)\n+  const handleClickItem = () => {\n+    console.log('📕',openDir.value)\n+    openDir.value = !openDir.value\n+  }\n+  const item = <FileItem onClickItem={handleClickItem} name={fileName} isDir={isDir} path={path} level={level} />\n   if (tree.isDir) {\n     const childNodes = children.map((child) => mapFileList(child))\n-    const openDir = ref(false)\n-    const handleClick = () => (openDir.value = !openDir.value)\n     return (\n       <ul\n         style={{\n           height: openDir ? 'auto' : '0px'\n         }}\n-        onClick={handleClick}\n       >\n         {level !== 0 && item}\n-        {children.length && childNodes}\n+        {childNodes}\n       </ul>\n     )\n-  } else {\n-    return item\n   }\n+  return item\n }\n export default defineComponent({\n   props: {\n     tree: Object as PropType<DirTree>\n@@ -38,9 +39,9 @@\n   setup() {\n     const dirTree = ref<DirTree>()\n     window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n       dirTree.value = tree\n-      console.log('📕',tree)\n+      console.log('📕', tree)\n     })\n     return () => mapFileList(dirTree.value)\n   }\n })\n"
                },
                {
                    "date": 1670058811354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n         style={{\n           height: openDir ? 'auto' : '0px'\n         }}\n       >\n+      <h2>{openDir?:'open':'notopen'}</h2>\n         {level !== 0 && item}\n         {childNodes}\n       </ul>\n     )\n"
                },
                {
                    "date": 1670058926227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,21 +12,29 @@\n   if (!tree) return <li>空数据</li>\n   const { isDir, fileName, children, path, level } = tree\n   const openDir = ref(false)\n   const handleClickItem = () => {\n-    console.log('📕',openDir.value)\n+    console.log('📕', openDir.value)\n     openDir.value = !openDir.value\n   }\n-  const item = <FileItem onClickItem={handleClickItem} name={fileName} isDir={isDir} path={path} level={level} />\n+  const item = (\n+    <FileItem\n+      onClickItem={handleClickItem}\n+      name={fileName}\n+      isDir={isDir}\n+      path={path}\n+      level={level}\n+    />\n+  )\n   if (tree.isDir) {\n     const childNodes = children.map((child) => mapFileList(child))\n     return (\n       <ul\n         style={{\n           height: openDir ? 'auto' : '0px'\n         }}\n       >\n-      <h2>{openDir?:'open':'notopen'}</h2>\n+        <h2>{openDir ? 'open' : 'notopen'}</h2>\n         {level !== 0 && item}\n         {childNodes}\n       </ul>\n     )\n"
                },
                {
                    "date": 1670059073224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,20 @@\n import { defineComponent, PropType, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n \n-const mapFileList = (tree?: DirTree) => {\n+\n+export default defineComponent({\n+  props: {\n+    tree: Object as PropType<DirTree>\n+  },\n+  setup() {\n+    const dirTree = ref<DirTree>()\n+    window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n+      dirTree.value = tree\n+      console.log('📕', tree)\n+    })\n+    const mapFileList = (tree?: DirTree) => {\n   if (!tree) return <li>空数据</li>\n   const { isDir, fileName, children, path, level } = tree\n   const openDir = ref(false)\n   const handleClickItem = () => {\n@@ -40,18 +51,8 @@\n     )\n   }\n   return item\n }\n-export default defineComponent({\n-  props: {\n-    tree: Object as PropType<DirTree>\n-  },\n-  setup() {\n-    const dirTree = ref<DirTree>()\n-    window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n-      dirTree.value = tree\n-      console.log('📕', tree)\n-    })\n     return () => mapFileList(dirTree.value)\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670059116686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,8 @@\n import FileItem from './file-item.vue'\n import { defineComponent, PropType, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n-\n-\n export default defineComponent({\n   props: {\n     tree: Object as PropType<DirTree>\n   },\n@@ -19,40 +17,40 @@\n       dirTree.value = tree\n       console.log('📕', tree)\n     })\n     const mapFileList = (tree?: DirTree) => {\n-  if (!tree) return <li>空数据</li>\n-  const { isDir, fileName, children, path, level } = tree\n-  const openDir = ref(false)\n-  const handleClickItem = () => {\n-    console.log('📕', openDir.value)\n-    openDir.value = !openDir.value\n-  }\n-  const item = (\n-    <FileItem\n-      onClickItem={handleClickItem}\n-      name={fileName}\n-      isDir={isDir}\n-      path={path}\n-      level={level}\n-    />\n-  )\n-  if (tree.isDir) {\n-    const childNodes = children.map((child) => mapFileList(child))\n-    return (\n-      <ul\n-        style={{\n-          height: openDir ? 'auto' : '0px'\n-        }}\n-      >\n-        <h2>{openDir ? 'open' : 'notopen'}</h2>\n-        {level !== 0 && item}\n-        {childNodes}\n-      </ul>\n-    )\n-  }\n-  return item\n-}\n+      if (!tree) return <li>空数据</li>\n+      const { isDir, fileName, children, path, level } = tree\n+      const openDir = ref(false)\n+      const handleClickItem = () => {\n+        console.log('📕', openDir.value)\n+        openDir.value = !openDir.value\n+      }\n+      const item = (\n+        <FileItem\n+          onClickItem={handleClickItem}\n+          name={fileName}\n+          isDir={isDir}\n+          path={path}\n+          level={level}\n+        />\n+      )\n+      if (tree.isDir) {\n+        const childNodes = children.map((child) => mapFileList(child))\n+        return (\n+          <ul\n+            style={{\n+              height: openDir ? 'auto' : '0px'\n+            }}\n+          >\n+            <h2>{openDir ? 'open' : 'notopen'}</h2>\n+            {level !== 0 && item}\n+            {childNodes}\n+          </ul>\n+        )\n+      }\n+      return item\n+    }\n     return () => mapFileList(dirTree.value)\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670059309412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,11 +37,9 @@\n       if (tree.isDir) {\n         const childNodes = children.map((child) => mapFileList(child))\n         return (\n           <ul\n-            style={{\n-              height: openDir ? 'auto' : '0px'\n-            }}\n+          class={openDir?'open':'close'}\n           >\n             <h2>{openDir ? 'open' : 'notopen'}</h2>\n             {level !== 0 && item}\n             {childNodes}\n"
                },
                {
                    "date": 1670059394309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,12 +36,9 @@\n       )\n       if (tree.isDir) {\n         const childNodes = children.map((child) => mapFileList(child))\n         return (\n-          <ul\n-          class={openDir?'open':'close'}\n-          >\n-            <h2>{openDir ? 'open' : 'notopen'}</h2>\n+          <ul class={openDir ? 'open' : 'close'}>\n             {level !== 0 && item}\n             {childNodes}\n           </ul>\n         )\n"
                },
                {
                    "date": 1670059487431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,12 @@\n // v-for无法直接使用，需使用map去实现循环遍历渲染。\n // v-on无法直接使用，需使用原生绑定事件方式去实现，因此无法使用事件修饰符。\n /// <reference path='../../../../../../preload/index.d.ts'/>\n import FileItem from './file-item.vue'\n-import { defineComponent, PropType, ref } from 'vue'\n+import { defineComponent, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n export default defineComponent({\n-  props: {\n-    tree: Object as PropType<DirTree>\n-  },\n   setup() {\n     const dirTree = ref<DirTree>()\n     window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n       dirTree.value = tree\n"
                },
                {
                    "date": 1670059788587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,43 +6,27 @@\n import FileItem from './file-item.vue'\n import { defineComponent, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n+const useFileList = (tree?: DirTree) => {\n+  if (!tree) return <li></li>\n+  const state = ref(1)\n+  return (\n+    <div>\n+      <h1>{state.value}</h1>\n+      <button class={state.value > 0.3 ? 'c' : 'b'} onClick={() => (state.value = Math.random())}>\n+        change-state\n+      </button>\n+    </div>\n+  )\n+}\n export default defineComponent({\n   setup() {\n     const dirTree = ref<DirTree>()\n     window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n       dirTree.value = tree\n       console.log('📕', tree)\n     })\n-    const mapFileList = (tree?: DirTree) => {\n-      if (!tree) return <li>空数据</li>\n-      const { isDir, fileName, children, path, level } = tree\n-      const openDir = ref(false)\n-      const handleClickItem = () => {\n-        console.log('📕', openDir.value)\n-        openDir.value = !openDir.value\n-      }\n-      const item = (\n-        <FileItem\n-          onClickItem={handleClickItem}\n-          name={fileName}\n-          isDir={isDir}\n-          path={path}\n-          level={level}\n-        />\n-      )\n-      if (tree.isDir) {\n-        const childNodes = children.map((child) => mapFileList(child))\n-        return (\n-          <ul class={openDir ? 'open' : 'close'}>\n-            {level !== 0 && item}\n-            {childNodes}\n-          </ul>\n-        )\n-      }\n-      return item\n-    }\n-    return () => mapFileList(dirTree.value)\n+    return () => useFileList(dirTree.value)\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670059800571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n // v-if、v-else-if、v-else无法直接使用，需使用逻辑与、逻辑或、三元表达式实现条件渲染。\n // v-for无法直接使用，需使用map去实现循环遍历渲染。\n // v-on无法直接使用，需使用原生绑定事件方式去实现，因此无法使用事件修饰符。\n /// <reference path='../../../../../../preload/index.d.ts'/>\n-import FileItem from './file-item.vue'\n import { defineComponent, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n const useFileList = (tree?: DirTree) => {\n"
                },
                {
                    "date": 1670059852729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,16 @@\n import { DirTree } from '../../../../../../common/types'\n const useFileList = (tree?: DirTree) => {\n   if (!tree) return <li></li>\n   const state = ref(1)\n+  const handleClick = () => {\n+    state.value = Math.random()\n+    console.log('📕',state.value)\n+  }\n   return (\n     <div>\n       <h1>{state.value}</h1>\n-      <button class={state.value > 0.3 ? 'c' : 'b'} onClick={() => (state.value = Math.random())}>\n+      <button class={state.value > 0.3 ? 'c' : 'b'} onClick={handleClick}>\n         change-state\n       </button>\n     </div>\n   )\n"
                },
                {
                    "date": 1670059950549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,16 +12,14 @@\n   const handleClick = () => {\n     state.value = Math.random()\n     console.log('📕',state.value)\n   }\n-  return (\n-    <div>\n+  return () =>     <div>\n       <h1>{state.value}</h1>\n       <button class={state.value > 0.3 ? 'c' : 'b'} onClick={handleClick}>\n         change-state\n       </button>\n     </div>\n-  )\n }\n export default defineComponent({\n   setup() {\n     const dirTree = ref<DirTree>()\n"
                },
                {
                    "date": 1670059973489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,14 +12,16 @@\n   const handleClick = () => {\n     state.value = Math.random()\n     console.log('📕',state.value)\n   }\n-  return () =>     <div>\n+  return (\n+    <div>\n       <h1>{state.value}</h1>\n       <button class={state.value > 0.3 ? 'c' : 'b'} onClick={handleClick}>\n         change-state\n       </button>\n     </div>\n+  )\n }\n export default defineComponent({\n   setup() {\n     const dirTree = ref<DirTree>()\n"
                },
                {
                    "date": 1670059999485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,13 +23,20 @@\n   )\n }\n export default defineComponent({\n   setup() {\n-    const dirTree = ref<DirTree>()\n-    window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n-      dirTree.value = tree\n-      console.log('📕', tree)\n-    })\n-    return () => useFileList(dirTree.value)\n+    // const dirTree = ref<DirTree>()\n+    // window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n+    //   dirTree.value = tree\n+    //   console.log('📕', tree)\n+    // })\n+    // return () => useFileList(dirTree.value)\n+    const state = ref(1)\n+    return () => (\n+      <>\n+      <h1>{state.value}</h1>\n+        <button class={state.value > 0.3 ? 'c':'b'} onClick={()=>state.value = Math.random()}>change-state</button>\n+      </>\n+    )\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670060400284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,14 +29,21 @@\n     //   dirTree.value = tree\n     //   console.log('📕', tree)\n     // })\n     // return () => useFileList(dirTree.value)\n-    const state = ref(1)\n-    return () => (\n-      <>\n+\n+  const state = ref(1)\n+  const handleClick = () => {\n+    state.value = Math.random()\n+    console.log('📕',state.value)\n+  }\n+  return (\n+    <div>\n       <h1>{state.value}</h1>\n-        <button class={state.value > 0.3 ? 'c':'b'} onClick={()=>state.value = Math.random()}>change-state</button>\n-      </>\n-    )\n+      <button class={state.value > 0.3 ? 'c' : 'b'} onClick={handleClick}>\n+        change-state\n+      </button>\n+    </div>\n+  )\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670060437466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     state.value = Math.random()\n     console.log('📕',state.value)\n   }\n   return (\n-    <div>\n+()=>    <div>\n       <h1>{state.value}</h1>\n       <button class={state.value > 0.3 ? 'c' : 'b'} onClick={handleClick}>\n         change-state\n       </button>\n"
                },
                {
                    "date": 1670060472601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,20 +30,10 @@\n     //   console.log('📕', tree)\n     // })\n     // return () => useFileList(dirTree.value)\n \n-  const state = ref(1)\n-  const handleClick = () => {\n-    state.value = Math.random()\n-    console.log('📕',state.value)\n-  }\n   return (\n-()=>    <div>\n-      <h1>{state.value}</h1>\n-      <button class={state.value > 0.3 ? 'c' : 'b'} onClick={handleClick}>\n-        change-state\n-      </button>\n-    </div>\n+()=> useFileList()\n   )\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670060504433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,13 +6,13 @@\n import { defineComponent, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n const useFileList = (tree?: DirTree) => {\n-  if (!tree) return <li></li>\n+  // if (!tree) return <li></li>\n   const state = ref(1)\n   const handleClick = () => {\n     state.value = Math.random()\n-    console.log('📕',state.value)\n+    console.log('📕', state.value)\n   }\n   return (\n     <div>\n       <h1>{state.value}</h1>\n@@ -30,10 +30,8 @@\n     //   console.log('📕', tree)\n     // })\n     // return () => useFileList(dirTree.value)\n \n-  return (\n-()=> useFileList()\n-  )\n+    return () => useFileList()\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670060667419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,22 +6,27 @@\n import { defineComponent, ref } from 'vue'\n import { UPDATE_DIR_TREE } from '../../../../../../common/eventType'\n import { DirTree } from '../../../../../../common/types'\n const useFileList = (tree?: DirTree) => {\n-  // if (!tree) return <li></li>\n-  const state = ref(1)\n-  const handleClick = () => {\n-    state.value = Math.random()\n-    console.log('📕', state.value)\n-  }\n-  return (\n-    <div>\n-      <h1>{state.value}</h1>\n-      <button class={state.value > 0.3 ? 'c' : 'b'} onClick={handleClick}>\n-        change-state\n-      </button>\n-    </div>\n-  )\n+  const components = defineComponent({\n+    setup() {\n+      const state = ref(1)\n+      const handleClick = () => {\n+        state.value = Math.random()\n+        console.log('📕', state.value)\n+      }\n+      const div = (\n+        <div>\n+          <h1>{state.value}</h1>\n+          <button class={state.value > 0.3 ? 'c' : 'b'} onClick={handleClick}>\n+            change-state\n+          </button>\n+        </div>\n+      )\n+      return () => div\n+    }\n+  })\n+  return components\n }\n export default defineComponent({\n   setup() {\n     // const dirTree = ref<DirTree>()\n"
                },
                {
                    "date": 1670060769298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,8 @@\n     //   console.log('📕', tree)\n     // })\n     // return () => useFileList(dirTree.value)\n \n-    return () => useFileList()\n+    return useFileList()\n   }\n })\n </script>\n"
                },
                {
                    "date": 1670074638901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,13 +28,13 @@\n   return components\n }\n export default defineComponent({\n   setup() {\n-    // const dirTree = ref<DirTree>()\n-    // window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n-    //   dirTree.value = tree\n-    //   console.log('📕', tree)\n-    // })\n+    const dirTree = ref<DirTree>()\n+    window.api.onMain(UPDATE_DIR_TREE, (_e, tree: DirTree) => {\n+      dirTree.value = tree\n+      console.log('📕', tree)\n+    })\n     // return () => useFileList(dirTree.value)\n \n     return useFileList()\n   }\n"
                }
            ],
            "date": 1669998435548,
            "name": "Commit-0",
            "content": " <template> \n   <div> \n\n   </div> \n </template> \n\n <script setup lang=\"tsx\"> \nwindow.p\n </script> \n\n <style lang=\"scss\" scoped> \n\n </style> \n "
        }
    ]
}