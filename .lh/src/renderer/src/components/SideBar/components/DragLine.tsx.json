{
    "sourceFile": "src/renderer/src/components/SideBar/components/DragLine.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1666425906256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1666425906256,
            "name": "Commit-0",
            "content": "export const DragLine = () => {\n  const dragLineMove = (e: React.MouseEvent) => {\n    // clietX就是距离浏览器视口的位置\n    const clientX = e.clientX\n    const dragLine = document.querySelector('.drag-line') as HTMLElement\n    document.onmousemove = (e) => {\n      const newClientX = e.clientX\n      const moveDistance = newClientX - clientX\n      const nextPosition = clientX + moveDistance\n      dragLine.style.left = nextPosition + 'px'\n      return false\n    }\n\n    // 释放鼠标的时候解除事件绑定\n    document.onmouseup = (e) => {\n      const newPosition = e.clientX\n      // 如果太宽了就返回原来的位置\n      // 小于等于100是侧边栏的最少宽度\n      if (newPosition <= 100 || newPosition > 600) {\n        dragLine.style.left = clientX + 'px'\n      } else {\n        dragLine.style.left = newPosition + 'px'\n        const sideBar = document.querySelector('.side-bar') as HTMLElement\n        sideBar.style.width = newPosition + 'px'\n      }\n      document.onmousemove = null\n      document.onmouseup = null\n      return false\n    }\n  }\n  return <div className=\"drag-line\" onMouseDown={dragLineMove}></div>\n}\n"
        }
    ]
}