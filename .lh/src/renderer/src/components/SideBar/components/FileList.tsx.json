{
  "sourceFile": "src/renderer/src/components/SideBar/components/FileList.tsx",
  "activeCommit": 0,
  "commits": [
    {
      "activePatchIndex": 179,
      "patches": [
        {
          "date": 1667545250125,
          "content": "Index: \n===================================================================\n--- \n+++ \n"
        },
        {
          "date": 1667568007390,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,9 @@\n-export const FileList = () =>{\n-    return <div className=\"file-list\">\n+import { useEffect } from 'react'\n \n-    </div>\n\\ No newline at end of file\n-}\n+export const FileList = () => {\n+  // 渲染的时候就获取文件列表\n+  useEffect(() => {}, [\n+    \n+  ])\n+  return <div className=\"file-list\"></div>\n+}\n"
        },
        {
          "date": 1667568458661,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,13 @@\n import { useEffect } from 'react'\n \n export const FileList = () => {\n+  const getFileList = async () => {\n+    const fileList = await window.api.onGetFileList()\n+    console.log(fileList)\n+  }\n   // 渲染的时候就获取文件列表\n-  useEffect(() => {}, [\n-    \n-  ])\n+  useEffect(() => {\n+    getFileList()\n+  }, [])\n   return <div className=\"file-list\"></div>\n }\n"
        },
        {
          "date": 1667568615710,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,7 +7,8 @@\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     getFileList()\n+    console.log('----------')\n   }, [])\n   return <div className=\"file-list\"></div>\n }\n"
        },
        {
          "date": 1667569349705,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,6 +9,8 @@\n   useEffect(() => {\n     getFileList()\n     console.log('----------')\n   }, [])\n-  return <div className=\"file-list\"></div>\n+  return <div className=\"file-list\">\n+    \n+  </div>\n }\n"
        },
        {
          "date": 1667569465628,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n   useEffect(() => {\n     getFileList()\n     console.log('----------')\n   }, [])\n+  \n   return <div className=\"file-list\">\n-    \n+\n   </div>\n }\n"
        },
        {
          "date": 1667569493958,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { useEffect } from 'react'\n-\n+const \n export const FileList = () => {\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     console.log(fileList)\n@@ -9,9 +9,9 @@\n   useEffect(() => {\n     getFileList()\n     console.log('----------')\n   }, [])\n-  \n+\n   return <div className=\"file-list\">\n \n   </div>\n }\n"
        },
        {
          "date": 1667569502053,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { useEffect } from 'react'\n-const \n+\n export const FileList = () => {\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     console.log(fileList)\n@@ -14,4 +14,5 @@\n   return <div className=\"file-list\">\n \n   </div>\n }\n+const map\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569514195,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { useEffect } from 'react'\n+import { FileTree } from 'src/common/interface'\n \n export const FileList = () => {\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n@@ -14,5 +15,7 @@\n   return <div className=\"file-list\">\n \n   </div>\n }\n-const map\n\\ No newline at end of file\n+const mapFileList = (fileTree:FileTree) =>{\n+    \n+}\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569875974,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,6 +16,6 @@\n \n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n-    \n+    if()\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569884612,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,5 +17,6 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if()\n+    const dfs = ()\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569891246,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,6 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if()\n-    const dfs = ()\n+    const dfs = (Om)\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569901363,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,6 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if()\n-    const dfs = (Om)\n+    const dfs = (Dir:)\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569910520,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,6 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if()\n-    const dfs = (Dir:)\n+    const dfs = (Dir:Omit<F>)\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569917520,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,6 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if()\n-    const dfs = (Dir:Omit<F>)\n+    const dfs = (Dir)\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569928537,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,7 +16,7 @@\n \n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n-    if()\n+    if(typeof fileTree === 'string') return \n     const dfs = (Dir)\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569939142,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,8 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') return \n-    const dfs = (Dir)\n+    const dfs = (fileTree) =>{\n+        \n+    }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569948519,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') return \n+    \n     const dfs = (fileTree) =>{\n-        \n+\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569957123,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') return \n-    \n-    const dfs = (fileTree) =>{\n \n+    const dfs = (fileTree=fileTree) =>{\n+\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569965231,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,8 @@\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') return \n \n-    const dfs = (fileTree=fileTree) =>{\n+    const dfs = (fileTrees) =>{\n \n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569970959,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,8 @@\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') return \n \n-    const dfs = (fileTrees) =>{\n+    const dfs = (dir = fileTree) =>{\n \n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667569992955,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,11 @@\n \n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n-    if(typeof fileTree === 'string') return \n+    if(typeof fileTree === 'string') {\n+        \n+    }\n \n     const dfs = (dir = fileTree) =>{\n \n     }\n"
        },
        {
          "date": 1667570002087,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n         \n+        return \n     }\n \n     const dfs = (dir = fileTree) =>{\n \n"
        },
        {
          "date": 1667570018055,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,8 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n-        \n         return \n     }\n \n     const dfs = (dir = fileTree) =>{\n"
        },
        {
          "date": 1667570024755,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n-        return \n+        return ``>\n     }\n \n     const dfs = (dir = fileTree) =>{\n \n"
        },
        {
          "date": 1667570031435,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n-        return ``>\n+        return `<li></li>`\n     }\n \n     const dfs = (dir = fileTree) =>{\n \n"
        },
        {
          "date": 1667570039183,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   </div>\n }\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n-        return `<li></li>`\n+        return `<li>${fileTree}</li>`\n     }\n \n     const dfs = (dir = fileTree) =>{\n \n"
        },
        {
          "date": 1667570057971,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n         return `<li>${fileTree}</li>`\n     }\n \n     const dfs = (dir = fileTree) =>{\n-\n+        const \n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570076682,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n         return `<li>${fileTree}</li>`\n     }\n \n     const dfs = (dir = fileTree) =>{\n-        const \n+        const ul\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570083084,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n         return `<li>${fileTree}</li>`\n     }\n \n     const dfs = (dir = fileTree) =>{\n-        const ul\n+        const ul = <ul></ul>\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570154578,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n         return `<li>${fileTree}</li>`\n     }\n \n     const dfs = (dir = fileTree) =>{\n-        const ul = <ul></ul>\n+        const ul = document.crea\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570161592,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n         return `<li>${fileTree}</li>`\n     }\n \n     const dfs = (dir = fileTree) =>{\n-        const ul = document.crea\n+        const ul = document.createElement('ul')\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570167227,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,6 +22,7 @@\n     }\n \n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n+        ul.setAttribute('')\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570182973,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,7 +22,7 @@\n     }\n \n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n-        ul.setAttribute('')\n+        \n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570277794,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,7 +22,7 @@\n     }\n \n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n-        \n+        const li = document.create\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570283412,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,7 +22,8 @@\n     }\n \n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n-        const li = document.create\n+        const li = document.createElement('li')\n+        li.in\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570289385,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,7 +23,7 @@\n \n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n-        li.in\n+        li.innerText = ul\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570295656,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,7 +23,8 @@\n \n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n-        li.innerText = ul\n+        li.innerText = dir.fileName\n+        \n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570301518,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,7 +24,7 @@\n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n-        \n+        ul.children\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570314638,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,7 +24,9 @@\n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n-        ul.children\n+        dir.children.forEach(file => {\n+            \n+        })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570325991,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,8 @@\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n         dir.children.forEach(file => {\n-            \n+            if(typeof file ==='string')\n         })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570332136,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,8 @@\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n         dir.children.forEach(file => {\n-            if(typeof file ==='string')\n+            if(typeof file ==='string') \n         })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570337759,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,12 @@\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n         dir.children.forEach(file => {\n-            if(typeof file ==='string') \n+            if(typeof file ==='string') {\n+\n+            } else {\n+                \n+            }\n         })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570362441,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,18 +19,18 @@\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n         return `<li>${fileTree}</li>`\n     }\n-\n+    const container = document.create\n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n \n             } else {\n-                \n+                dfs()\n             }\n         })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570368270,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n         return `<li>${fileTree}</li>`\n     }\n-    const container = document.create\n+    const container = document.createDocumentFragment()\n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n"
        },
        {
          "date": 1667570375729,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n         return `<li>${fileTree}</li>`\n     }\n-    const container = document.createDocumentFragment()\n+    const container = document.createDocumentFragment().a\n     const dfs = (dir = fileTree) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n"
        },
        {
          "date": 1667570381601,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,10 @@\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n         return `<li>${fileTree}</li>`\n     }\n-    const container = document.createDocumentFragment().a\n-    const dfs = (dir = fileTree) =>{\n+    const container = document.createDocumentFragment()\n+    const dfs = (dir = fileTree,conatiner) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n         dir.children.forEach(file => {\n"
        },
        {
          "date": 1667570396626,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     if(typeof fileTree === 'string') {\n         return `<li>${fileTree}</li>`\n     }\n     const container = document.createDocumentFragment()\n-    const dfs = (dir = fileTree,conatiner) =>{\n+    const dfs = (dir = fileTree,conatiner:Document) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n         dir.children.forEach(file => {\n"
        },
        {
          "date": 1667570411277,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,18 +19,17 @@\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n         return `<li>${fileTree}</li>`\n     }\n-    const container = document.createDocumentFragment()\n-    const dfs = (dir = fileTree,conatiner:Document) =>{\n+    const dfs = (dir = fileTree,conatiner:DocumentFragment) =>{\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n \n             } else {\n-                dfs()\n+                dfs(ul.)\n             }\n         })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570417293,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n \n             } else {\n-                dfs(ul.)\n+                dfs(file,)\n             }\n         })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570435175,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,9 @@\n         return `<li>${fileTree}</li>`\n     }\n     const dfs = (dir = fileTree,conatiner:DocumentFragment) =>{\n         const ul = document.createElement('ul')\n-        const li = document.createElement('li')\n-        li.innerText = dir.fileName\n+ \n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n \n             } else {\n"
        },
        {
          "date": 1667570440604,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n         const ul = document.createElement('ul')\n  \n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n-\n+                const li = document.createElement('li')\n+                li.innerText = dir.fileName\n+                c\n             } else {\n                 dfs(file,)\n             }\n         })\n"
        },
        {
          "date": 1667570856410,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,15 +20,14 @@\n     if(typeof fileTree === 'string') {\n         return `<li>${fileTree}</li>`\n     }\n     const dfs = (dir = fileTree,conatiner:DocumentFragment) =>{\n-        const ul = document.createElement('ul')\n  \n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n                 const li = document.createElement('li')\n                 li.innerText = dir.fileName\n-                c\n+                conatiner.appendChild('li')\n             } else {\n                 dfs(file,)\n             }\n         })\n"
        },
        {
          "date": 1667570862613,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,10 @@\n                 const li = document.createElement('li')\n                 li.innerText = dir.fileName\n                 conatiner.appendChild('li')\n             } else {\n+              const ul = document.createElement('ul')\n+\n                 dfs(file,)\n             }\n         })\n     }\n"
        },
        {
          "date": 1667570881966,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,10 @@\n     if(typeof fileTree === 'string') {\n         return `<li>${fileTree}</li>`\n     }\n     const dfs = (dir = fileTree,conatiner:DocumentFragment) =>{\n- \n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n-                const li = document.createElement('li')\n                 li.innerText = dir.fileName\n                 conatiner.appendChild('li')\n             } else {\n               const ul = document.createElement('ul')\n"
        },
        {
          "date": 1667570887466,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,12 +22,14 @@\n     }\n     const dfs = (dir = fileTree,conatiner:DocumentFragment) =>{\n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n+                const li = document.createElement('li') \n                 li.innerText = dir.fileName\n                 conatiner.appendChild('li')\n             } else {\n               const ul = document.createElement('ul')\n+              const li = document.createElement('li') \n \n                 dfs(file,)\n             }\n         })\n"
        },
        {
          "date": 1667570901636,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,12 @@\n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n                 const li = document.createElement('li') \n                 li.innerText = dir.fileName\n-                conatiner.appendChild('li')\n+                conatiner.appendChild(li)\n             } else {\n               const ul = document.createElement('ul')\n               const li = document.createElement('li') \n-\n                 dfs(file,)\n             }\n         })\n     }\n"
        },
        {
          "date": 1667570909153,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,10 @@\n                 li.innerText = dir.fileName\n                 conatiner.appendChild(li)\n             } else {\n               const ul = document.createElement('ul')\n-              const li = document.createElement('li') \n+              const li = document.createElement('li')\n+              li.innerText = dir.fi \n                 dfs(file,)\n             }\n         })\n     }\n"
        },
        {
          "date": 1667570914259,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,10 @@\n                 conatiner.appendChild(li)\n             } else {\n               const ul = document.createElement('ul')\n               const li = document.createElement('li')\n-              li.innerText = dir.fi \n-                dfs(file,)\n+              li.innerText = dir.fileName \n+                dfs(file,ul)\n             }\n         })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570921502,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,10 @@\n             } else {\n               const ul = document.createElement('ul')\n               const li = document.createElement('li')\n               li.innerText = dir.fileName \n-                dfs(file,ul)\n+              ul.appendChild(li)\n+                dfs(file,)\n             }\n         })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570929617,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n               const ul = document.createElement('ul')\n               const li = document.createElement('li')\n               li.innerText = dir.fileName \n               ul.appendChild(li)\n-                dfs(file,)\n+                dfs(file,ul)\n             }\n         })\n     }\n }\n\\ No newline at end of file\n"
        },
        {
          "date": 1667570939488,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n const mapFileList = (fileTree:FileTree) =>{\n     if(typeof fileTree === 'string') {\n         return `<li>${fileTree}</li>`\n     }\n-    const dfs = (dir = fileTree,conatiner:DocumentFragment) =>{\n+    const dfs = (dir = fileTree,conatiner:DocumentFragment|HTMLElement) =>{\n         dir.children.forEach(file => {\n             if(typeof file ==='string') {\n                 const li = document.createElement('li') \n                 li.innerText = dir.fileName\n"
        },
        {
          "date": 1667570957497,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,28 +11,27 @@\n     getFileList()\n     console.log('----------')\n   }, [])\n \n-  return <div className=\"file-list\">\n-\n-  </div>\n+  return <div className=\"file-list\"></div>\n }\n-const mapFileList = (fileTree:FileTree) =>{\n-    if(typeof fileTree === 'string') {\n-        return `<li>${fileTree}</li>`\n-    }\n-    const dfs = (dir = fileTree,conatiner:DocumentFragment|HTMLElement) =>{\n-        dir.children.forEach(file => {\n-            if(typeof file ==='string') {\n-                const li = document.createElement('li') \n-                li.innerText = dir.fileName\n-                conatiner.appendChild(li)\n-            } else {\n-              const ul = document.createElement('ul')\n-              const li = document.createElement('li')\n-              li.innerText = dir.fileName \n-              ul.appendChild(li)\n-                dfs(file,ul)\n-            }\n-        })\n-    }\n\\ No newline at end of file\n-}\n+const mapFileList = (fileTree: FileTree) => {\n+  if (typeof fileTree === 'string') {\n+    return `<li>${fileTree}</li>`\n+  }\n+  const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n+    dir.children.forEach((file) => {\n+      if (typeof file === 'string') {\n+        const li = document.createElement('li')\n+        li.innerText = dir.fileName\n+        conatiner.appendChild(li)\n+      } else {\n+        const ul = document.createElement('ul')\n+        const li = document.createElement('li')\n+        li.innerText = dir.fileName\n+        ul.appendChild(li)\n+        dfs(file, ul)\n+      }\n+    })\n+  }\n+  const frag\n+}\n"
        },
        {
          "date": 1667570964897,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,6 +32,6 @@\n         dfs(file, ul)\n       }\n     })\n   }\n-  const frag\n+  const fragment = document.create\n }\n"
        },
        {
          "date": 1667570978362,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,6 +32,7 @@\n         dfs(file, ul)\n       }\n     })\n   }\n-  const fragment = document.create\n+  const fragment = document.createDocumentFragment()\n+  dfs\n }\n"
        },
        {
          "date": 1667570983756,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,6 +33,6 @@\n       }\n     })\n   }\n   const fragment = document.createDocumentFragment()\n-  dfs\n+  dfs(fileTree)\n }\n"
        },
        {
          "date": 1667570992329,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,6 +33,6 @@\n       }\n     })\n   }\n   const fragment = document.createDocumentFragment()\n-  dfs(fileTree)\n+  dfs(fileTree,fragment)\n }\n"
        },
        {
          "date": 1667570998642,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,5 +34,6 @@\n     })\n   }\n   const fragment = document.createDocumentFragment()\n   dfs(fileTree,fragment)\n+  return fragment\n }\n"
        },
        {
          "date": 1667571017300,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     console.log(fileList)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n-    getFileList()\n+    const filegetFileList()\n     console.log('----------')\n   }, [])\n \n   return <div className=\"file-list\"></div>\n"
        },
        {
          "date": 1667571041611,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     console.log(fileList)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n-    const filegetFileList()\n+    const fileList = getFileList()\n     console.log('----------')\n   }, [])\n \n   return <div className=\"file-list\"></div>\n"
        },
        {
          "date": 1667571047118,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n     console.log('----------')\n+    console.log()\n   }, [])\n \n   return <div className=\"file-list\"></div>\n }\n"
        },
        {
          "date": 1667571086337,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n     console.log('----------')\n-    console.log()\n+    console.log(mapFileList(fileList))\n   }, [])\n \n   return <div className=\"file-list\"></div>\n }\n@@ -19,8 +19,9 @@\n   if (typeof fileTree === 'string') {\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n+    console.log()\n     dir.children.forEach((file) => {\n       if (typeof file === 'string') {\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n"
        },
        {
          "date": 1667571114243,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     const fileList = await window.api.onGetFileList()\n     console.log(fileList)\n   }\n   // 渲染的时候就获取文件列表\n-  useEffect(() => {\n+  useEffect(async () => {\n     const fileList = getFileList()\n     console.log('----------')\n     console.log(mapFileList(fileList))\n   }, [])\n@@ -19,9 +19,9 @@\n   if (typeof fileTree === 'string') {\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n-    console.log()\n+    console.log(dir)\n     dir.children.forEach((file) => {\n       if (typeof file === 'string') {\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n"
        },
        {
          "date": 1667571123928,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,9 @@\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(async () => {\n     const fileList = getFileList()\n-    console.log('----------')\n-    console.log(mapFileList(fileList))\n+\n   }, [])\n \n   return <div className=\"file-list\"></div>\n }\n"
        },
        {
          "date": 1667571130042,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,13 @@\n \n export const FileList = () => {\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n-    console.log(fileList)\n+    console.log('----------')\n+    console.log(mapFileList(fileList))\n   }\n   // 渲染的时候就获取文件列表\n-  useEffect(async () => {\n+  useEffect(() => {\n     const fileList = getFileList()\n \n   }, [])\n \n"
        },
        {
          "date": 1667571154124,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   return <div className=\"file-list\"></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n   if (typeof fileTree === 'string') {\n-    return `<li>${fileTree}</li>`\n+    return `<li>${fileTree.}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n     dir.children.forEach((file) => {\n"
        },
        {
          "date": 1667571483767,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,11 @@\n \n   return <div className=\"file-list\"></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n+    \n   if (typeof fileTree === 'string') {\n-    return `<li>${fileTree.}</li>`\n+    return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n     dir.children.forEach((file) => {\n"
        },
        {
          "date": 1667571488896,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n   return <div className=\"file-list\"></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-    \n+   \n   if (typeof fileTree === 'string') {\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n"
        },
        {
          "date": 1667571494878,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n   return <div className=\"file-list\"></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-   \n+ \n   if (typeof fileTree === 'string') {\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n"
        },
        {
          "date": 1667571501358,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n   return <div className=\"file-list\"></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n- \n+ if(fileTree.children.length)\n   if (typeof fileTree === 'string') {\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n"
        },
        {
          "date": 1667571506741,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,11 @@\n \n   return <div className=\"file-list\"></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n- if(fileTree.children.length)\n+ if(fileTree.children.length ===0) {\n+    \n+ }\n   if (typeof fileTree === 'string') {\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n"
        },
        {
          "date": 1667571695298,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n \n   return <div className=\"file-list\"></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n- if(fileTree.children.length ===0) {\n-    \n+ if(fileTree.children.length ===0 && fileTree.) {\n+\n  }\n   if (typeof fileTree === 'string') {\n     return `<li>${fileTree}</li>`\n   }\n"
        },
        {
          "date": 1667571706737,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,13 +15,13 @@\n \n   return <div className=\"file-list\"></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n- if(fileTree.children.length ===0 && fileTree.) {\n-\n+ if(fileTree.children.length ===0 && !fileTree.isDir) {\n+    return `<li>${fileTree}</li>`\n  }\n   if (typeof fileTree === 'string') {\n-    return `<li>${fileTree}</li>`\n+   \n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n     dir.children.forEach((file) => {\n"
        },
        {
          "date": 1667571712564,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,19 +9,15 @@\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n-\n   }, [])\n \n   return <div className=\"file-list\"></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n- if(fileTree.children.length ===0 && !fileTree.isDir) {\n+  if (fileTree.children.length === 0 && !fileTree.isDir) {\n     return `<li>${fileTree}</li>`\n- }\n-  if (typeof fileTree === 'string') {\n-   \n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n     dir.children.forEach((file) => {\n@@ -38,7 +34,7 @@\n       }\n     })\n   }\n   const fragment = document.createDocumentFragment()\n-  dfs(fileTree,fragment)\n+  dfs(fileTree, fragment)\n   return fragment\n }\n"
        },
        {
          "date": 1667571751291,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n export const FileList = () => {\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     console.log('----------')\n-    console.log(mapFileList(fileList))\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667571756769,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import { useEffect } from 'react'\n import { FileTree } from 'src/common/interface'\n \n export const FileList = () => {\n+  const re\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n-    console.log('----------')\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667571769980,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useEffect } from 'react'\n import { FileTree } from 'src/common/interface'\n \n export const FileList = () => {\n-  const re\n+  const ref = useRef\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n   }\n   // 渲染的时候就获取文件列表\n"
        },
        {
          "date": 1667571777159,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n-import { useEffect } from 'react'\n+import { useEffect, useRef } from 'react'\n import { FileTree } from 'src/common/interface'\n \n export const FileList = () => {\n-  const ref = useRef\n+  const ref = useRef<HTML>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n   }\n   // 渲染的时候就获取文件列表\n"
        },
        {
          "date": 1667571786395,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,18 @@\n import { useEffect, useRef } from 'react'\n import { FileTree } from 'src/common/interface'\n \n export const FileList = () => {\n-  const ref = useRef<HTML>(null)\n+  const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n   }, [])\n \n-  return <div className=\"file-list\"></div>\n+  return <div className=\"file-list\" ref={}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n     return `<li>${fileTree}</li>`\n"
        },
        {
          "date": 1667571792639,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,15 +4,16 @@\n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n+    ref\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n   }, [])\n \n-  return <div className=\"file-list\" ref={}></div>\n+  return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n     return `<li>${fileTree}</li>`\n"
        },
        {
          "date": 1667571799344,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n-    ref\n+    ref.current?.appendChild(fileList)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667571808466,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n-    ref.current?.appendChild(fileList)\n+    ref.current?.appendChild(mapFileList(fileList))\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667571821269,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n+    const files = \n     ref.current?.appendChild(mapFileList(fileList))\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n"
        },
        {
          "date": 1667571826550,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n-    const files = \n-    ref.current?.appendChild(mapFileList(fileList))\n+    const files = mapFileList(fileList)\n+    ref.current?.appendChild()\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667571847138,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n-    const files = mapFileList(fileList)\n+    const fileNodes = mapFileList(fileList)\n     ref.current?.appendChild()\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n@@ -34,8 +34,7 @@\n         dfs(file, ul)\n       }\n     })\n   }\n-  const fragment = document.createDocumentFragment()\n   dfs(fileTree, fragment)\n   return fragment\n }\n"
        },
        {
          "date": 1667571863553,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n+    const fragment = document.createDocumentFragment()\n     dir.children.forEach((file) => {\n       if (typeof file === 'string') {\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n@@ -34,7 +35,8 @@\n         dfs(file, ul)\n       }\n     })\n   }\n+\n   dfs(fileTree, fragment)\n   return fragment\n }\n"
        },
        {
          "date": 1667571869288,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,14 +15,15 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n+    const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n-    const fragment = document.createDocumentFragment()\n+      const fragment = document.createDocumentFragment()\n     dir.children.forEach((file) => {\n       if (typeof file === 'string') {\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n"
        },
        {
          "date": 1667571882501,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n }\n const mapFileList = (fileTree: FileTree) => {\n     const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n+    fragment.appendChild(f)\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n"
        },
        {
          "date": 1667571887955,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n }\n const mapFileList = (fileTree: FileTree) => {\n     const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n-    fragment.appendChild(f)\n+    fragment.appendChild()\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n"
        },
        {
          "date": 1667571893123,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n }\n const mapFileList = (fileTree: FileTree) => {\n     const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n+    const li = \n     fragment.appendChild()\n     return `<li>${fileTree}</li>`\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n"
        },
        {
          "date": 1667571901770,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,11 @@\n }\n const mapFileList = (fileTree: FileTree) => {\n     const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n-    const li = \n-    fragment.appendChild()\n-    return `<li>${fileTree}</li>`\n+    const li = `<li>${fileTree}</li>`\n+    fragment.inn\n+    return \n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n       const fragment = document.createDocumentFragment()\n"
        },
        {
          "date": 1667571915999,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n }\n const mapFileList = (fileTree: FileTree) => {\n     const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n-    const li = `<li>${fileTree}</li>`\n-    fragment.inn\n+    const li = document.createElement()\n+    fragment.\n     return \n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n"
        },
        {
          "date": 1667571924556,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n }\n const mapFileList = (fileTree: FileTree) => {\n     const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n-    const li = document.createElement()\n-    fragment.\n+    const li = document.createElement('li')\n+    fragment.appendChild(li)\n     return \n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n"
        },
        {
          "date": 1667571932125,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n const mapFileList = (fileTree: FileTree) => {\n     const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n     const li = document.createElement('li')\n+    li.innerText = fileTree.\n     fragment.appendChild(li)\n     return \n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n"
        },
        {
          "date": 1667571938766,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,18 +15,18 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-    const fragment = document.createDocumentFragment()\n+  const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n     const li = document.createElement('li')\n-    li.innerText = fileTree.\n+    li.innerText = fileTree.fileName\n     fragment.appendChild(li)\n-    return \n+    return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n-      const fragment = document.createDocumentFragment()\n+    const fragment = document.createDocumentFragment()\n     dir.children.forEach((file) => {\n       if (typeof file === 'string') {\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n"
        },
        {
          "date": 1667571963624,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n-    ref.current?.appendChild()\n+    ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667572282408,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n-    const fragment = document.createDocumentFragment()\n     dir.children.forEach((file) => {\n       if (typeof file === 'string') {\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n"
        },
        {
          "date": 1667572298427,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,8 @@\n     fragment.appendChild(li)\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n-    console.log(dir)\n     dir.children.forEach((file) => {\n       if (typeof file === 'string') {\n         const li = document.createElement('li')\n         li.innerText = dir.fileName\n"
        },
        {
          "date": 1667572307817,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n+    console.log(fileNodes)\n     ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n"
        },
        {
          "date": 1667572380587,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n       if (typeof file === 'string') {\n         const li = document.createElement('li')\n-        li.innerText = dir.fileName\n+        li.innerText = file\n         conatiner.appendChild(li)\n       } else {\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n"
        },
        {
          "date": 1667572408273,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         conatiner.appendChild(li)\n       } else {\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n-        li.innerText = dir.fileName\n+        li.innerText = file.fileName\n         ul.appendChild(li)\n         dfs(file, ul)\n       }\n     })\n"
        },
        {
          "date": 1667572455405,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n         ul.appendChild(li)\n         dfs(file, ul)\n+        conatiner.append\n       }\n     })\n   }\n \n"
        },
        {
          "date": 1667572462114,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n         ul.appendChild(li)\n         dfs(file, ul)\n+        conatiner.appendChild\n         conatiner.append\n       }\n     })\n   }\n"
        },
        {
          "date": 1667572495912,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,9 @@\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n         ul.appendChild(li)\n         dfs(file, ul)\n-        conatiner.appendChild\n-        conatiner.append\n+        conatiner.appendChild(ul)\n       }\n     })\n   }\n \n"
        },
        {
          "date": 1667572922652,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n-      if (typeof file === 'string') {\n+      if (file.) {\n         const li = document.createElement('li')\n         li.innerText = file\n         conatiner.appendChild(li)\n       } else {\n"
        },
        {
          "date": 1667572928303,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n-      if (file.) {\n+      if (!file.isDir) {\n         const li = document.createElement('li')\n         li.innerText = file\n         conatiner.appendChild(li)\n       } else {\n"
        },
        {
          "date": 1667572934083,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n       if (!file.isDir) {\n         const li = document.createElement('li')\n-        li.innerText = file\n+        li.innerText = file.\n         conatiner.appendChild(li)\n       } else {\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n"
        },
        {
          "date": 1667573233859,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n-    ref.current?.appendChild(fileNodes)\n+    ref.current?.appendChild(fileNodes.childNodes[1])\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n@@ -27,9 +27,9 @@\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n       if (!file.isDir) {\n         const li = document.createElement('li')\n-        li.innerText = file.\n+        li.innerText = file.fileName\n         conatiner.appendChild(li)\n       } else {\n         const ul = document.createElement('ul')\n         const li = document.createElement('li')\n"
        },
        {
          "date": 1667573252245,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n-    ref.current?.appendChild(fileNodes.childNodes[1])\n+    ref.current?.appendChild(fileNodes.childE[1])\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667573267789,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n-    ref.current?.appendChild(fileNodes.childE[1])\n+    ref.current?.appendChild(fileNodes.children[2])\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667573277231,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n-    ref.current?.appendChild(fileNodes.children[2])\n+    ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667573501717,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n+        console.log(file.fileName)\n       if (!file.isDir) {\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n         conatiner.appendChild(li)\n"
        },
        {
          "date": 1667573522084,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n     fragment.appendChild(li)\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n+    console.log(d)\n     dir.children.forEach((file) => {\n         console.log(file.fileName)\n       if (!file.isDir) {\n         const li = document.createElement('li')\n"
        },
        {
          "date": 1667573632429,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,12 @@\n     fragment.appendChild(li)\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n-    console.log(d)\n+    console.log(dir)\n     dir.children.forEach((file) => {\n         console.log(file.fileName)\n+        if(file.fileName==='')\n       if (!file.isDir) {\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n         conatiner.appendChild(li)\n"
        },
        {
          "date": 1667573639991,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,11 @@\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n     dir.children.forEach((file) => {\n-        console.log(file.fileName)\n-        if(file.fileName==='')\n+        if(file.fileName==='Markdowns') {\n+\n+        }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n         conatiner.appendChild(li)\n"
        },
        {
          "date": 1667573649521,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { useEffect, useRef } from 'react'\n+import { flushSync } from 'react-dom'\n import { FileTree } from 'src/common/interface'\n \n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n@@ -27,9 +28,10 @@\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n     dir.children.forEach((file) => {\n         if(file.fileName==='Markdowns') {\n-\n+console.log('222222')\n+console.log(file.)\n         }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n"
        },
        {
          "date": 1667573665218,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,12 +27,12 @@\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log(dir)\n     dir.children.forEach((file) => {\n-        if(file.fileName==='Markdowns') {\n-console.log('222222')\n-console.log(file.)\n-        }\n+      if (file.fileName === 'Markdowns') {\n+        console.log('222222')\n+        console.log(file.path)\n+      }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n         conatiner.appendChild(li)\n"
        },
        {
          "date": 1667573715867,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n+    \n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n     ref.current?.appendChild(fileNodes)\n   }\n"
        },
        {
          "date": 1667573725573,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,11 @@\n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n-    \n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n+    ref.current\n     ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n"
        },
        {
          "date": 1667573733744,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n-    ref.current\n+    ref.current?.innerHTML = ''\n     ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n"
        },
        {
          "date": 1667573744969,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n-    ref.current?.innerHTML = ''\n+    ref.current?.innerHTML = '';\n     ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n"
        },
        {
          "date": 1667573756360,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n-    ref.current?.innerHTML = '';\n+    ref.current.innerHTML = '';\n     ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n"
        },
        {
          "date": 1667573763059,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n-    ref.current.innerHTML = '';\n+    ref.!current.innerHTML = '';\n     ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n"
        },
        {
          "date": 1667573780383,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     console.log(fileNodes)\n-    ref.!current.innerHTML = '';\n+    ref.current!.innerHTML = '';\n     ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n@@ -26,9 +26,8 @@\n     fragment.appendChild(li)\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n-    console.log(dir)\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n         console.log(file.path)\n"
        },
        {
          "date": 1667573791871,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n+        console.log(dir.c)\n         console.log(file.path)\n       }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n"
        },
        {
          "date": 1667573852773,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n-    console.log(fileNodes)\n     ref.current!.innerHTML = '';\n     ref.current?.appendChild(fileNodes)\n   }\n   // 渲染的时候就获取文件列表\n@@ -29,9 +28,9 @@\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n-        console.log(dir.c)\n+        console.log(dir.children)\n         console.log(file.path)\n       }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n"
        },
        {
          "date": 1667573889392,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import { useEffect, useRef } from 'react'\n-import { flushSync } from 'react-dom'\n import { FileTree } from 'src/common/interface'\n \n export const FileList = () => {\n   const ref = useRef<HTMLDivElement>(null)\n"
        },
        {
          "date": 1667574420939,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n         console.log(dir.children)\n         console.log(file.path)\n+        console.log()\n       }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n"
        },
        {
          "date": 1667574427369,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,10 @@\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n-        console.log(dir.children)\n+        console.log(file.children)\n         console.log(file.path)\n-        console.log()\n       }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n"
        },
        {
          "date": 1667574450960,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n         console.log(file.children)\n+        console.log(d)\n         console.log(file.path)\n       }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n"
        },
        {
          "date": 1667574495394,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,14 @@\n     fragment.appendChild(li)\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n+    console.log(d)\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n         console.log(file.children)\n-        console.log(d)\n+        console.log(dir.children)\n         console.log(file.path)\n       }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n"
        },
        {
          "date": 1667574511771,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n     fragment.appendChild(li)\n     return fragment\n   }\n   const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n-    console.log(d)\n+    console.log('dir')\n+    console.log(dir)\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n         console.log(file.children)\n"
        },
        {
          "date": 1667574538194,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     li.innerText = fileTree.fileName\n     fragment.appendChild(li)\n     return fragment\n   }\n-  const dfs = (dir = fileTree, conatiner: DocumentFragment | HTMLElement) => {\n+  const dfs = (dir:fi, conatiner: DocumentFragment | HTMLElement) => {\n     console.log('dir')\n     console.log(dir)\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n"
        },
        {
          "date": 1667574604557,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,15 +23,15 @@\n     li.innerText = fileTree.fileName\n     fragment.appendChild(li)\n     return fragment\n   }\n-  const dfs = (dir:fi, conatiner: DocumentFragment | HTMLElement) => {\n+  const dfs = (dir:FileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log('dir')\n     console.log(dir)\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n-        console.log(file.children)\n+        console.log()\n         console.log(dir.children)\n         console.log(file.path)\n       }\n       if (!file.isDir) {\n"
        },
        {
          "date": 1667574641365,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,12 +27,13 @@\n   const dfs = (dir:FileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log('dir')\n     console.log(dir)\n     dir.children.forEach((file) => {\n+        \n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n         console.log()\n-        console.log(dir.children)\n+        console.log(dir.children ===file.children)\n         console.log(file.path)\n       }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n"
        },
        {
          "date": 1667574649698,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,10 @@\n     return fragment\n   }\n   const dfs = (dir:FileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log('dir')\n-    console.log(dir)\n+    console.log(dfs.c)\n     dir.children.forEach((file) => {\n-        \n       if (file.fileName === 'Markdowns') {\n         console.log('222222')\n         console.log()\n         console.log(dir.children ===file.children)\n"
        },
        {
          "date": 1667574657221,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,15 +25,11 @@\n     return fragment\n   }\n   const dfs = (dir:FileTree, conatiner: DocumentFragment | HTMLElement) => {\n     console.log('dir')\n-    console.log(dfs.c)\n+    console.log(dir.children[0])\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n-        console.log('222222')\n-        console.log()\n-        console.log(dir.children ===file.children)\n-        console.log(file.path)\n       }\n       if (!file.isDir) {\n         const li = document.createElement('li')\n         li.innerText = file.fileName\n"
        },
        {
          "date": 1667574688403,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n+    console.log(f)\n   const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n     const li = document.createElement('li')\n     li.innerText = fileTree.fileName\n"
        },
        {
          "date": 1667574705279,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,19 +16,17 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-    console.log(f)\n+    console.log(fileTree)\n   const fragment = document.createDocumentFragment()\n   if (fileTree.children.length === 0 && !fileTree.isDir) {\n     const li = document.createElement('li')\n     li.innerText = fileTree.fileName\n     fragment.appendChild(li)\n     return fragment\n   }\n   const dfs = (dir:FileTree, conatiner: DocumentFragment | HTMLElement) => {\n-    console.log('dir')\n-    console.log(dir.children[0])\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n       }\n       if (!file.isDir) {\n"
        },
        {
          "date": 1667575586230,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     ref.current!.innerHTML = '';\n     ref.current?.appendChild(fileNodes)\n+    console.log()\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667575881798,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     ref.current!.innerHTML = '';\n-    ref.current?.appendChild(fileNodes)\n-    console.log()\n+    // ref.current?.appendChild(fileNodes)\n+    console.log(fileList)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n     const fileList = getFileList()\n"
        },
        {
          "date": 1667581551079,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n     ref.current!.innerHTML = '';\n-    // ref.current?.appendChild(fileNodes)\n+    ref.current?.appendChild(fileNodes)\n     console.log(fileList)\n   }\n   // 渲染的时候就获取文件列表\n   useEffect(() => {\n"
        },
        {
          "date": 1667620278043,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     li.innerText = fileTree.fileName\n     fragment.appendChild(li)\n     return fragment\n   }\n-  const dfs = (dir:FileTree, conatiner: DocumentFragment | HTMLElement) => {\n+  const dfs2 = (dir:FileTree, conatiner: DocumentFragment | HTMLElement) => {\n     dir.children.forEach((file) => {\n       if (file.fileName === 'Markdowns') {\n       }\n       if (!file.isDir) {\n"
        },
        {
          "date": 1667620291969,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,10 @@\n         conatiner.appendChild(ul)\n       }\n     })\n   }\n-\n-  dfs(fileTree, fragment)\n+  const dfs = (dir:FileTree) => {\n+    \n+  }\n+  dfs2(fileTree, fragment)\n   return fragment\n }\n"
        },
        {
          "date": 1667620298249,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n       }\n     })\n   }\n   const dfs = (dir:FileTree) => {\n-    \n+    if()\n   }\n   dfs2(fileTree, fragment)\n   return fragment\n }\n"
        },
        {
          "date": 1667620306655,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,11 @@\n       }\n     })\n   }\n   const dfs = (dir:FileTree) => {\n-    if()\n+    if(!dir.isDir) {\n+      \n+    }\n   }\n   dfs2(fileTree, fragment)\n   return fragment\n }\n"
        },
        {
          "date": 1667620316377,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     })\n   }\n   const dfs = (dir:FileTree) => {\n     if(!dir.isDir) {\n-      \n+      const \n     }\n   }\n   dfs2(fileTree, fragment)\n   return fragment\n"
        },
        {
          "date": 1667620330259,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,10 @@\n     })\n   }\n   const dfs = (dir:FileTree) => {\n     if(!dir.isDir) {\n-      const \n+      const li = document.createElement('li')\n+      li.inn\n     }\n   }\n   dfs2(fileTree, fragment)\n   return fragment\n"
        },
        {
          "date": 1667620336997,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,10 @@\n   }\n   const dfs = (dir:FileTree) => {\n     if(!dir.isDir) {\n       const li = document.createElement('li')\n-      li.inn\n+      li.innerText = dir.fileName\n+      return li\n     }\n   }\n   dfs2(fileTree, fragment)\n   return fragment\n"
        },
        {
          "date": 1667620349215,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,11 @@\n     if(!dir.isDir) {\n       const li = document.createElement('li')\n       li.innerText = dir.fileName\n       return li\n+    } else {\n+      const ul = document.createElement('ul')\n+      ul.\n     }\n   }\n   dfs2(fileTree, fragment)\n   return fragment\n"
        },
        {
          "date": 1667620364228,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,10 @@\n       li.innerText = dir.fileName\n       return li\n     } else {\n       const ul = document.createElement('ul')\n-      ul.\n+      const li = document.createElement('li')\n+      li.inn\n     }\n   }\n   dfs2(fileTree, fragment)\n   return fragment\n"
        },
        {
          "date": 1667620373392,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n       return li\n     } else {\n       const ul = document.createElement('ul')\n       const li = document.createElement('li')\n-      li.inn\n+      li.innerText = dir.fileName\n     }\n   }\n   dfs2(fileTree, fragment)\n   return fragment\n"
        },
        {
          "date": 1667620382071,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n     } else {\n       const ul = document.createElement('ul')\n       const li = document.createElement('li')\n       li.innerText = dir.fileName\n+      return ul\n     }\n   }\n   dfs2(fileTree, fragment)\n   return fragment\n"
        },
        {
          "date": 1667620423067,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n     } else {\n       const ul = document.createElement('ul')\n       const li = document.createElement('li')\n       li.innerText = dir.fileName\n+      dir.children.for\n       return ul\n     }\n   }\n   dfs2(fileTree, fragment)\n"
        },
        {
          "date": 1667620436802,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,11 @@\n     } else {\n       const ul = document.createElement('ul')\n       const li = document.createElement('li')\n       li.innerText = dir.fileName\n-      dir.children.for\n+      dir.children.forEach(file =>{\n+        ul.appendChild(dfs())\n+      })\n       return ul\n     }\n   }\n   dfs2(fileTree, fragment)\n"
        },
        {
          "date": 1667620448444,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n       const ul = document.createElement('ul')\n       const li = document.createElement('li')\n       li.innerText = dir.fileName\n       dir.children.forEach(file =>{\n-        ul.appendChild(dfs())\n+        ul.appendChild(dfs(file))\n       })\n       return ul\n     }\n   }\n"
        },
        {
          "date": 1667620469049,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,7 +58,7 @@\n       })\n       return ul\n     }\n   }\n-  dfs2(fileTree, fragment)\n+ \n   return fragment\n }\n"
        },
        {
          "date": 1667620474687,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n         conatiner.appendChild(ul)\n       }\n     })\n   }\n+  // dfs2(fileTree, fragment)\n   const dfs = (dir:FileTree) => {\n     if(!dir.isDir) {\n       const li = document.createElement('li')\n       li.innerText = dir.fileName\n"
        },
        {
          "date": 1667620480187,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,6 +60,6 @@\n       return ul\n     }\n   }\n  \n-  return fragment\n+  return dfs()\n }\n"
        },
        {
          "date": 1667620497660,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,6 +60,6 @@\n       return ul\n     }\n   }\n  \n-  return dfs()\n+  return dfs(fileTree)\n }\n"
        },
        {
          "date": 1667620591919,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,35 +17,8 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-    console.log(fileTree)\n-  const fragment = document.createDocumentFragment()\n-  if (fileTree.children.length === 0 && !fileTree.isDir) {\n-    const li = document.createElement('li')\n-    li.innerText = fileTree.fileName\n-    fragment.appendChild(li)\n-    return fragment\n-  }\n-  const dfs2 = (dir:FileTree, conatiner: DocumentFragment | HTMLElement) => {\n-    dir.children.forEach((file) => {\n-      if (file.fileName === 'Markdowns') {\n-      }\n-      if (!file.isDir) {\n-        const li = document.createElement('li')\n-        li.innerText = file.fileName\n-        conatiner.appendChild(li)\n-      } else {\n-        const ul = document.createElement('ul')\n-        const li = document.createElement('li')\n-        li.innerText = file.fileName\n-        ul.appendChild(li)\n-        dfs(file, ul)\n-        conatiner.appendChild(ul)\n-      }\n-    })\n-  }\n-  // dfs2(fileTree, fragment)\n   const dfs = (dir:FileTree) => {\n     if(!dir.isDir) {\n       const li = document.createElement('li')\n       li.innerText = dir.fileName\n"
        },
        {
          "date": 1667620782311,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,22 +17,9 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-  const dfs = (dir:FileTree) => {\n-    if(!dir.isDir) {\n-      const li = document.createElement('li')\n-      li.innerText = dir.fileName\n-      return li\n-    } else {\n-      const ul = document.createElement('ul')\n-      const li = document.createElement('li')\n-      li.innerText = dir.fileName\n-      dir.children.forEach(file =>{\n-        ul.appendChild(dfs(file))\n-      })\n-      return ul\n-    }\n+\n   }\n  \n   return dfs(fileTree)\n }\n"
        },
        {
          "date": 1667620801904,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,19 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-\n-  }\n- \n-  return dfs(fileTree)\n+  const dfs = (dir:FileTree) => {\n+    if(!dir.isDir) {\n+      const li = document.createElement('li')\n+      li.innerText = dir.fileName\n+      return li\n+    } else {\n+      const ul = document.createElement('ul')\n+      const li = document.createElement('li')\n+      li.innerText = dir.fileName\n+      dir.children.forEach(file =>{\n+        ul.appendChild(dfs(file))\n+      })\n+      return ul\n+    }\n }\n"
        },
        {
          "date": 1667620807546,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,8 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-  const dfs = (dir:FileTree) => {\n     if(!dir.isDir) {\n       const li = document.createElement('li')\n       li.innerText = dir.fileName\n       return li\n@@ -30,6 +29,6 @@\n       dir.children.forEach(file =>{\n         ul.appendChild(dfs(file))\n       })\n       return ul\n-    }\n+    \n }\n"
        },
        {
          "date": 1667620812678,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,17 +17,17 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-    if(!dir.isDir) {\n+    if(!fileTree.isDir) {\n       const li = document.createElement('li')\n-      li.innerText = dir.fileName\n+      li.innerText = fileTree.fileName\n       return li\n     } else {\n       const ul = document.createElement('ul')\n       const li = document.createElement('li')\n-      li.innerText = dir.fileName\n-      dir.children.forEach(file =>{\n+      li.innerText = fileTree.fileName\n+      fileTree.children.forEach(file =>{\n         ul.appendChild(dfs(file))\n       })\n       return ul\n     \n"
        },
        {
          "date": 1667620823475,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       const ul = document.createElement('ul')\n       const li = document.createElement('li')\n       li.innerText = fileTree.fileName\n       fileTree.children.forEach(file =>{\n-        ul.appendChild(dfs(file))\n+        ul.appendChild(mapFileList(file))\n       })\n       return ul\n-    \n+    }\n }\n"
        },
        {
          "date": 1667620829985,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n   const ref = useRef<HTMLDivElement>(null)\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     const fileNodes = mapFileList(fileList)\n-    ref.current!.innerHTML = '';\n+    ref.current!.innerHTML = ''\n     ref.current?.appendChild(fileNodes)\n     console.log(fileList)\n   }\n   // 渲染的时候就获取文件列表\n@@ -17,18 +17,19 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-    if(!fileTree.isDir) {\n-      const li = document.createElement('li')\n-      li.innerText = fileTree.fileName\n-      return li\n-    } else {\n-      const ul = document.createElement('ul')\n-      const li = document.createElement('li')\n-      li.innerText = fileTree.fileName\n-      fileTree.children.forEach(file =>{\n-        ul.appendChild(mapFileList(file))\n-      })\n-      return ul\n-    }\n+  if (!fileTree.isDir) {\n+    const li = document.createElement('li')\n+    li.innerText = fileTree.fileName\n+    return li\n+  } else {\n+    const ul = document.createElement('ul')\n+    const li = document.createElement('li')\n+    li.innerText = fileTree.fileName\n+    ul\n+    fileTree.children.forEach((file) => {\n+      ul.appendChild(mapFileList(file))\n+    })\n+    return ul\n+  }\n }\n"
        },
        {
          "date": 1667621570941,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,17 +17,18 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n+  \n   if (!fileTree.isDir) {\n     const li = document.createElement('li')\n     li.innerText = fileTree.fileName\n     return li\n   } else {\n     const ul = document.createElement('ul')\n     const li = document.createElement('li')\n     li.innerText = fileTree.fileName\n-    ul\n+    ul.appendChild(li)\n     fileTree.children.forEach((file) => {\n       ul.appendChild(mapFileList(file))\n     })\n     return ul\n"
        },
        {
          "date": 1667621579405,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,13 @@\n \n   return <div className=\"file-list\" ref={ref}></div>\n }\n const mapFileList = (fileTree: FileTree) => {\n-  \n+\n+  li.setAttribute('style', `--i: ${tree.tagName[1]}`)\n+\n   if (!fileTree.isDir) {\n-    const li = document.createElement('li')\n-    li.innerText = fileTree.fileName\n+\n     return li\n   } else {\n     const ul = document.createElement('ul')\n     const li = document.createElement('li')\n"
        },
        {
          "date": 1667621586945,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n     return li\n   } else {\n     const ul = document.createElement('ul')\n-    li.innerText = fileTree.fileName\n+\n     ul.appendChild(li)\n     fileTree.children.forEach((file) => {\n       ul.appendChild(mapFileList(file))\n     })\n"
        }
      ],
      "date": 1667545250125,
      "name": "Commit-0",
      "content": "export const FileList = () =>{\n    return <div className=\"file-list\">\n\n    </div>\n}"
    }
  ]
}
