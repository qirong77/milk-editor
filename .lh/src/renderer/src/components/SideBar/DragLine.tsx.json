{
    "sourceFile": "src/renderer/src/components/SideBar/DragLine.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1665497075280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1665497083350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-export const  = () => {\n+export const dragLine = () => {\n   return (\n-    <div></div>\n+    <div c></div>\n   )\n  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1665497658154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,35 @@\n export const dragLine = () => {\n+    const dragLineMove = (e: React.MouseEvent) => {\n+        // clietX就是距离浏览器视口的位置\n+        const clientX = e.clientX\n+        const dragLine = document.querySelector('.drag-line') as HTMLElement\n+        document.onmousemove = (e) => {\n+          const newClientX = e.clientX\n+          const moveDistance = newClientX - clientX\n+          const nextPosition = clientX + moveDistance\n+          dragLine.style.left = nextPosition + 'px'\n+          return false\n+        }\n+        // 释放鼠标的时候解除事件绑定\n+        document.onmouseup = (e) => {\n+          const newPosition = e.clientX\n+          // 如果太宽了就返回原来的位置\n+          console.log(newPosition)\n+          // 小于等于100是侧边栏的最少宽度\n+          if (newPosition <= 100 || newPosition > 600) {\n+            dragLine.style.left = clientX + 'px'\n+          } else {\n+            dragLine.style.left = newPosition + 'px'\n+            const sideBar = document.querySelector('.side-bar') as HTMLElement\n+            sideBar.style.width = newPosition + 'px'\n+          }\n+    \n+          document.onmousemove = null\n+          document.onmouseup = null\n+          return false\n+        }\n+      }\n   return (\n-    <div c></div>\n+    <div className=\"drag-line\"></div>\n   )\n  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1665497673879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,7 +29,8 @@\n           return false\n         }\n       }\n   return (\n-    <div className=\"drag-line\"></div>\n+    <div className=\"drag-line\" onMouseDown={dragLineMove}></div>\n+\n   )\n  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1665497681551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,36 +1,33 @@\n export const dragLine = () => {\n-    const dragLineMove = (e: React.MouseEvent) => {\n-        // clietX就是距离浏览器视口的位置\n-        const clientX = e.clientX\n-        const dragLine = document.querySelector('.drag-line') as HTMLElement\n-        document.onmousemove = (e) => {\n-          const newClientX = e.clientX\n-          const moveDistance = newClientX - clientX\n-          const nextPosition = clientX + moveDistance\n-          dragLine.style.left = nextPosition + 'px'\n-          return false\n-        }\n-        // 释放鼠标的时候解除事件绑定\n-        document.onmouseup = (e) => {\n-          const newPosition = e.clientX\n-          // 如果太宽了就返回原来的位置\n-          console.log(newPosition)\n-          // 小于等于100是侧边栏的最少宽度\n-          if (newPosition <= 100 || newPosition > 600) {\n-            dragLine.style.left = clientX + 'px'\n-          } else {\n-            dragLine.style.left = newPosition + 'px'\n-            const sideBar = document.querySelector('.side-bar') as HTMLElement\n-            sideBar.style.width = newPosition + 'px'\n-          }\n-    \n-          document.onmousemove = null\n-          document.onmouseup = null\n-          return false\n-        }\n+  const dragLineMove = (e: React.MouseEvent) => {\n+    // clietX就是距离浏览器视口的位置\n+    const clientX = e.clientX\n+    const dragLine = document.querySelector('.drag-line') as HTMLElement\n+    document.onmousemove = (e) => {\n+      const newClientX = e.clientX\n\\ No newline at end of file\n+      const moveDistance = newClientX - clientX\n+      const nextPosition = clientX + moveDistance\n+      dragLine.style.left = nextPosition + 'px'\n+      return false\n+    }\n+    // 释放鼠标的时候解除事件绑定\n+    document.onmouseup = (e) => {\n+      const newPosition = e.clientX\n+      // 如果太宽了就返回原来的位置\n+      console.log(newPosition)\n+      // 小于等于100是侧边栏的最少宽度\n+      if (newPosition <= 100 || newPosition > 600) {\n+        dragLine.style.left = clientX + 'px'\n+      } else {\n+        dragLine.style.left = newPosition + 'px'\n+        const sideBar = document.querySelector('.side-bar') as HTMLElement\n+        sideBar.style.width = newPosition + 'px'\n       }\n-  return (\n-    <div className=\"drag-line\" onMouseDown={dragLineMove}></div>\n \n-  )\n- }\n+      document.onmousemove = null\n+      document.onmouseup = null\n+      return false\n+    }\n+  }\n+  return <div className=\"drag-line\" onMouseDown={dragLineMove}></div>\n+}\n"
                },
                {
                    "date": 1665499021529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-export const dragLine = () => {\n+export const DragLine = () => {\n   const dragLineMove = (e: React.MouseEvent) => {\n     // clietX就是距离浏览器视口的位置\n     const clientX = e.clientX\n     const dragLine = document.querySelector('.drag-line') as HTMLElement\n@@ -29,5 +29,5 @@\n       return false\n     }\n   }\n   return <div className=\"drag-line\" onMouseDown={dragLineMove}></div>\n-}\n\\ No newline at end of file\n+}\n"
                },
                {
                    "date": 1665500422438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n       const nextPosition = clientX + moveDistance\n       dragLine.style.left = nextPosition + 'px'\n       return false\n     }\n+    \n     // 释放鼠标的时候解除事件绑定\n     document.onmouseup = (e) => {\n       const newPosition = e.clientX\n       // 如果太宽了就返回原来的位置\n"
                },
                {
                    "date": 1665500429824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,4 +31,23 @@\n     }\n   }\n   return <div className=\"drag-line\" onMouseDown={dragLineMove}></div>\n }\n+ul,\n+li {\n+  margin: 10px 0;\n+  margin-left: calc(6px * var(--i));\n+  a {\n+    text-decoration: none;\n+    text-decoration-color: $dark-color;\n+    color: $dark-color;\n+  }\n+}\n+ul {\n+  height: auto;\n+  svg {\n+    height: 10px;\n+    width: 10px;\n+    margin: 0 6px;\n+    transition: all 0.5s;\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1665642163508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n       const newPosition = e.clientX\n       // 如果太宽了就返回原来的位置\n       console.log(newPosition)\n       // 小于等于100是侧边栏的最少宽度\n-      if (newPosition <= 100 || newPosition > 600) {\n+      if (newPosition <= 160 || newPosition > 600) {\n         dragLine.style.left = clientX + 'px'\n       } else {\n         dragLine.style.left = newPosition + 'px'\n         const sideBar = document.querySelector('.side-bar') as HTMLElement\n@@ -31,23 +31,4 @@\n     }\n   }\n   return <div className=\"drag-line\" onMouseDown={dragLineMove}></div>\n }\n-ul,\n-li {\n-  margin: 10px 0;\n-  margin-left: calc(6px * var(--i));\n-  a {\n-    text-decoration: none;\n-    text-decoration-color: $dark-color;\n-    color: $dark-color;\n-  }\n-}\n-ul {\n-  height: auto;\n-  svg {\n-    height: 10px;\n-    width: 10px;\n-    margin: 0 6px;\n-    transition: all 0.5s;\n-  }\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1665642197841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n       const newPosition = e.clientX\n       // 如果太宽了就返回原来的位置\n       console.log(newPosition)\n       // 小于等于100是侧边栏的最少宽度\n-      if (newPosition <= 160 || newPosition > 600) {\n+      if (newPosition <= 100 || newPosition > 600) {\n         dragLine.style.left = clientX + 'px'\n       } else {\n         dragLine.style.left = newPosition + 'px'\n         const sideBar = document.querySelector('.side-bar') as HTMLElement\n"
                }
            ],
            "date": 1665497075280,
            "name": "Commit-0",
            "content": "export const  = () => {\n  return (\n    <div></div>\n  )\n }"
        }
    ]
}