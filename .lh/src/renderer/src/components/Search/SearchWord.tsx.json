{
    "sourceFile": "src/renderer/src/components/Search/SearchWord.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1666164019014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1666164095186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     }\n     dfs(editor.childNodes)\n   }\n   return (\n-    <div className=\"search-word\">\n+    <div className=\"search-word search-word-close\">\n       <input type=\"text\" ref={iptRef as LegacyRef<HTMLInputElement>} />\n     </div>\n   )\n }\n"
                }
            ],
            "date": 1666164019014,
            "name": "Commit-0",
            "content": "import { LegacyRef, useEffect, useRef, useState } from 'react'\n\nexport const SearchWord = () => {\n  const [show, setShow] = useState(true)\n  const iptRef = useRef<HTMLInputElement>()\n  const serarchStr = () => {\n    // 需要配置electron 的全选快捷键再能在输入框全选\n    const editor = document.querySelector('.ProseMirror') as HTMLElement\n    const searchText = iptRef.current?.value\n    // 好像是不能直接操作milkdown上面的元素，比如改变类名，增加用fragment增加标签，需要看文档\n    const dfs = (nodes: NodeListOf<ChildNode>) => {\n      nodes.forEach((node) => {\n        // element\n        if (node.nodeType === 1) {\n        }\n      })\n    }\n    dfs(editor.childNodes)\n  }\n  return (\n    <div className=\"search-word\">\n      <input type=\"text\" ref={iptRef as LegacyRef<HTMLInputElement>} />\n    </div>\n  )\n}\n"
        }
    ]
}