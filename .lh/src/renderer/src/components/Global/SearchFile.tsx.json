{
    "sourceFile": "src/renderer/src/components/Global/SearchFile.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 28,
            "patches": [
                {
                    "date": 1667544694480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667665672244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import { useEffect, useRef, useState } from 'react'\n import { IFileList } from 'src/preload/index.d'\n+import { openFile } from '../../common/openFile'\n \n interface ISearchFile {\n   fileList: IFileList\n-  openFile: (filePath: string) => void\n   closeSearchFile: () => void\n }\n const mapFiles = (fileList: IFileList) => {\n   const files = fileList.map((file, index) => {\n@@ -15,9 +15,9 @@\n     )\n   })\n   return files\n }\n-export const SearchFile: React.FC<ISearchFile> = ({ fileList, openFile, closeSearchFile }) => {\n+export const SearchFile: React.FC<ISearchFile> = ({ fileList, closeSearchFile }) => {\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n   const filesContainer = useRef<HTMLUListElement>(null)\n \n"
                },
                {
                    "date": 1667666024734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n       const io = new IntersectionObserver((entries) => {\n         entries.forEach((entrie) => {\n           //如果不可见,就需要向上滚动或者向下滚动\n           if (entrie.intersectionRatio < 0.5) {\n+            // 显示十个，如果大于8，大于9都可以，表示向下滚动\n             if (active > 8) target?.scrollIntoView(false)\n             else target?.scrollIntoView(true)\n           }\n           // 不管是否可见，操作完就移除观察\n"
                },
                {
                    "date": 1667666673802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,16 @@\n import { useEffect, useRef, useState } from 'react'\n-import { IFileList } from 'src/preload/index.d'\n+\n import { openFile } from '../../common/openFile'\n \n interface ISearchFile {\n-  fileList: IFileList\n+  fileList: {\n+    fileName:string,\n+    filePath:string\n+  }[]\n   closeSearchFile: () => void\n }\n-const mapFiles = (fileList: IFileList) => {\n+const mapFiles = (fileList: FileList) => {\n   const files = fileList.map((file, index) => {\n     return (\n       <li key={file.filePath} className={index === 0 ? 'active' : ''}>\n         <span>{file.fileName}</span>\n"
                },
                {
                    "date": 1667667228366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import { useEffect, useRef, useState } from 'react'\n \n import { openFile } from '../../common/openFile'\n-\n+type IFileList = {\n+  fileName: string\n+  filePath: string\n+}[]\n interface ISearchFile {\n-  fileList: {\n-    fileName:string,\n-    filePath:string\n-  }[]\n+  fileList: IFileList\n   closeSearchFile: () => void\n }\n-const mapFiles = (fileList: FileList) => {\n+const mapFiles = (fileList: IFileList) => {\n   const files = fileList.map((file, index) => {\n     return (\n       <li key={file.filePath} className={index === 0 ? 'active' : ''}>\n         <span>{file.fileName}</span>\n@@ -29,9 +29,9 @@\n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     if (lis) {\n-      ;[...lis].forEach((li, index) => {\n+      ;[...lis].forEach((li, _index) => {\n         li.classList.remove('active')\n       })\n       const target = lis[active]\n       target.classList.add('active')\n"
                },
                {
                    "date": 1667729302768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,28 +28,29 @@\n \n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n-    if (lis) {\n-      ;[...lis].forEach((li, _index) => {\n-        li.classList.remove('active')\n-      })\n-      const target = lis[active]\n-      target.classList.add('active')\n-      const io = new IntersectionObserver((entries) => {\n-        entries.forEach((entrie) => {\n-          //如果不可见,就需要向上滚动或者向下滚动\n-          if (entrie.intersectionRatio < 0.5) {\n-            // 显示十个，如果大于8，大于9都可以，表示向下滚动\n-            if (active > 8) target?.scrollIntoView(false)\n-            else target?.scrollIntoView(true)\n-          }\n-          // 不管是否可见，操作完就移除观察\n-          io.unobserve(target)\n-        })\n-      })\n-      io.observe(target)\n-    }\n+    console.log(lis)\n+    // if (lis) {\n+    //   ;[...lis].forEach((li, _index) => {\n+    //     li.classList.remove('active')\n+    //   })\n+    //   const target = lis[active]\n+    //    target.classList.add('active')\n+    //   const io = new IntersectionObserver((entries) => {\n+    //     entries.forEach((entrie) => {\n+    //       //如果不可见,就需要向上滚动或者向下滚动\n+    //       if (entrie.intersectionRatio < 0.5) {\n+    //         // 显示十个，如果大于8，大于9都可以，表示向下滚动\n+    //         if (active > 8) target?.scrollIntoView(false)\n+    //         else target?.scrollIntoView(true)\n+    //       }\n+    //       // 不管是否可见，操作完就移除观察\n+    //       io.unobserve(target)\n+    //     })\n+    //   })\n+    //   io.observe(target)\n+    // }\n   }, [active])\n   useEffect(() => {\n     iptRef.current?.focus()\n     const hanleSelect = (e: KeyboardEvent) => {\n"
                },
                {
                    "date": 1667729323998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,28 +29,28 @@\n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     console.log(lis)\n-    // if (lis) {\n-    //   ;[...lis].forEach((li, _index) => {\n-    //     li.classList.remove('active')\n-    //   })\n-    //   const target = lis[active]\n-    //    target.classList.add('active')\n-    //   const io = new IntersectionObserver((entries) => {\n-    //     entries.forEach((entrie) => {\n-    //       //如果不可见,就需要向上滚动或者向下滚动\n-    //       if (entrie.intersectionRatio < 0.5) {\n-    //         // 显示十个，如果大于8，大于9都可以，表示向下滚动\n-    //         if (active > 8) target?.scrollIntoView(false)\n-    //         else target?.scrollIntoView(true)\n-    //       }\n-    //       // 不管是否可见，操作完就移除观察\n-    //       io.unobserve(target)\n-    //     })\n-    //   })\n-    //   io.observe(target)\n-    // }\n+    if (!lis?.length) {\n+      ;[...lis].forEach((li, _index) => {\n+        li.classList.remove('active')\n+      })\n+      const target = lis[active]\n+       target.classList.add('active')\n+      const io = new IntersectionObserver((entries) => {\n+        entries.forEach((entrie) => {\n+          //如果不可见,就需要向上滚动或者向下滚动\n+          if (entrie.intersectionRatio < 0.5) {\n+            // 显示十个，如果大于8，大于9都可以，表示向下滚动\n+            if (active > 8) target?.scrollIntoView(false)\n+            else target?.scrollIntoView(true)\n+          }\n+          // 不管是否可见，操作完就移除观察\n+          io.unobserve(target)\n+        })\n+      })\n+      io.observe(target)\n+    }\n   }, [active])\n   useEffect(() => {\n     iptRef.current?.focus()\n     const hanleSelect = (e: KeyboardEvent) => {\n"
                },
                {
                    "date": 1667729366663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,26 +30,27 @@\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     console.log(lis)\n     if (!lis?.length) {\n-      ;[...lis].forEach((li, _index) => {\n-        li.classList.remove('active')\n-      })\n-      const target = lis[active]\n-       target.classList.add('active')\n-      const io = new IntersectionObserver((entries) => {\n-        entries.forEach((entrie) => {\n-          //如果不可见,就需要向上滚动或者向下滚动\n-          if (entrie.intersectionRatio < 0.5) {\n-            // 显示十个，如果大于8，大于9都可以，表示向下滚动\n-            if (active > 8) target?.scrollIntoView(false)\n-            else target?.scrollIntoView(true)\n-          }\n-          // 不管是否可见，操作完就移除观察\n-          io.unobserve(target)\n-        })\n-      })\n-      io.observe(target)\n+      console.log(lis)\n+      // ;[...lis].forEach((li, _index) => {\n+      //   li.classList.remove('active')\n+      // })\n+      // const target = lis[active]\n+      //  target.classList.add('active')\n+      // const io = new IntersectionObserver((entries) => {\n+      //   entries.forEach((entrie) => {\n+      //     //如果不可见,就需要向上滚动或者向下滚动\n+      //     if (entrie.intersectionRatio < 0.5) {\n+      //       // 显示十个，如果大于8，大于9都可以，表示向下滚动\n+      //       if (active > 8) target?.scrollIntoView(false)\n+      //       else target?.scrollIntoView(true)\n+      //     }\n+      //     // 不管是否可见，操作完就移除观察\n+      //     io.unobserve(target)\n+      //   })\n+      // })\n+      // io.observe(target)\n     }\n   }, [active])\n   useEffect(() => {\n     iptRef.current?.focus()\n"
                },
                {
                    "date": 1667729393119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     console.log(lis)\n     if (!lis?.length) {\n-      console.log(lis)\n+      console.log(lis?.length)\n       // ;[...lis].forEach((li, _index) => {\n       //   li.classList.remove('active')\n       // })\n       // const target = lis[active]\n"
                },
                {
                    "date": 1667729456830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,11 @@\n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     console.log(lis)\n-    if (!lis?.length) {\n+    if (lis?.length) {\n       console.log(lis?.length)\n+      // Array.from(lis).forEach(li =>{})\n       // ;[...lis].forEach((li, _index) => {\n       //   li.classList.remove('active')\n       // })\n       // const target = lis[active]\n"
                },
                {
                    "date": 1667729462298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,8 @@\n \n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n-    console.log(lis)\n     if (lis?.length) {\n       console.log(lis?.length)\n       // Array.from(lis).forEach(li =>{})\n       // ;[...lis].forEach((li, _index) => {\n"
                },
                {
                    "date": 1667729519461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,28 +29,26 @@\n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     if (lis?.length) {\n-      console.log(lis?.length)\n-      // Array.from(lis).forEach(li =>{})\n-      // ;[...lis].forEach((li, _index) => {\n-      //   li.classList.remove('active')\n-      // })\n-      // const target = lis[active]\n-      //  target.classList.add('active')\n-      // const io = new IntersectionObserver((entries) => {\n-      //   entries.forEach((entrie) => {\n-      //     //如果不可见,就需要向上滚动或者向下滚动\n-      //     if (entrie.intersectionRatio < 0.5) {\n-      //       // 显示十个，如果大于8，大于9都可以，表示向下滚动\n-      //       if (active > 8) target?.scrollIntoView(false)\n-      //       else target?.scrollIntoView(true)\n-      //     }\n-      //     // 不管是否可见，操作完就移除观察\n-      //     io.unobserve(target)\n-      //   })\n-      // })\n-      // io.observe(target)\n+      Array.from(lis).forEach((li, _index) => {\n+        li.classList.remove('active')\n+      })\n+      const target = lis[active]\n+      target.classList.add('active')\n+      const io = new IntersectionObserver((entries) => {\n+        entries.forEach((entrie) => {\n+          //如果不可见,就需要向上滚动或者向下滚动\n+          if (entrie.intersectionRatio < 0.5) {\n+            // 显示十个，如果大于8，大于9都可以，表示向下滚动\n+            if (active > 8) target?.scrollIntoView(false)\n+            else target?.scrollIntoView(true)\n+          }\n+          // 不管是否可见，操作完就移除观察\n+          io.unobserve(target)\n+        })\n+      })\n+      io.observe(target)\n     }\n   }, [active])\n   useEffect(() => {\n     iptRef.current?.focus()\n"
                },
                {
                    "date": 1667744888372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,18 @@\n     )\n   })\n   return files\n }\n-export const SearchFile: React.FC<ISearchFile> = ({ fileList, closeSearchFile }) => {\n+const getFileList =  async () =>{\n+  const fileList = await window.api.onGetFileList()\n+  return fileList\n+}\n+export const SearchFile: React.FC<ISearchFile> = ({  closeSearchFile }) => {\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n   const filesContainer = useRef<HTMLUListElement>(null)\n \n-  const [files, setFiles] = useState(mapFiles(fileList))\n+  const [files, setFiles] = useState([{}])\n \n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n@@ -78,8 +82,12 @@\n     document.addEventListener('keydown', hanleSelect)\n     return () => document.removeEventListener('keydown', hanleSelect)\n     // 因为处理函数里面有依赖到active，所以必须传递这个依赖进去\n   }, [active, files])\n+  useEffect(()=>{\n+    const files = getFileList()\n+    setFiles(files)\n+  },[])\n   const updateFiles = () => {\n     const searchStr = iptRef.current?.value || ''\n     const newFileList = fileList.filter((file) => {\n       if (file.fileName.toLocaleLowerCase().includes(searchStr.toLocaleLowerCase())) return true\n"
                },
                {
                    "date": 1667745204574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,9 @@\n import { useEffect, useRef, useState } from 'react'\n+import { IFileList } from '../../../../common/interface'\n \n import { openFile } from '../../common/openFile'\n-type IFileList = {\n-  fileName: string\n-  filePath: string\n-}[]\n+\n interface ISearchFile {\n   fileList: IFileList\n   closeSearchFile: () => void\n }\n@@ -27,10 +25,12 @@\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n   const filesContainer = useRef<HTMLUListElement>(null)\n \n-  const [files, setFiles] = useState([{}])\n+  const [files, setFiles] = useState<IFileList[]>([{\n \n+  }])\n+\n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     if (lis?.length) {\n"
                },
                {
                    "date": 1667745543757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n interface ISearchFile {\n   fileList: IFileList\n   closeSearchFile: () => void\n }\n-const mapFiles = (fileList: IFileList) => {\n+const mapFiles = (fileList: IFileList[]) => {\n   const files = fileList.map((file, index) => {\n     return (\n       <li key={file.filePath} className={index === 0 ? 'active' : ''}>\n         <span>{file.fileName}</span>\n@@ -16,21 +16,20 @@\n     )\n   })\n   return files\n }\n-const getFileList =  async () =>{\n+const getFileList = async () => {\n   const fileList = await window.api.onGetFileList()\n   return fileList\n }\n-export const SearchFile: React.FC<ISearchFile> = ({  closeSearchFile }) => {\n+export const SearchFile: React.FC<ISearchFile> = ({ closeSearchFile }) => {\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n   const filesContainer = useRef<HTMLUListElement>(null)\n+  const [files, setFiles] = useState(mapFiles([{\n+    fileName:''\n+  }]))\n \n-  const [files, setFiles] = useState<IFileList[]>([{\n-\n-  }])\n-\n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     if (lis?.length) {\n@@ -81,21 +80,22 @@\n     }\n     document.addEventListener('keydown', hanleSelect)\n     return () => document.removeEventListener('keydown', hanleSelect)\n     // 因为处理函数里面有依赖到active，所以必须传递这个依赖进去\n-  }, [active, files])\n-  useEffect(()=>{\n+  }, [active])\n+  useEffect(() => {\n     const files = getFileList()\n-    setFiles(files)\n-  },[])\n+    console.log(files)\n+    // setFiles(files)\n+  }, [])\n   const updateFiles = () => {\n-    const searchStr = iptRef.current?.value || ''\n-    const newFileList = fileList.filter((file) => {\n-      if (file.fileName.toLocaleLowerCase().includes(searchStr.toLocaleLowerCase())) return true\n-      else return false\n-    })\n-    setFiles(mapFiles(newFileList))\n-    setActive(0)\n+    // const searchStr = iptRef.current?.value || ''\n+    // const newFileList = fileList.filter((file) => {\n+    //   if (file.fileName.toLocaleLowerCase().includes(searchStr.toLocaleLowerCase())) return true\n+    //   else return false\n+    // })\n+    // setFiles(mapFiles(newFileList))\n+    // setActive(0)\n   }\n   return (\n     <div className=\"search-file \">\n       <div>\n"
                },
                {
                    "date": 1667745566380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,10 @@\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n   const filesContainer = useRef<HTMLUListElement>(null)\n   const [files, setFiles] = useState(mapFiles([{\n-    fileName:''\n+    fileName:'1',\n+    filePath:'2'\n   }]))\n \n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n@@ -80,9 +81,9 @@\n     }\n     document.addEventListener('keydown', hanleSelect)\n     return () => document.removeEventListener('keydown', hanleSelect)\n     // 因为处理函数里面有依赖到active，所以必须传递这个依赖进去\n-  }, [active])\n+  }, [active,files])\n   useEffect(() => {\n     const files = getFileList()\n     console.log(files)\n     // setFiles(files)\n"
                },
                {
                    "date": 1667745720485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,16 +16,18 @@\n     )\n   })\n   return files\n }\n-const getFileList = async () => {\n-  const fileList = await window.api.onGetFileList()\n-  return fileList\n-}\n+\n export const SearchFile: React.FC<ISearchFile> = ({ closeSearchFile }) => {\n+  console.log('render-SearchFile')\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n   const filesContainer = useRef<HTMLUListElement>(null)\n+  const getFileList = async () => {\n+    const fileList = await window.api.onGetFileList()\n+    setFiles(mapFiles(fileList))\n+  }\n   const [files, setFiles] = useState(mapFiles([{\n     fileName:'1',\n     filePath:'2'\n   }]))\n@@ -83,12 +85,10 @@\n     return () => document.removeEventListener('keydown', hanleSelect)\n     // 因为处理函数里面有依赖到active，所以必须传递这个依赖进去\n   }, [active,files])\n   useEffect(() => {\n-    const files = getFileList()\n-    console.log(files)\n-    // setFiles(files)\n-  }, [])\n+    getFileList()\n+  }, [files])\n   const updateFiles = () => {\n     // const searchStr = iptRef.current?.value || ''\n     // const newFileList = fileList.filter((file) => {\n     //   if (file.fileName.toLocaleLowerCase().includes(searchStr.toLocaleLowerCase())) return true\n"
                },
                {
                    "date": 1667745766309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     // 因为处理函数里面有依赖到active，所以必须传递这个依赖进去\n   }, [active,files])\n   useEffect(() => {\n     getFileList()\n-  }, [files])\n+  }, [])\n   const updateFiles = () => {\n     // const searchStr = iptRef.current?.value || ''\n     // const newFileList = fileList.filter((file) => {\n     //   if (file.fileName.toLocaleLowerCase().includes(searchStr.toLocaleLowerCase())) return true\n"
                },
                {
                    "date": 1667746428803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     const fileList = await window.api.onGetFileList()\n     setFiles(mapFiles(fileList))\n   }\n   const [files, setFiles] = useState(mapFiles([{\n-    fileName:'1',\n+    fileName:'初始化失败',\n     filePath:'2'\n   }]))\n \n   useEffect(() => {\n"
                },
                {
                    "date": 1667747113965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,12 +26,16 @@\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     setFiles(mapFiles(fileList))\n   }\n-  const [files, setFiles] = useState(mapFiles([{\n-    fileName:'初始化失败',\n-    filePath:'2'\n-  }]))\n+  const [files, setFiles] = useState(\n+    mapFiles([\n+      {\n+        fileName: '初始化失败',\n+        filePath: '2'\n+      }\n+    ])\n+  )\n \n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n@@ -83,20 +87,21 @@\n     }\n     document.addEventListener('keydown', hanleSelect)\n     return () => document.removeEventListener('keydown', hanleSelect)\n     // 因为处理函数里面有依赖到active，所以必须传递这个依赖进去\n-  }, [active,files])\n+  }, [active, files])\n   useEffect(() => {\n     getFileList()\n   }, [])\n-  const updateFiles = () => {\n-    // const searchStr = iptRef.current?.value || ''\n-    // const newFileList = fileList.filter((file) => {\n-    //   if (file.fileName.toLocaleLowerCase().includes(searchStr.toLocaleLowerCase())) return true\n-    //   else return false\n-    // })\n-    // setFiles(mapFiles(newFileList))\n-    // setActive(0)\n+  const updateFiles = async () => {\n+    const searchStr = iptRef.current?.value || ''\n+    const fileList = await window.api.onGetFileList()\n+    const newFileList = fileList.filter((file) => {\n+      if (file.fileName.toLocaleLowerCase().includes(searchStr.toLocaleLowerCase())) return true\n+      else return false\n+    })\n+    setFiles(mapFiles(newFileList))\n+    setActive(0)\n   }\n   return (\n     <div className=\"search-file \">\n       <div>\n"
                },
                {
                    "date": 1667747849433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n \n import { openFile } from '../../common/openFile'\n \n interface ISearchFile {\n-  fileList: IFileList\n   closeSearchFile: () => void\n }\n const mapFiles = (fileList: IFileList[]) => {\n   const files = fileList.map((file, index) => {\n"
                },
                {
                    "date": 1667748888010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n import { openFile } from '../../common/openFile'\n \n interface ISearchFile {\n   closeSearchFile: () => void\n+  showSearchFile: boolean\n+  openHeaderList:()=>void\n }\n const mapFiles = (fileList: IFileList[]) => {\n   const files = fileList.map((file, index) => {\n     return (\n@@ -16,9 +18,9 @@\n   })\n   return files\n }\n \n-export const SearchFile: React.FC<ISearchFile> = ({ closeSearchFile }) => {\n+export const SearchFile: React.FC<ISearchFile> = ({ closeSearchFile, showSearchFile ,openHeaderList}) => {\n   console.log('render-SearchFile')\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n   const filesContainer = useRef<HTMLUListElement>(null)\n@@ -33,9 +35,8 @@\n         filePath: '2'\n       }\n     ])\n   )\n-\n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     if (lis?.length) {\n@@ -81,17 +82,18 @@\n       if (e.code === 'Enter') {\n         const filePath = files[active]?.key as string\n         filePath && openFile(filePath)\n         closeSearchFile()\n+        openHeaderList()\n       }\n     }\n     document.addEventListener('keydown', hanleSelect)\n     return () => document.removeEventListener('keydown', hanleSelect)\n     // 因为处理函数里面有依赖到active，所以必须传递这个依赖进去\n   }, [active, files])\n   useEffect(() => {\n     getFileList()\n-  }, [])\n+  }, [showSearchFile])\n   const updateFiles = async () => {\n     const searchStr = iptRef.current?.value || ''\n     const fileList = await window.api.onGetFileList()\n     const newFileList = fileList.filter((file) => {\n@@ -101,9 +103,14 @@\n     setFiles(mapFiles(newFileList))\n     setActive(0)\n   }\n   return (\n-    <div className=\"search-file \">\n+    <div\n+      className=\"search-file\"\n+      style={{\n+        display: showSearchFile ? 'block' : 'none'\n+      }}\n+    >\n       <div>\n         <span>{active}</span>\n         <input placeholder=\"\" onChange={updateFiles} ref={iptRef} type=\"text\" />\n       </div>\n"
                },
                {
                    "date": 1667808019138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       if (e.code === 'Enter') {\n         const filePath = files[active]?.key as string\n         filePath && openFile(filePath)\n         closeSearchFile()\n-        openHeaderList()\n+        // openHeaderList()\n       }\n     }\n     document.addEventListener('keydown', hanleSelect)\n     return () => document.removeEventListener('keydown', hanleSelect)\n"
                },
                {
                    "date": 1667810744127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,9 @@\n       if (e.code === 'Enter') {\n         const filePath = files[active]?.key as string\n         filePath && openFile(filePath)\n         closeSearchFile()\n+        console.log('enter in SearchFile')\n         // openHeaderList()\n       }\n     }\n     document.addEventListener('keydown', hanleSelect)\n"
                },
                {
                    "date": 1667810810299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,13 +79,13 @@\n           setActive(active + 1)\n         }\n       }\n       if (e.code === 'Enter') {\n-        const filePath = files[active]?.key as string\n-        filePath && openFile(filePath)\n-        closeSearchFile()\n-        console.log('enter in SearchFile')\n-        // openHeaderList()\n+        if(showSearchFile) {\n+          const filePath = files[active]?.key as string\n+          filePath && openFile(filePath)\n+          closeSearchFile()\n+        }\n       }\n     }\n     document.addEventListener('keydown', hanleSelect)\n     return () => document.removeEventListener('keydown', hanleSelect)\n"
                },
                {
                    "date": 1668525486393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n \n interface ISearchFile {\n   closeSearchFile: () => void\n   showSearchFile: boolean\n-  openHeaderList:()=>void\n }\n const mapFiles = (fileList: IFileList[]) => {\n   const files = fileList.map((file, index) => {\n     return (\n@@ -18,25 +17,32 @@\n   })\n   return files\n }\n \n-export const SearchFile: React.FC<ISearchFile> = ({ closeSearchFile, showSearchFile ,openHeaderList}) => {\n+export const SearchFile: React.FC<ISearchFile> = ({ closeSearchFile, showSearchFile }) => {\n   console.log('render-SearchFile')\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n-  const filesContainer = useRef<HTMLUListElement>(null)\n-  const getFileList = async () => {\n-    const fileList = await window.api.onGetFileList()\n-    setFiles(mapFiles(fileList))\n-  }\n   const [files, setFiles] = useState(\n     mapFiles([\n       {\n         fileName: '初始化失败',\n         filePath: '2'\n       }\n     ])\n   )\n+  const filesContainer = useRef<HTMLUListElement>(null)\n+  const getFileList = async () => {\n+    const fileList = await window.api.onGetFileList()\n+    setFiles(mapFiles(fileList))\n+  }\n+  const onSelect = () => {\n+    if (showSearchFile) {\n+      const filePath = files[active]?.key as string\n+      filePath && openFile(filePath)\n+      closeSearchFile()\n+    }\n+  }\n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     if (lis?.length) {\n@@ -79,13 +85,9 @@\n           setActive(active + 1)\n         }\n       }\n       if (e.code === 'Enter') {\n-        if(showSearchFile) {\n-          const filePath = files[active]?.key as string\n-          filePath && openFile(filePath)\n-          closeSearchFile()\n-        }\n+        onSelect()\n       }\n     }\n     document.addEventListener('keydown', hanleSelect)\n     return () => document.removeEventListener('keydown', hanleSelect)\n"
                },
                {
                    "date": 1668525589372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,23 +6,30 @@\n interface ISearchFile {\n   closeSearchFile: () => void\n   showSearchFile: boolean\n }\n-const mapFiles = (fileList: IFileList[]) => {\n-  const files = fileList.map((file, index) => {\n-    return (\n-      <li key={file.filePath} className={index === 0 ? 'active' : ''}>\n-        <span>{file.fileName}</span>\n-      </li>\n-    )\n-  })\n-  return files\n-}\n \n export const SearchFile: React.FC<ISearchFile> = ({ closeSearchFile, showSearchFile }) => {\n   console.log('render-SearchFile')\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n+  const onSelect = () => {\n+    if (showSearchFile) {\n+      const filePath = files[active]?.key as string\n+      filePath && openFile(filePath)\n+      closeSearchFile()\n+    }\n+  }\n+  const mapFiles = (fileList: IFileList[]) => {\n+    const files = fileList.map((file, index) => {\n+      return (\n+        <li key={file.filePath} onClick={onSelect} className={index === 0 ? 'active' : ''}>\n+          <span>{file.fileName}</span>\n+        </li>\n+      )\n+    })\n+    return files\n+  }\n   const [files, setFiles] = useState(\n     mapFiles([\n       {\n         fileName: '初始化失败',\n@@ -30,19 +37,14 @@\n       }\n     ])\n   )\n   const filesContainer = useRef<HTMLUListElement>(null)\n+\n   const getFileList = async () => {\n     const fileList = await window.api.onGetFileList()\n     setFiles(mapFiles(fileList))\n   }\n-  const onSelect = () => {\n-    if (showSearchFile) {\n-      const filePath = files[active]?.key as string\n-      filePath && openFile(filePath)\n-      closeSearchFile()\n-    }\n-  }\n+\n   useEffect(() => {\n     // 在active更新后执行，否则不会按照你的预定的去\n     const lis = filesContainer.current?.children\n     if (lis?.length) {\n"
                },
                {
                    "date": 1668528970673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n export const SearchFile: React.FC<ISearchFile> = ({ closeSearchFile, showSearchFile }) => {\n   console.log('render-SearchFile')\n   const [active, setActive] = useState(0)\n   const iptRef = useRef<HTMLInputElement>(null)\n+  // 点击无法生效不知道为什么，可能和函数渲染有关，active变了或者不存在？\n   const onSelect = () => {\n     if (showSearchFile) {\n       const filePath = files[active]?.key as string\n       filePath && openFile(filePath)\n"
                },
                {
                    "date": 1668601204511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n       }}\n     >\n       <div>\n         <span>{active}</span>\n-        <input placeholder=\"\" onChange={updateFiles} ref={iptRef} type=\"text\" />\n+        <input onChange={updateFiles} ref={iptRef} type=\"text\" />\n       </div>\n       <ul ref={filesContainer}>{files}</ul>\n     </div>\n   )\n"
                }
            ],
            "date": 1667544694480,
            "name": "Commit-0",
            "content": "import { useEffect, useRef, useState } from 'react'\nimport { IFileList } from 'src/preload/index.d'\n\ninterface ISearchFile {\n  fileList: IFileList\n  openFile: (filePath: string) => void\n  closeSearchFile: () => void\n}\nconst mapFiles = (fileList: IFileList) => {\n  const files = fileList.map((file, index) => {\n    return (\n      <li key={file.filePath} className={index === 0 ? 'active' : ''}>\n        <span>{file.fileName}</span>\n      </li>\n    )\n  })\n  return files\n}\nexport const SearchFile: React.FC<ISearchFile> = ({ fileList, openFile, closeSearchFile }) => {\n  const [active, setActive] = useState(0)\n  const iptRef = useRef<HTMLInputElement>(null)\n  const filesContainer = useRef<HTMLUListElement>(null)\n\n  const [files, setFiles] = useState(mapFiles(fileList))\n\n  useEffect(() => {\n    // 在active更新后执行，否则不会按照你的预定的去\n    const lis = filesContainer.current?.children\n    if (lis) {\n      ;[...lis].forEach((li, index) => {\n        li.classList.remove('active')\n      })\n      const target = lis[active]\n      target.classList.add('active')\n      const io = new IntersectionObserver((entries) => {\n        entries.forEach((entrie) => {\n          //如果不可见,就需要向上滚动或者向下滚动\n          if (entrie.intersectionRatio < 0.5) {\n            if (active > 8) target?.scrollIntoView(false)\n            else target?.scrollIntoView(true)\n          }\n          // 不管是否可见，操作完就移除观察\n          io.unobserve(target)\n        })\n      })\n      io.observe(target)\n    }\n  }, [active])\n  useEffect(() => {\n    iptRef.current?.focus()\n    const hanleSelect = (e: KeyboardEvent) => {\n      const ARROW_DOWN = 'ArrowDown'\n      const ARROW_UP = 'ArrowUp'\n      if (e.code === ARROW_UP) {\n        if (!files[active - 1]) {\n          setActive(files.length - 1)\n        } else {\n          setActive(active - 1)\n        }\n      }\n      if (e.code === ARROW_DOWN) {\n        if (!files[active + 1]) {\n          setActive(0)\n        } else {\n          setActive(active + 1)\n        }\n      }\n      if (e.code === 'Enter') {\n        const filePath = files[active]?.key as string\n        filePath && openFile(filePath)\n        closeSearchFile()\n      }\n    }\n    document.addEventListener('keydown', hanleSelect)\n    return () => document.removeEventListener('keydown', hanleSelect)\n    // 因为处理函数里面有依赖到active，所以必须传递这个依赖进去\n  }, [active, files])\n  const updateFiles = () => {\n    const searchStr = iptRef.current?.value || ''\n    const newFileList = fileList.filter((file) => {\n      if (file.fileName.toLocaleLowerCase().includes(searchStr.toLocaleLowerCase())) return true\n      else return false\n    })\n    setFiles(mapFiles(newFileList))\n    setActive(0)\n  }\n  return (\n    <div className=\"search-file \">\n      <div>\n        <span>{active}</span>\n        <input placeholder=\"\" onChange={updateFiles} ref={iptRef} type=\"text\" />\n      </div>\n      <ul ref={filesContainer}>{files}</ul>\n    </div>\n  )\n}\n"
        }
    ]
}