{
  "sourceFile": "src/main/useMenu.ts",
  "activeCommit": 0,
  "commits": [
    {
      "activePatchIndex": 13,
      "patches": [
        {
          "date": 1665645961862,
          "content": "Index: \n===================================================================\n--- \n+++ \n"
        },
        {
          "date": 1665652477055,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,62 +1,92 @@\n-import { app, BrowserWindow, Menu } from \"electron\"\n-import { readFileSync } from \"fs\"\n-import { UPDATE_CONTENT } from \"./constant\"\n-import { openFileSelector } from \"./openFile\"\n-const openFile = async (window:BrowserWindow) =>{\n-    const paths = await openFileSelector(window)\n-    if(paths) {\n-      const path = paths[0]\n-      const content = readFileSync(path,'utf-8')\n-      window.webContents.send(UPDATE_CONTENT,content)\n-    } \n+import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\n+import { readFileSync } from 'fs'\n+import { UPDATE_CONTENT } from './constant'\n+import { openFileSelector } from './openFile'\n+const openFile = async (window: BrowserWindow) => {\n+  const paths = await openFileSelector(window)\n+  if (paths) {\n+    const path = paths[0]\n+    const content = readFileSync(path, 'utf-8')\n+    window.webContents.send(UPDATE_CONTENT, content)\n   }\n-export const useMenu = (window:BrowserWindow) => {\n-    const menu = Menu.buildFromTemplate([\n-        {\n-          label: app.name,\n-          submenu: [\n-            {\n-              click: () => {},\n-              label: 'Increment'\n-            },\n-            {\n-              click: () => {},\n-              label: 'Decrement'\n-            }\n-          ]\n-        },\n-        {\n-          label: '文件',\n-          submenu: [\n-            {\n-              click: () => {},\n-              label: '新建',\n-              accelerator: 'Shift+CmdOrCtrl+H'\n-            },\n-            {\n-              click: () => {},\n-              label: '新建标签页',\n-              accelerator: 'Shift+CmdOrCtrl+H'\n-            },\n-            {\n-              label: '打开',\n-              click: ()=>{openFile(window)}\n-            }\n-          ]\n-        },\n-        {\n-          label: '显示',\n-          submenu: [\n-            {\n-              click: () => {},\n-              label: '侧边栏'\n\\ No newline at end of file\n-            },\n-            {\n-              click: () => {},\n-              label: '工具栏'\n-            }\n-          ]\n-        }\n-      ])\n-      Menu.setApplicationMenu(menu)\n-}\n+}\n+interface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n+  selector?: string\n+  submenu?: DarwinMenuItemConstructorOptions[] | Menu\n+}\n+const aboutMenuTemplate: DarwinMenuItemConstructorOptions = {\n+  label: 'Electron',\n+  submenu: [\n+    //下一层子菜单\n+    { label: 'Services' },\n+    //分割线\n+    { type: 'separator' },\n+    { label: 'Show All', selector: 'unhideAllApplications:' },\n+    {\n+      label: 'Quit',\n+      //快捷键\n+      accelerator: 'Command+Q',\n+      //点击事件\n+      click: () => {\n+        app.quit()\n+      }\n+    }\n+  ]\n+}\n+const editMenuTemplate: DarwinMenuItemConstructorOptions = {\n+  label: 'Edit',\n+  submenu: [\n+    { label: 'Cut', accelerator: 'Command+X', selector: 'cut:' },\n+    { label: 'Copy', accelerator: 'Command+C', selector: 'copy:' },\n+    { label: 'Paste', accelerator: 'Command+V', selector: 'paste:' },\n+    {\n+      label: 'new BrowserWindow',\n+      click: () => {}\n+    }\n+  ]\n+}\n+const viewMenuTemplate: DarwinMenuItemConstructorOptions= {\n+  label: 'View',\n+  submenu: [\n+    {\n+      label: 'Reload',\n+      accelerator: 'Command+R',\n+      //刷新页面\n+      click: () => {\n+        // this.mainWindow.webContents.reload();\n+      }\n+    },\n+    {\n+      label: 'Toggle Full Screen',\n+      accelerator: 'Ctrl+Command+F',\n+      //全屏\n+      click: () => {\n+        // this.mainWindow.setFullScreen(!this.mainWindow.isFullScreen());\n+      }\n+    },\n+    {\n+      label: 'Toggle Developer Tools',\n+      accelerator: 'Alt+Command+I',\n+      //打开开发工具\n+      click: () => {\n+        // this.mainWindow.webContents.toggleDevTools();\n+      }\n+    }\n+  ]\n+}\n+const helpMenuTemplate : DarwinMenuItemConstructorOptions= {\n+  label: 'Help',\n+  submenu: [\n+    {\n+      label: 'Learn More',\n+      click() {\n+        // shell.openExternal('https://electronjs.org');\n+      }\n+    }\n+  ]\n+}\n+const template: DarwinMenuItemConstructorOptions[] = [aboutMenuTemplate,editMenuTemplate,viewMenuTemplate,helpMenuTemplate]\n+export const useMenu = (window: BrowserWindow) => {\n+  const menu = Menu.buildFromTemplate(template)\n+  Menu.setApplicationMenu(menu)\n+}\n"
        },
        {
          "date": 1665652560998,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n       click: () => {}\n     }\n   ]\n }\n-const viewMenuTemplate: DarwinMenuItemConstructorOptions= {\n+const viewMenuTemplate: DarwinMenuItemConstructorOptions = {\n   label: 'View',\n   submenu: [\n     {\n       label: 'Reload',\n@@ -73,9 +73,9 @@\n       }\n     }\n   ]\n }\n-const helpMenuTemplate : DarwinMenuItemConstructorOptions= {\n+const helpMenuTemplate: DarwinMenuItemConstructorOptions = {\n   label: 'Help',\n   submenu: [\n     {\n       label: 'Learn More',\n@@ -84,9 +84,14 @@\n       }\n     }\n   ]\n }\n-const template: DarwinMenuItemConstructorOptions[] = [aboutMenuTemplate,editMenuTemplate,viewMenuTemplate,helpMenuTemplate]\n+const template: DarwinMenuItemConstructorOptions[] = [\n+  aboutMenuTemplate,\n+  editMenuTemplate,\n+  viewMenuTemplate,\n+  helpMenuTemplate\n+]\n export const useMenu = (window: BrowserWindow) => {\n   const menu = Menu.buildFromTemplate(template)\n   Menu.setApplicationMenu(menu)\n }\n"
        },
        {
          "date": 1665652780714,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,13 @@\n import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\n import { readFileSync } from 'fs'\n import { UPDATE_CONTENT } from './constant'\n import { openFileSelector } from './openFile'\n+\n+/* \n+快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n+快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n+*/\n const openFile = async (window: BrowserWindow) => {\n   const paths = await openFileSelector(window)\n   if (paths) {\n     const path = paths[0]\n@@ -77,8 +82,14 @@\n const helpMenuTemplate: DarwinMenuItemConstructorOptions = {\n   label: 'Help',\n   submenu: [\n     {\n+      label: '&设置',\n+      accelerator: 'Ctrl+S',\n+      click: () => {\n+        createSettingWindow();\n+      },\n+    {\n       label: 'Learn More',\n       click() {\n         // shell.openExternal('https://electronjs.org');\n       }\n@@ -94,4 +105,8 @@\n export const useMenu = (window: BrowserWindow) => {\n   const menu = Menu.buildFromTemplate(template)\n   Menu.setApplicationMenu(menu)\n }\n+function createSettingWindow() {\n+  throw new Error('Function not implemented.')\n+}\n+\n"
        },
        {
          "date": 1665652798963,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,10 +85,11 @@\n     {\n       label: '&设置',\n       accelerator: 'Ctrl+S',\n       click: () => {\n-        createSettingWindow();\n-      },\n+        createSettingWindow()\n+      }\n+    },\n     {\n       label: 'Learn More',\n       click() {\n         // shell.openExternal('https://electronjs.org');\n@@ -108,5 +109,4 @@\n }\n function createSettingWindow() {\n   throw new Error('Function not implemented.')\n }\n-\n"
        },
        {
          "date": 1665652847907,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n     {\n       label: '&设置',\n       accelerator: 'Ctrl+S',\n       click: () => {\n-        createSettingWindow()\n+        // createSettingWindow()\n       }\n     },\n     {\n       label: 'Learn More',\n@@ -105,8 +105,5 @@\n ]\n export const useMenu = (window: BrowserWindow) => {\n   const menu = Menu.buildFromTemplate(template)\n   Menu.setApplicationMenu(menu)\n-}\n-function createSettingWindow() {\n-  throw new Error('Function not implemented.')\n-}\n+}\n\\ No newline at end of file\n"
        },
        {
          "date": 1665653060144,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,92 +18,107 @@\n interface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n   selector?: string\n   submenu?: DarwinMenuItemConstructorOptions[] | Menu\n }\n-const aboutMenuTemplate: DarwinMenuItemConstructorOptions = {\n-  label: 'Electron',\n-  submenu: [\n-    //下一层子菜单\n-    { label: 'Services' },\n-    //分割线\n-    { type: 'separator' },\n-    { label: 'Show All', selector: 'unhideAllApplications:' },\n-    {\n-      label: 'Quit',\n-      //快捷键\n-      accelerator: 'Command+Q',\n-      //点击事件\n-      click: () => {\n-        app.quit()\n+\n+export const useMenu = (window: BrowserWindow) => {\n+  const fileMenuTemplate:DarwinMenuItemConstructorOptions = {\n+    label:'文件',\n+    submenu:[\n+      {\n+        label:'新建',\n+        click:()=>{}\n+      },\n+      {\n+        label:'打开',\n+        click:()=>{openFile(window)}\n       }\n-    }\n-  ]\n-}\n-const editMenuTemplate: DarwinMenuItemConstructorOptions = {\n-  label: 'Edit',\n-  submenu: [\n-    { label: 'Cut', accelerator: 'Command+X', selector: 'cut:' },\n-    { label: 'Copy', accelerator: 'Command+C', selector: 'copy:' },\n-    { label: 'Paste', accelerator: 'Command+V', selector: 'paste:' },\n-    {\n-      label: 'new BrowserWindow',\n-      click: () => {}\n-    }\n-  ]\n-}\n-const viewMenuTemplate: DarwinMenuItemConstructorOptions = {\n-  label: 'View',\n-  submenu: [\n-    {\n-      label: 'Reload',\n-      accelerator: 'Command+R',\n-      //刷新页面\n-      click: () => {\n-        // this.mainWindow.webContents.reload();\n+    ]\n+  }\n+  const aboutMenuTemplate: DarwinMenuItemConstructorOptions = {\n+    label: 'Electron',\n+    submenu: [\n+      //下一层子菜单\n+      { label: 'Services' },\n+      //分割线\n+      { type: 'separator' },\n+      { label: 'Show All', selector: 'unhideAllApplications:' },\n+      {\n+        label: 'Quit',\n+        //快捷键\n+        accelerator: 'Command+Q',\n+        //点击事件\n+        click: () => {\n+          app.quit()\n+        }\n       }\n-    },\n-    {\n-      label: 'Toggle Full Screen',\n-      accelerator: 'Ctrl+Command+F',\n-      //全屏\n-      click: () => {\n-        // this.mainWindow.setFullScreen(!this.mainWindow.isFullScreen());\n+    ]\n+  }\n+  const editMenuTemplate: DarwinMenuItemConstructorOptions = {\n+    label: 'Edit',\n+    submenu: [\n+      { label: 'Cut', accelerator: 'Command+X', selector: 'cut:' },\n+      { label: 'Copy', accelerator: 'Command+C', selector: 'copy:' },\n+      { label: 'Paste', accelerator: 'Command+V', selector: 'paste:' },\n+      {\n+        label: 'new BrowserWindow',\n\\ No newline at end of file\n+        click: () => {}\n       }\n-    },\n-    {\n-      label: 'Toggle Developer Tools',\n-      accelerator: 'Alt+Command+I',\n-      //打开开发工具\n-      click: () => {\n-        // this.mainWindow.webContents.toggleDevTools();\n+    ]\n+  }\n+  const viewMenuTemplate: DarwinMenuItemConstructorOptions = {\n+    label: 'View',\n+    submenu: [\n+      {\n+        label: 'Reload',\n+        accelerator: 'Command+R',\n+        //刷新页面\n+        click: () => {\n+          // this.mainWindow.webContents.reload();\n+        }\n+      },\n+      {\n+        label: 'Toggle Full Screen',\n+        accelerator: 'Ctrl+Command+F',\n+        //全屏\n+        click: () => {\n+          // this.mainWindow.setFullScreen(!this.mainWindow.isFullScreen());\n+        }\n+      },\n+      {\n+        label: 'Toggle Developer Tools',\n+        accelerator: 'Alt+Command+I',\n+        //打开开发工具\n+        click: () => {\n+          // this.mainWindow.webContents.toggleDevTools();\n+        }\n       }\n-    }\n-  ]\n-}\n-const helpMenuTemplate: DarwinMenuItemConstructorOptions = {\n-  label: 'Help',\n-  submenu: [\n-    {\n-      label: '&设置',\n-      accelerator: 'Ctrl+S',\n-      click: () => {\n-        // createSettingWindow()\n+    ]\n+  }\n+  const helpMenuTemplate: DarwinMenuItemConstructorOptions = {\n+    label: 'Help',\n+    submenu: [\n+      {\n+        label: '&设置',\n+        accelerator: 'Ctrl+S',\n+        click: () => {\n+          // createSettingWindow()\n+        }\n+      },\n+      {\n+        label: 'Learn More',\n+        click() {\n+          // shell.openExternal('https://electronjs.org');\n+        }\n       }\n-    },\n-    {\n-      label: 'Learn More',\n-      click() {\n-        // shell.openExternal('https://electronjs.org');\n-      }\n-    }\n+    ]\n+  }\n+  const template: DarwinMenuItemConstructorOptions[] = [\n+    fileMenuTemplate,\n+    aboutMenuTemplate,\n+    editMenuTemplate,\n+    viewMenuTemplate,\n+    helpMenuTemplate\n   ]\n-}\n-const template: DarwinMenuItemConstructorOptions[] = [\n-  aboutMenuTemplate,\n-  editMenuTemplate,\n-  viewMenuTemplate,\n-  helpMenuTemplate\n-]\n-export const useMenu = (window: BrowserWindow) => {\n   const menu = Menu.buildFromTemplate(template)\n   Menu.setApplicationMenu(menu)\n-}\n+}\n"
        },
        {
          "date": 1665672745419,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,12 @@\n   const paths = await openFileSelector(window)\n   if (paths) {\n     const path = paths[0]\n     const content = readFileSync(path, 'utf-8')\n-    window.webContents.send(UPDATE_CONTENT, content)\n+    window.webContents.send(UPDATE_CONTENT, {\n+      path,\n+      content\n+    })\n   }\n }\n interface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n   selector?: string\n@@ -120,5 +123,5 @@\n     helpMenuTemplate\n   ]\n   const menu = Menu.buildFromTemplate(template)\n   Menu.setApplicationMenu(menu)\n-}\n\\ No newline at end of file\n+}\n"
        },
        {
          "date": 1665737050566,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n       }\n     ]\n   }\n   const aboutMenuTemplate: DarwinMenuItemConstructorOptions = {\n-    label: 'Electron',\n+    label: 'About',\n     submenu: [\n       //下一层子菜单\n       { label: 'Services' },\n       //分割线\n"
        },
        {
          "date": 1665737096043,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n   submenu?: DarwinMenuItemConstructorOptions[] | Menu\n }\n \n export const useMenu = (window: BrowserWindow) => {\n+  const defaultMenuTemplate = {}\n   const fileMenuTemplate:DarwinMenuItemConstructorOptions = {\n     label:'文件',\n     submenu:[\n       {\n@@ -115,8 +116,9 @@\n       }\n     ]\n   }\n   const template: DarwinMenuItemConstructorOptions[] = [\n+    defaultMenuTemplate,\n     fileMenuTemplate,\n     aboutMenuTemplate,\n     editMenuTemplate,\n     viewMenuTemplate,\n"
        },
        {
          "date": 1665737121070,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,11 @@\n   submenu?: DarwinMenuItemConstructorOptions[] | Menu\n }\n \n export const useMenu = (window: BrowserWindow) => {\n-  const defaultMenuTemplate = {}\n+  const defaultMenuTemplate = {\n+    lable:'app'\n+  }\n   const fileMenuTemplate:DarwinMenuItemConstructorOptions = {\n     label:'文件',\n     submenu:[\n       {\n"
        },
        {
          "date": 1665737139491,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n }\n \n export const useMenu = (window: BrowserWindow) => {\n   const defaultMenuTemplate = {\n-    lable:'app'\n+    lable:'app',\n+    submenu:[]\n   }\n   const fileMenuTemplate:DarwinMenuItemConstructorOptions = {\n     label:'文件',\n     submenu:[\n"
        },
        {
          "date": 1665737158249,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,19 @@\n }\n \n export const useMenu = (window: BrowserWindow) => {\n   const defaultMenuTemplate = {\n-    lable:'app',\n-    submenu:[]\n+    label:'文件',\n+    submenu:[\n+      {\n+        label:'新建',\n+        click:()=>{}\n+      },\n+      {\n+        label:'打开',\n+        click:()=>{openFile(window)}\n+      }\n+    ]\n   }\n   const fileMenuTemplate:DarwinMenuItemConstructorOptions = {\n     label:'文件',\n     submenu:[\n"
        },
        {
          "date": 1665737180767,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,18 +24,14 @@\n }\n \n export const useMenu = (window: BrowserWindow) => {\n   const defaultMenuTemplate = {\n-    label:'文件',\n+    label:app.name,\n     submenu:[\n       {\n         label:'新建',\n         click:()=>{}\n       },\n-      {\n-        label:'打开',\n-        click:()=>{openFile(window)}\n-      }\n     ]\n   }\n   const fileMenuTemplate:DarwinMenuItemConstructorOptions = {\n     label:'文件',\n"
        }
      ],
      "date": 1665645961862,
      "name": "Commit-0",
      "content": "import { app, BrowserWindow, Menu } from \"electron\"\nimport { readFileSync } from \"fs\"\nimport { UPDATE_CONTENT } from \"./constant\"\nimport { openFileSelector } from \"./openFile\"\nconst openFile = async (window:BrowserWindow) =>{\n    const paths = await openFileSelector(window)\n    if(paths) {\n      const path = paths[0]\n      const content = readFileSync(path,'utf-8')\n      window.webContents.send(UPDATE_CONTENT,content)\n    } \n  }\nexport const useMenu = (window:BrowserWindow) => {\n    const menu = Menu.buildFromTemplate([\n        {\n          label: app.name,\n          submenu: [\n            {\n              click: () => {},\n              label: 'Increment'\n            },\n            {\n              click: () => {},\n              label: 'Decrement'\n            }\n          ]\n        },\n        {\n          label: '文件',\n          submenu: [\n            {\n              click: () => {},\n              label: '新建',\n              accelerator: 'Shift+CmdOrCtrl+H'\n            },\n            {\n              click: () => {},\n              label: '新建标签页',\n              accelerator: 'Shift+CmdOrCtrl+H'\n            },\n            {\n              label: '打开',\n              click: ()=>{openFile(window)}\n            }\n          ]\n        },\n        {\n          label: '显示',\n          submenu: [\n            {\n              click: () => {},\n              label: '侧边栏'\n            },\n            {\n              click: () => {},\n              label: '工具栏'\n            }\n          ]\n        }\n      ])\n      Menu.setApplicationMenu(menu)\n}"
    }
  ]
}
