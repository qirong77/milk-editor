{
    "sourceFile": "src/main/events/helper/getDirectoryTree.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1669998435539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1670077573066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     level,\n     isDir: false,\n     opened: false\n   }\n-  if (!lstatSync(path).isDirectory()) return node\n+  if (!lstatSync(path).isDirectory()) return node\n   node.isDir = true\n   readdirSync(path).forEach((fileName) => {\n     if (EXCEPT_FILE.test(fileName)) return\n     const nextPath = resolve(path, fileName)\n"
                },
                {
                    "date": 1670082309870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     children: [],\n     path,\n     level,\n     isDir: false,\n-    opened: false\n+    opened: true\n   }\n   if (!lstatSync(path).isDirectory()) return node\n   node.isDir = true\n   readdirSync(path).forEach((fileName) => {\n"
                }
            ],
            "date": 1669998435539,
            "name": "Commit-0",
            "content": "import { existsSync, lstatSync, readdirSync } from 'fs'\nimport { basename, resolve } from 'path'\nimport { DirTree } from '../../../common/types'\n\nimport { defaultPath, EXCEPT_FILE } from '../../config'\n\nexport const getDirectoryTree = (path: string, level = 0) => {\n  if (!existsSync(path)) path = defaultPath\n  const node: DirTree = {\n    fileName: basename(path),\n    children: [],\n    path,\n    level,\n    isDir: false,\n    opened: false\n  }\n  if (!lstatSync(path).isDirectory()) return node\n  node.isDir = true\n  readdirSync(path).forEach((fileName) => {\n    if (EXCEPT_FILE.test(fileName)) return\n    const nextPath = resolve(path, fileName)\n    const newNode = getDirectoryTree(nextPath, level + 1)\n    newNode && node.children.push(newNode)\n  })\n  return node\n}\n"
        }
    ]
}