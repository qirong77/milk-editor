{
    "sourceFile": "src/main/electron/createWindow.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1670001426103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1670001426103,
            "name": "Commit-0",
            "content": "import { is } from '@electron-toolkit/utils'\nimport { BrowserWindow, shell } from 'electron'\nimport path from 'path'\n\nexport const createWindow = () => {\n  // Create the browser window.\n  const window = new BrowserWindow({\n    width: 900,\n    height: 670,\n    show: false,\n    autoHideMenuBar: true,\n    x: 120,\n    y: -25,\n    webPreferences: {\n      preload: path.join(__dirname, '../preload/index.js'),\n      sandbox: false\n    }\n  })\n\n  window.on('ready-to-show', () => {\n    window.show()\n  })\n  window.webContents.setWindowOpenHandler((details) => {\n    shell.openExternal(details.url)\n    return { action: 'deny' }\n  })\n\n  // HMR for renderer base on electron-vite cli.\n  // Load the remote URL for development or the local html file for production.\n  if (is.dev && process.env['ELECTRON_RENDERER_URL']) {\n    window.loadURL(process.env['ELECTRON_RENDERER_URL'])\n  } else {\n    window.loadFile(path.join(__dirname, '../renderer/index.html'))\n  }\n  return window\n}\n"
        }
    ]
}