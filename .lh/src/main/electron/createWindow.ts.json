{
    "sourceFile": "src/main/electron/createWindow.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1665755537992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1665755537992,
            "name": "Commit-0",
            "content": "import { is } from \"@electron-toolkit/utils\"\nimport { BrowserWindow, shell } from \"electron\"\nimport path from \"path\"\nimport { onIpcMainEvents } from \"./onIpcMainEvents\"\nimport { useMenu } from \"./useMenu\"\n\nexport const createWindow = () =>{\n    const mainWindow = new BrowserWindow({\n        width: 900,\n        height: 670,\n        show: false,\n        // 关闭默认的上面那栏\n        frame: false,\n        autoHideMenuBar: true,\n        webPreferences: {\n          preload: path.join(__dirname, '../preload/index.js'),\n          sandbox: false\n        }\n      })\n      useMenu(mainWindow)\n      // 官方是在createWindow的位置事件监听\n      onIpcMainEvents(mainWindow)\n      mainWindow.on('ready-to-show', () => {\n        mainWindow.show()\n      })\n      mainWindow.webContents.setWindowOpenHandler((details) => {\n        shell.openExternal(details.url)\n        return { action: 'deny' }\n      })\n      // 判断是加载什么，开发模式就是加载vite的地址\n      if (is.dev && process.env['ELECTRON_RENDERER_URL']) {\n        mainWindow.loadURL(process.env['ELECTRON_RENDERER_URL'])\n      } else {\n        mainWindow.loadFile(path.join(__dirname, '../renderer/index.html'))\n      }\n}"
        }
    ]
}