{
    "sourceFile": "src/main/electron/fileHelper.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1665989999428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1665989999428,
            "name": "Commit-0",
            "content": "import { BrowserWindow, dialog } from \"electron\"\nimport { readFileSync } from \"fs\"\nimport { OPEN_NEW_FILE } from \"./events/constant\"\n\nexport async function openFileSelector(window: BrowserWindow) {\n    const { canceled, filePaths } = await dialog.showOpenDialog(window)\n    if (canceled) {\n      return\n    } else {\n      return filePaths[0]\n    }\n  }\nexport const openNewFile = (filePath: string, window: BrowserWindow) => {\n    const fileContent = readFileSync(filePath, 'utf-8')\n    window.webContents.send(OPEN_NEW_FILE, {\n      filePath,\n      fileContent\n    })\n  }"
        }
    ]
}