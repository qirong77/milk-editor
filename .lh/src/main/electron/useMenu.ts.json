{
    "sourceFile": "src/main/electron/useMenu.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1665737701969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1665737725600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\n import { readFileSync } from 'fs'\n import { UPDATE_CONTENT } from '../constant'\n-import { openFileSelector } from './openFile'\n+import { openFileSelector } from './openFileDialog'\n \n /* \n 快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n 快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n"
                },
                {
                    "date": 1665756724990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\n import { readFileSync } from 'fs'\n-import { UPDATE_CONTENT } from '../constant'\n+import { OPEN_NEW_FILE } from '../constant'\n import { openFileSelector } from './openFileDialog'\n \n /* \n 快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n@@ -11,9 +11,9 @@\n   const paths = await openFileSelector(window)\n   if (paths) {\n     const path = paths[0]\n     const content = readFileSync(path, 'utf-8')\n-    window.webContents.send(UPDATE_CONTENT, {\n+    window.webContents.send(OPEN_NEW_FILE, {\n       path,\n       content\n     })\n   }\n"
                },
                {
                    "date": 1665764195881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   if (paths) {\n     const path = paths[0]\n     const content = readFileSync(path, 'utf-8')\n     window.webContents.send(OPEN_NEW_FILE, {\n-      path,\n+      filepath,\n       content\n     })\n   }\n }\n"
                },
                {
                    "date": 1665764205248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,12 @@\n */\n const openFile = async (window: BrowserWindow) => {\n   const paths = await openFileSelector(window)\n   if (paths) {\n-    const path = paths[0]\n+    const filePath = paths[0]\n     const content = readFileSync(path, 'utf-8')\n     window.webContents.send(OPEN_NEW_FILE, {\n-      filepath,\n+      filePath,\n       content\n     })\n   }\n }\n"
                },
                {
                    "date": 1665764212086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,12 +10,12 @@\n const openFile = async (window: BrowserWindow) => {\n   const paths = await openFileSelector(window)\n   if (paths) {\n     const filePath = paths[0]\n-    const content = readFileSync(path, 'utf-8')\n+    const fileContent = readFileSync(path, 'utf-8')\n     window.webContents.send(OPEN_NEW_FILE, {\n       filePath,\n-      content\n+      fileContent\n     })\n   }\n }\n interface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n"
                },
                {
                    "date": 1665899396999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\n import { readFileSync } from 'fs'\n import { OPEN_NEW_FILE } from '../constant'\n-import { openFileSelector } from './openFileDialog'\n+import { openFileSelector } from './utils'\n \n /* \n 快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n 快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n@@ -10,40 +10,49 @@\n const openFile = async (window: BrowserWindow) => {\n   const paths = await openFileSelector(window)\n   if (paths) {\n     const filePath = paths[0]\n-    const fileContent = readFileSync(path, 'utf-8')\n+    const fileContent = readFileSync(filePath, 'utf-8')\n     window.webContents.send(OPEN_NEW_FILE, {\n       filePath,\n       fileContent\n     })\n   }\n }\n+const openNewFile = (filePath: string, window: BrowserWindow) => {\n+  const fileContent = readFileSync(filePath, 'utf-8')\n+  window.webContents.send(OPEN_NEW_FILE, {\n+    filePath,\n+    fileContent\n+  })\n+}\n interface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n   selector?: string\n   submenu?: DarwinMenuItemConstructorOptions[] | Menu\n }\n \n export const useMenu = (window: BrowserWindow) => {\n   const defaultMenuTemplate = {\n-    label:app.name,\n-    submenu:[\n+    label: app.name,\n+    submenu: [\n       {\n-        label:'新建',\n-        click:()=>{}\n-      },\n+        label: '新建',\n+        click: () => {}\n+      }\n     ]\n   }\n-  const fileMenuTemplate:DarwinMenuItemConstructorOptions = {\n-    label:'文件',\n-    submenu:[\n+  const fileMenuTemplate: DarwinMenuItemConstructorOptions = {\n+    label: '文件',\n+    submenu: [\n       {\n-        label:'新建',\n-        click:()=>{}\n+        label: '新建',\n+        click: () => {}\n       },\n       {\n-        label:'打开',\n-        click:()=>{openFile(window)}\n+        label: '打开',\n+        click: () => {\n+          openFile(window)\n+        }\n       }\n     ]\n   }\n   const aboutMenuTemplate: DarwinMenuItemConstructorOptions = {\n"
                },
                {
                    "date": 1665899587606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,22 @@\n import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\n import { readFileSync } from 'fs'\n import { OPEN_NEW_FILE } from '../constant'\n-import { openFileSelector } from './utils'\n+import { openFileSelector, openNewFile } from './utils'\n \n /* \n 快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n 快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n */\n-const openFile = async (window: BrowserWindow) => {\n+\n+const clickOpenFile = async (window: BrowserWindow) => {\n   const paths = await openFileSelector(window)\n   if (paths) {\n     const filePath = paths[0]\n-    const fileContent = readFileSync(filePath, 'utf-8')\n-    window.webContents.send(OPEN_NEW_FILE, {\n-      filePath,\n-      fileContent\n-    })\n+    openNewFile(filePath, window)\n   }\n }\n-const openNewFile = (filePath: string, window: BrowserWindow) => {\n-  const fileContent = readFileSync(filePath, 'utf-8')\n-  window.webContents.send(OPEN_NEW_FILE, {\n-    filePath,\n-    fileContent\n-  })\n-}\n+\n interface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n   selector?: string\n   submenu?: DarwinMenuItemConstructorOptions[] | Menu\n }\n@@ -49,9 +40,9 @@\n       },\n       {\n         label: '打开',\n         click: () => {\n-          openFile(window)\n+          clickOpenFile(window)\n         }\n       }\n     ]\n   }\n"
                },
                {
                    "date": 1665899594752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,5 @@\n import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\n-import { readFileSync } from 'fs'\n-import { OPEN_NEW_FILE } from '../constant'\n import { openFileSelector, openNewFile } from './utils'\n \n /* \n 快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n"
                },
                {
                    "date": 1665908736552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,15 +65,41 @@\n   }\n   const editMenuTemplate: DarwinMenuItemConstructorOptions = {\n     label: 'Edit',\n     submenu: [\n-      { label: 'Cut', accelerator: 'Command+X', selector: 'cut:' },\n-      { label: 'Copy', accelerator: 'Command+C', selector: 'copy:' },\n-      { label: 'Paste', accelerator: 'Command+V', selector: 'paste:' },\n       {\n-        label: 'new BrowserWindow',\n-        click: () => {}\n-      }\n+        label: 'Undo',\n+        accelerator: 'Command+Z',\n+        selector: 'undo:'\n+      },\n+      {\n+        label: 'Redo',\n+        accelerator: 'Shift+Command+Z',\n+        selector: 'redo:'\n+      },\n+      {\n+        type: 'separator'\n+      },\n+      {\n+        label: 'Cut',\n+        accelerator: 'Command+X',\n+        selector: 'cut:'\n+      },\n+      {\n+        label: 'Copy',\n+        accelerator: 'Command+C',\n+        selector: 'copy:'\n+      },\n+      {\n+        label: 'Paste',\n+        accelerator: 'Command+V',\n+        selector: 'paste:'\n+      },\n+      {\n+        label: 'Select All',\n+        accelerator: 'Command+A',\n+        selector: 'selectAll:'\n+      },\n     ]\n   }\n   const viewMenuTemplate: DarwinMenuItemConstructorOptions = {\n     label: 'View',\n"
                },
                {
                    "date": 1665909095985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,27 +43,8 @@\n         }\n       }\n     ]\n   }\n-  const aboutMenuTemplate: DarwinMenuItemConstructorOptions = {\n-    label: 'About',\n-    submenu: [\n-      //下一层子菜单\n-      { label: 'Services' },\n-      //分割线\n-      { type: 'separator' },\n-      { label: 'Show All', selector: 'unhideAllApplications:' },\n-      {\n-        label: 'Quit',\n-        //快捷键\n-        accelerator: 'Command+Q',\n-        //点击事件\n-        click: () => {\n-          app.quit()\n-        }\n-      }\n-    ]\n-  }\n   const editMenuTemplate: DarwinMenuItemConstructorOptions = {\n     label: 'Edit',\n     submenu: [\n       {\n@@ -150,9 +131,8 @@\n   }\n   const template: DarwinMenuItemConstructorOptions[] = [\n     defaultMenuTemplate,\n     fileMenuTemplate,\n-    aboutMenuTemplate,\n     editMenuTemplate,\n     viewMenuTemplate,\n     helpMenuTemplate\n   ]\n"
                },
                {
                    "date": 1665988214135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n 快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n 快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n */\n \n-const clickOpenFile = async (window: BrowserWindow) => {\n+const clickOpenFile = async (window: BrowserWindow,path?:string) => {\n   const paths = await openFileSelector(window)\n   if (paths) {\n     const filePath = paths[0]\n     openNewFile(filePath, window)\n"
                },
                {
                    "date": 1665988242740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n 快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n 快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n */\n \n-const clickOpenFile = async (window: BrowserWindow,path?:string) => {\n+export const clickOpenFile = async (window: BrowserWindow,path?:string) => {\n   const paths = await openFileSelector(window)\n   if (paths) {\n     const filePath = paths[0]\n     openNewFile(filePath, window)\n"
                },
                {
                    "date": 1665988553976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,18 @@\n import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\n-import { openFileSelector, openNewFile } from './utils'\n+import { openFileSelector, openNewFile } from './fileHelper'\n \n /* \n 快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n 快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n */\n \n export const clickOpenFile = async (window: BrowserWindow,path?:string) => {\n-  const paths = await openFileSelector(window)\n-  if (paths) {\n-    const filePath = paths[0]\n-    openNewFile(filePath, window)\n+  if(path) {\n+\n+  } else {\n+    const paths = await openFileSelector(window)\n+    paths && openNewFile(paths[0],window)\n   }\n }\n \n interface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n"
                },
                {
                    "date": 1665988559043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,14 +5,13 @@\n 快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n 快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n */\n \n-export const clickOpenFile = async (window: BrowserWindow,path?:string) => {\n-  if(path) {\n-\n+export const clickOpenFile = async (window: BrowserWindow, path?: string) => {\n+  if (path) {\n   } else {\n     const paths = await openFileSelector(window)\n-    paths && openNewFile(paths[0],window)\n+    paths && openNewFile(paths[0], window)\n   }\n }\n \n interface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n@@ -79,9 +78,9 @@\n       {\n         label: 'Select All',\n         accelerator: 'Command+A',\n         selector: 'selectAll:'\n-      },\n+      }\n     ]\n   }\n   const viewMenuTemplate: DarwinMenuItemConstructorOptions = {\n     label: 'View',\n"
                },
                {
                    "date": 1665988604763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n */\n \n export const clickOpenFile = async (window: BrowserWindow, path?: string) => {\n   if (path) {\n+    openNewFile(path,window)\n   } else {\n     const paths = await openFileSelector(window)\n     paths && openNewFile(paths[0], window)\n   }\n"
                },
                {
                    "date": 1665989999432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,142 +0,0 @@\n-import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\n-import { openFileSelector, openNewFile } from './fileHelper'\n-\n-/* \n-快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n-快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n-*/\n-\n-export const clickOpenFile = async (window: BrowserWindow, path?: string) => {\n-  if (path) {\n-    openNewFile(path,window)\n-  } else {\n-    const paths = await openFileSelector(window)\n-    paths && openNewFile(paths[0], window)\n-  }\n-}\n-\n-interface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n-  selector?: string\n-  submenu?: DarwinMenuItemConstructorOptions[] | Menu\n-}\n-\n-export const useMenu = (window: BrowserWindow) => {\n-  const defaultMenuTemplate = {\n-    label: app.name,\n-    submenu: [\n-      {\n-        label: '新建',\n-        click: () => {}\n-      }\n-    ]\n-  }\n-  const fileMenuTemplate: DarwinMenuItemConstructorOptions = {\n-    label: '文件',\n-    submenu: [\n-      {\n-        label: '新建',\n-        click: () => {}\n-      },\n-      {\n-        label: '打开',\n-        click: () => {\n-          clickOpenFile(window)\n-        }\n-      }\n-    ]\n-  }\n-  const editMenuTemplate: DarwinMenuItemConstructorOptions = {\n-    label: 'Edit',\n-    submenu: [\n-      {\n-        label: 'Undo',\n-        accelerator: 'Command+Z',\n-        selector: 'undo:'\n-      },\n-      {\n-        label: 'Redo',\n-        accelerator: 'Shift+Command+Z',\n-        selector: 'redo:'\n-      },\n-      {\n-        type: 'separator'\n-      },\n-      {\n-        label: 'Cut',\n-        accelerator: 'Command+X',\n-        selector: 'cut:'\n-      },\n-      {\n-        label: 'Copy',\n-        accelerator: 'Command+C',\n-        selector: 'copy:'\n-      },\n-      {\n-        label: 'Paste',\n-        accelerator: 'Command+V',\n-        selector: 'paste:'\n-      },\n-      {\n-        label: 'Select All',\n-        accelerator: 'Command+A',\n-        selector: 'selectAll:'\n-      }\n-    ]\n-  }\n-  const viewMenuTemplate: DarwinMenuItemConstructorOptions = {\n-    label: 'View',\n-    submenu: [\n-      {\n-        label: 'Reload',\n-        accelerator: 'Command+R',\n-        //刷新页面\n-        click: () => {\n-          // this.mainWindow.webContents.reload();\n-        }\n-      },\n-      {\n-        label: 'Toggle Full Screen',\n-        accelerator: 'Ctrl+Command+F',\n-        //全屏\n-        click: () => {\n-          // this.mainWindow.setFullScreen(!this.mainWindow.isFullScreen());\n-        }\n-      },\n-      {\n-        label: 'Toggle Developer Tools',\n-        accelerator: 'Alt+Command+I',\n-        //打开开发工具\n-        click: () => {\n-          // this.mainWindow.webContents.toggleDevTools();\n-        }\n-      }\n-    ]\n-  }\n-  const helpMenuTemplate: DarwinMenuItemConstructorOptions = {\n-    label: 'Help',\n-    submenu: [\n-      {\n-        label: '&设置',\n-        accelerator: 'Ctrl+S',\n-        click: () => {\n-          // createSettingWindow()\n-        }\n-      },\n-      {\n-        label: 'Learn More',\n-        click() {\n-          // shell.openExternal('https://electronjs.org');\n-        }\n-      }\n-    ]\n-  }\n-  const template: DarwinMenuItemConstructorOptions[] = [\n-    defaultMenuTemplate,\n-    fileMenuTemplate,\n-    editMenuTemplate,\n-    viewMenuTemplate,\n-    helpMenuTemplate\n-  ]\n-  const menu = Menu.buildFromTemplate(template)\n-  Menu.setApplicationMenu(menu)\n-}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1665737701969,
            "name": "Commit-0",
            "content": "import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron'\nimport { readFileSync } from 'fs'\nimport { UPDATE_CONTENT } from '../constant'\nimport { openFileSelector } from './openFile'\n\n/* \n快捷键无法使用问题：https://github.com/moose-team/friends/issues/123\n快捷键类型：https://juejin.cn/post/7116906625964720159#comment\n*/\nconst openFile = async (window: BrowserWindow) => {\n  const paths = await openFileSelector(window)\n  if (paths) {\n    const path = paths[0]\n    const content = readFileSync(path, 'utf-8')\n    window.webContents.send(UPDATE_CONTENT, {\n      path,\n      content\n    })\n  }\n}\ninterface DarwinMenuItemConstructorOptions extends MenuItemConstructorOptions {\n  selector?: string\n  submenu?: DarwinMenuItemConstructorOptions[] | Menu\n}\n\nexport const useMenu = (window: BrowserWindow) => {\n  const defaultMenuTemplate = {\n    label:app.name,\n    submenu:[\n      {\n        label:'新建',\n        click:()=>{}\n      },\n    ]\n  }\n  const fileMenuTemplate:DarwinMenuItemConstructorOptions = {\n    label:'文件',\n    submenu:[\n      {\n        label:'新建',\n        click:()=>{}\n      },\n      {\n        label:'打开',\n        click:()=>{openFile(window)}\n      }\n    ]\n  }\n  const aboutMenuTemplate: DarwinMenuItemConstructorOptions = {\n    label: 'About',\n    submenu: [\n      //下一层子菜单\n      { label: 'Services' },\n      //分割线\n      { type: 'separator' },\n      { label: 'Show All', selector: 'unhideAllApplications:' },\n      {\n        label: 'Quit',\n        //快捷键\n        accelerator: 'Command+Q',\n        //点击事件\n        click: () => {\n          app.quit()\n        }\n      }\n    ]\n  }\n  const editMenuTemplate: DarwinMenuItemConstructorOptions = {\n    label: 'Edit',\n    submenu: [\n      { label: 'Cut', accelerator: 'Command+X', selector: 'cut:' },\n      { label: 'Copy', accelerator: 'Command+C', selector: 'copy:' },\n      { label: 'Paste', accelerator: 'Command+V', selector: 'paste:' },\n      {\n        label: 'new BrowserWindow',\n        click: () => {}\n      }\n    ]\n  }\n  const viewMenuTemplate: DarwinMenuItemConstructorOptions = {\n    label: 'View',\n    submenu: [\n      {\n        label: 'Reload',\n        accelerator: 'Command+R',\n        //刷新页面\n        click: () => {\n          // this.mainWindow.webContents.reload();\n        }\n      },\n      {\n        label: 'Toggle Full Screen',\n        accelerator: 'Ctrl+Command+F',\n        //全屏\n        click: () => {\n          // this.mainWindow.setFullScreen(!this.mainWindow.isFullScreen());\n        }\n      },\n      {\n        label: 'Toggle Developer Tools',\n        accelerator: 'Alt+Command+I',\n        //打开开发工具\n        click: () => {\n          // this.mainWindow.webContents.toggleDevTools();\n        }\n      }\n    ]\n  }\n  const helpMenuTemplate: DarwinMenuItemConstructorOptions = {\n    label: 'Help',\n    submenu: [\n      {\n        label: '&设置',\n        accelerator: 'Ctrl+S',\n        click: () => {\n          // createSettingWindow()\n        }\n      },\n      {\n        label: 'Learn More',\n        click() {\n          // shell.openExternal('https://electronjs.org');\n        }\n      }\n    ]\n  }\n  const template: DarwinMenuItemConstructorOptions[] = [\n    defaultMenuTemplate,\n    fileMenuTemplate,\n    aboutMenuTemplate,\n    editMenuTemplate,\n    viewMenuTemplate,\n    helpMenuTemplate\n  ]\n  const menu = Menu.buildFromTemplate(template)\n  Menu.setApplicationMenu(menu)\n}\n"
        }
    ]
}